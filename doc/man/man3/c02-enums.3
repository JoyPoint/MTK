.TH "Enumerations." 3 "Mon Feb 1 2016" "MTK: Mimetic Methods Toolkit" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Enumerations. \- 
.PP
Enumerations\&.  

.SS "Enumerations"

.in +1c
.ti -1c
.RI "enum \fBmtk::MatrixStorage\fP { \fBmtk::MatrixStorage::DENSE\fP, \fBmtk::MatrixStorage::BANDED\fP, \fBmtk::MatrixStorage::CRS\fP }"
.br
.RI "\fIConsidered matrix storage schemes to implement sparse matrices\&. \fP"
.ti -1c
.RI "enum \fBmtk::MatrixOrdering\fP { \fBmtk::MatrixOrdering::ROW_MAJOR\fP, \fBmtk::MatrixOrdering::COL_MAJOR\fP }"
.br
.RI "\fIConsidered matrix ordering (for Fortran purposes)\&. \fP"
.ti -1c
.RI "enum \fBmtk::FieldNature\fP { \fBmtk::FieldNature::SCALAR\fP, \fBmtk::FieldNature::VECTOR\fP }"
.br
.RI "\fINature of the field discretized in a given grid\&. \fP"
.ti -1c
.RI "enum \fBmtk::DirInterp\fP { \fBmtk::DirInterp::SCALAR_TO_VECTOR\fP, \fBmtk::DirInterp::VECTOR_TO_SCALAR\fP }"
.br
.RI "\fIInterpolation operator\&. \fP"
.in -1c
.SH "Detailed Description"
.PP 
Enumerations\&. 
.SH "Enumeration Type Documentation"
.PP 
.SS "enum \fBmtk::DirInterp\fP\fC [strong]\fP"
Used to tag different directions of interpolation supported\&. 
.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fISCALAR_TO_VECTOR \fP\fP
Interpolations places scalar on vectors' location\&. 
.TP
\fB\fIVECTOR_TO_SCALAR \fP\fP
Interpolations places vectors on scalars' location\&. 
.PP
Definition at line 127 of file mtk_enums\&.h\&.
.SS "enum \fBmtk::FieldNature\fP\fC [strong]\fP"
Fields can be \fBscalar\fP or \fBvector\fP in nature\&.
.PP
\fBSee also:\fP
.RS 4
https://en.wikipedia.org/wiki/Scalar_field
.PP
https://en.wikipedia.org/wiki/Vector_field 
.RE
.PP

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fISCALAR \fP\fP
Scalar-valued field\&. 
.TP
\fB\fIVECTOR \fP\fP
Vector-valued field\&. 
.PP
Definition at line 113 of file mtk_enums\&.h\&.
.SS "enum \fBmtk::MatrixOrdering\fP\fC [strong]\fP"
Row-major ordering is used for most application in C/C++\&. For Fortran purposes, the matrices must be listed in a column-major ordering\&.
.PP
\fBSee also:\fP
.RS 4
https://en.wikipedia.org/wiki/Row-major_order 
.RE
.PP

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIROW_MAJOR \fP\fP
Row-major ordering (C/C++)\&. 
.TP
\fB\fICOL_MAJOR \fP\fP
Column-major ordering (Fortran)\&. 
.PP
Definition at line 95 of file mtk_enums\&.h\&.
.SS "enum \fBmtk::MatrixStorage\fP\fC [strong]\fP"
The considered sparse storage schemes are selected so that these are compatible with some of the most used mathematical APIs, as follows: DENSE and BANDED for \fCBLAS\fP, \fCLAPACK\fP, and \fCScaLAPACK\fP\&. Finally, CRS for \fCSuperLU\fP\&. 
.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIDENSE \fP\fP
Dense matrices, implemented as a 1D array: \fBDenseMatrix\fP\&. 
.TP
\fB\fIBANDED \fP\fP
Banded matrices ala LAPACK and ScaLAPACK: Must be implemented\&. 
.TP
\fB\fICRS \fP\fP
Compressed-Rows Storage: Must be implemented\&. 
.PP
Definition at line 77 of file mtk_enums\&.h\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for MTK: Mimetic Methods Toolkit from the source code\&.
