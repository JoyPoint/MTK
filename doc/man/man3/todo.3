.TH "todo" 3 "Tue Mar 22 2016" "MTK: Mimetic Methods Toolkit" \" -*- nroff -*-
.ad l
.nh
.SH NAME
todo \- Todo List 

.IP "\fBMember \fBmtk::DenseMatrix::Kron\fP (const DenseMatrix &aa, const DenseMatrix &bb)\fP" 1c
Implement Kronecker product using the BLAS\&. 
.PP
Implement Kron using the BLAS\&.  
.IP "\fBMember \fBmtk::DenseMatrix::OrderColMajor\fP ()\fP" 1c
Improve this so that no new arrays have to be created\&.  
.IP "\fBMember \fBmtk::DenseMatrix::OrderRowMajor\fP ()\fP" 1c
Improve this so that no new arrays have to be created\&.  
.IP "\fBMember \fBmtk::DenseMatrix::Transpose\fP ()\fP" 1c
Improve this so that no extra arrays have to be created\&.  
.IP "\fBClass \fBmtk::GLPKAdapter\fP \fP" 1c
Rescind from the GLPK as the numerical core for CLO problems\&.  
.IP "\fBMember \fBmtk::Matrix::IncreaseNumNull\fP () noexcept\fP" 1c
Review the definition of sparse matrices properties\&.  
.IP "\fBMember \fBmtk::Matrix::IncreaseNumZero\fP () noexcept\fP" 1c
Review the definition of sparse matrices properties\&.  
.IP "\fBMember \fBmtk::RobinBCDescriptor2D::ImposeOnGrid\fP (UniStgGrid2D &grid, const Real &time=kZero) const \fP" 1c
Implement imposition for vector-valued grids\&. Need research here!  
.IP "\fBMember \fBmtk::RobinBCDescriptor2D::ImposeOnSouthBoundaryNoSpace\fP (const Lap2D &lap, const UniStgGrid2D &grid, DenseMatrix &matrix, const Real &time=kZero) const \fP" 1c
Impose the Neumann conditions on every pole, for every scenario\&.  
.IP "\fBMember \fBmtk::RobinBCDescriptor2D::ImposeOnSouthBoundaryWithSpace\fP (const Lap2D &lap, const UniStgGrid2D &grid, DenseMatrix &matrix, const Real &time=kZero) const \fP" 1c
Impose Harmonic mean on the corners for the case when the generated space is available, for all poles\&.  
.IP "\fBMember \fBmtk::Tools::Prevent\fP (const bool complement, const char *const fname, int lineno, const char *const fxname) noexcept\fP" 1c
Check if this is the best way of stalling execution\&.  
.IP "\fBMember \fBmtk::UniStgGrid1D::discrete_domain_x\fP () const \fP" 1c
Review const-correctness of the pointer we return\&.  
.IP "\fBMember \fBmtk::UniStgGrid1D::discrete_field\fP ()\fP" 1c
Review const-correctness of the pointer we return\&. Look at the STL!  
.IP "\fBMember \fBmtk::UniStgGrid2D::discrete_domain_x\fP () const \fP" 1c
Review const-correctness of the pointer we return\&.  
.IP "\fBMember \fBmtk::UniStgGrid2D::discrete_domain_y\fP () const \fP" 1c
Review const-correctness of the pointer we return\&.  
.IP "\fBMember \fBmtk::UniStgGrid3D::discrete_domain_x\fP () const \fP" 1c
Review const-correctness of the pointer we return\&.  
.IP "\fBMember \fBmtk::UniStgGrid3D::discrete_domain_y\fP () const \fP" 1c
Review const-correctness of the pointer we return\&.  
.IP "\fBMember \fBmtk::UniStgGrid3D::discrete_domain_z\fP () const \fP" 1c
Review const-correctness of the pointer we return\&.  
.IP "\fBFile \fBmtk_blas_adapter\&.cc\fP \fP" 1c
Write documentation using LaTeX\&. 
.IP "\fBFile \fBmtk_div_1d\&.cc\fP \fP" 1c
Overload ostream operator as in \fBmtk::Lap1D\fP\&.
.PP
Implement creation of $ \mathbf{\Lambda}$ w\&. \fBmtk::BLASAdapter\fP\&.  
.IP "\fBFile \fBmtk_glpk_adapter_test\&.cc\fP \fP" 1c
Test the \fBmtk::GLPKAdapter\fP class\&.  
.IP "\fBFile \fBmtk_grad_1d\&.cc\fP \fP" 1c
Overload ostream operator as in \fBmtk::Lap1D\fP\&.
.PP
Implement creation of $ \mathbf{\Lambda}$ w\&. \fBmtk::BLASAdapter\fP\&.  
.IP "\fBFile \fBmtk_lapack_adapter\&.cc\fP \fP" 1c
Write documentation using LaTeX\&. 
.IP "\fBFile \fBmtk_lapack_adapter_test\&.cc\fP \fP" 1c
Test the \fBmtk::LAPACKAdapter\fP class\&.  
.IP "\fBFile \fBmtk_quad_1d\&.h\fP \fP" 1c
Implement this class\&.  
.IP "\fBFile \fBmtk_roots\&.h\fP \fP" 1c
Test selective precision mechanisms\&.  
.IP "\fBFile \fBmtk_uni_stg_grid_1d\&.h\fP \fP" 1c
Create overloaded binding routines that read data from files\&.  
.IP "\fBFile \fBmtk_uni_stg_grid_2d\&.h\fP \fP" 1c
Create overloaded binding routines that read data from files\&.
.PP
Create overloaded binding routines that read data from arrays\&.  
.IP "\fBFile \fBmtk_uni_stg_grid_3d\&.h\fP \fP" 1c
Create overloaded binding routines that read data from files\&.
.PP
Create overloaded binding routines that read data from arrays\&. 
.PP

