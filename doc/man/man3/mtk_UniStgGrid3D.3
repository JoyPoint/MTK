.TH "mtk::UniStgGrid3D" 3 "Fri Mar 11 2016" "MTK: Mimetic Methods Toolkit" \" -*- nroff -*-
.ad l
.nh
.SH NAME
mtk::UniStgGrid3D \- 
.PP
Uniform 3D Staggered Grid\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <mtk_uni_stg_grid_3d\&.h>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBUniStgGrid3D\fP \fBoperator=\fP (const \fBUniStgGrid3D\fP &in)"
.br
.RI "\fIOverloaded assignment operator\&. \fP"
.ti -1c
.RI "\fBUniStgGrid3D\fP ()"
.br
.RI "\fIDefault constructor\&. \fP"
.ti -1c
.RI "\fBUniStgGrid3D\fP (const \fBUniStgGrid3D\fP &grid)"
.br
.RI "\fICopy constructor\&. \fP"
.ti -1c
.RI "\fBUniStgGrid3D\fP (const \fBReal\fP &west_bndy_x, const \fBReal\fP &east_bndy_x, const int &\fBnum_cells_x\fP, const \fBReal\fP &south_bndy_y, const \fBReal\fP &north_bndy_y, const int &\fBnum_cells_y\fP, const \fBReal\fP &bottom_bndy_z, const \fBReal\fP &top_bndy_z, const int &\fBnum_cells_z\fP, const \fBmtk::FieldNature\fP &\fBnature\fP=\fBmtk::FieldNature::SCALAR\fP)"
.br
.RI "\fIConstruct a grid based on spatial discretization parameters\&. \fP"
.ti -1c
.RI "\fB~UniStgGrid3D\fP ()"
.br
.RI "\fIDestructor\&. \fP"
.ti -1c
.RI "const \fBReal\fP * \fBdiscrete_domain_x\fP () const "
.br
.RI "\fIProvides access to the grid spatial data\&. \fP"
.ti -1c
.RI "const \fBReal\fP * \fBdiscrete_domain_y\fP () const "
.br
.RI "\fIProvides access to the grid spatial data\&. \fP"
.ti -1c
.RI "const \fBReal\fP * \fBdiscrete_domain_z\fP () const "
.br
.RI "\fIProvides access to the grid spatial data\&. \fP"
.ti -1c
.RI "\fBReal\fP * \fBdiscrete_field\fP ()"
.br
.RI "\fIProvides access to the grid field data\&. \fP"
.ti -1c
.RI "\fBFieldNature\fP \fBnature\fP () const "
.br
.RI "\fIPhysical nature of the data bound to the grid\&. \fP"
.ti -1c
.RI "\fBReal\fP \fBwest_bndy\fP () const "
.br
.RI "\fIProvides access to west boundary spatial coordinate\&. \fP"
.ti -1c
.RI "\fBReal\fP \fBeast_bndy\fP () const "
.br
.RI "\fIProvides access to east boundary spatial coordinate\&. \fP"
.ti -1c
.RI "int \fBnum_cells_x\fP () const "
.br
.RI "\fIProvides access to the number of cells of the grid\&. \fP"
.ti -1c
.RI "\fBReal\fP \fBdelta_x\fP () const "
.br
.RI "\fIProvides access to the computed $  x $\&. \fP"
.ti -1c
.RI "\fBReal\fP \fBsouth_bndy\fP () const "
.br
.RI "\fIProvides access to south boundary spatial coordinate\&. \fP"
.ti -1c
.RI "\fBReal\fP \fBnorth_bndy\fP () const "
.br
.RI "\fIProvides access to north boundary spatial coordinate\&. \fP"
.ti -1c
.RI "int \fBnum_cells_y\fP () const "
.br
.RI "\fIProvides access to the number of cells of the grid\&. \fP"
.ti -1c
.RI "\fBReal\fP \fBdelta_y\fP () const "
.br
.RI "\fIProvides access to the computed $  y $\&. \fP"
.ti -1c
.RI "\fBReal\fP \fBbottom_bndy\fP () const "
.br
.RI "\fIProvides access to bottom boundary spatial coordinate\&. \fP"
.ti -1c
.RI "\fBReal\fP \fBtop_bndy\fP () const "
.br
.RI "\fIProvides access to top boundary spatial coordinate\&. \fP"
.ti -1c
.RI "int \fBnum_cells_z\fP () const "
.br
.RI "\fIProvides access to the number of cells of the grid\&. \fP"
.ti -1c
.RI "\fBReal\fP \fBdelta_z\fP () const "
.br
.RI "\fIProvides access to the computed $  z $\&. \fP"
.ti -1c
.RI "bool \fBBound\fP () const "
.br
.RI "\fIHave any field been bound to the grid? \fP"
.ti -1c
.RI "int \fBSize\fP () const "
.br
.RI "\fITotal number of samples in the grid\&. \fP"
.ti -1c
.RI "void \fBBindScalarField\fP (\fBReal\fP(*ScalarField)(const \fBReal\fP &xx, const \fBReal\fP &yy, const \fBReal\fP &zz))"
.br
.RI "\fIBinds a given scalar field to the grid\&. \fP"
.ti -1c
.RI "void \fBBindVectorField\fP (\fBReal\fP(*VectorFieldPComponent)(const \fBReal\fP &xx, const \fBReal\fP &yy, const \fBReal\fP &zz), \fBReal\fP(*VectorFieldQComponent)(const \fBReal\fP &xx, const \fBReal\fP &yy, const \fBReal\fP &zz), \fBReal\fP(*VectorFieldRComponent)(const \fBReal\fP &xx, const \fBReal\fP &yy, const \fBReal\fP &zz))"
.br
.RI "\fIBinds a given vector field to the grid\&. \fP"
.ti -1c
.RI "bool \fBWriteToFile\fP (std::string filename, std::string space_name_x, std::string space_name_y, std::string space_name_z, std::string field_name) const "
.br
.RI "\fIWrites grid to a file compatible with Gnuplot 4\&.6\&. \fP"
.in -1c
.SS "Private Member Functions"

.in +1c
.ti -1c
.RI "void \fBBindVectorFieldPComponent\fP (\fBReal\fP(*VectorFieldPComponent)(const \fBReal\fP &xx, const \fBReal\fP &yy, const \fBReal\fP &zz))"
.br
.RI "\fIBinds a given component of a vector field to the grid\&. \fP"
.ti -1c
.RI "void \fBBindVectorFieldQComponent\fP (\fBReal\fP(*VectorFieldQComponent)(const \fBReal\fP &xx, const \fBReal\fP &yy, const \fBReal\fP &zz))"
.br
.RI "\fIBinds a given component of a vector field to the grid\&. \fP"
.ti -1c
.RI "void \fBBindVectorFieldRComponent\fP (\fBReal\fP(*VectorFieldRComponent)(const \fBReal\fP &xx, const \fBReal\fP &yy, const \fBReal\fP &zz))"
.br
.RI "\fIBinds a given component of a vector field to the grid\&. \fP"
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "std::vector< \fBReal\fP > \fBdiscrete_domain_x_\fP"
.br
.RI "\fIArray of spatial data\&. \fP"
.ti -1c
.RI "std::vector< \fBReal\fP > \fBdiscrete_domain_y_\fP"
.br
.RI "\fIArray of spatial data\&. \fP"
.ti -1c
.RI "std::vector< \fBReal\fP > \fBdiscrete_domain_z_\fP"
.br
.RI "\fIArray of spatial data\&. \fP"
.ti -1c
.RI "std::vector< \fBReal\fP > \fBdiscrete_field_\fP"
.br
.RI "\fIArray of field's data\&. \fP"
.ti -1c
.RI "\fBFieldNature\fP \fBnature_\fP"
.br
.RI "\fINature of the discrete field\&. \fP"
.ti -1c
.RI "\fBReal\fP \fBwest_bndy_\fP"
.br
.RI "\fIWest boundary spatial coordinate\&. \fP"
.ti -1c
.RI "\fBReal\fP \fBeast_bndy_\fP"
.br
.RI "\fIEast boundary spatial coordinate\&. \fP"
.ti -1c
.RI "int \fBnum_cells_x_\fP"
.br
.RI "\fINumber of cells discretizing the domain\&. \fP"
.ti -1c
.RI "\fBReal\fP \fBdelta_x_\fP"
.br
.RI "\fIComputed $ \Delta x $\&. \fP"
.ti -1c
.RI "\fBReal\fP \fBsouth_bndy_\fP"
.br
.RI "\fIWest boundary spatial coordinate\&. \fP"
.ti -1c
.RI "\fBReal\fP \fBnorth_bndy_\fP"
.br
.RI "\fIEast boundary spatial coordinate\&. \fP"
.ti -1c
.RI "int \fBnum_cells_y_\fP"
.br
.RI "\fINumber of cells discretizing the domain\&. \fP"
.ti -1c
.RI "\fBReal\fP \fBdelta_y_\fP"
.br
.RI "\fIComputed $ \Delta y $\&. \fP"
.ti -1c
.RI "\fBReal\fP \fBbottom_bndy_\fP"
.br
.RI "\fIBottom boundary spatial coordinate\&. \fP"
.ti -1c
.RI "\fBReal\fP \fBtop_bndy_\fP"
.br
.RI "\fITop boundary spatial coordinate\&. \fP"
.ti -1c
.RI "int \fBnum_cells_z_\fP"
.br
.RI "\fINumber of cells discretizing the domain\&. \fP"
.ti -1c
.RI "\fBReal\fP \fBdelta_z_\fP"
.br
.RI "\fIComputed $ \Delta z $\&. \fP"
.in -1c
.SS "Friends"

.in +1c
.ti -1c
.RI "std::ostream & \fBoperator<<\fP (std::ostream &stream, \fBUniStgGrid3D\fP &in)"
.br
.RI "\fIPrints the grid as a tuple of arrays\&. \fP"
.in -1c
.SH "Detailed Description"
.PP 
Uniform 3D Staggered Grid\&. 
.PP
Definition at line 79 of file mtk_uni_stg_grid_3d\&.h\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "mtk::UniStgGrid3D::UniStgGrid3D ()"

.PP
Definition at line 123 of file mtk_uni_stg_grid_3d\&.cc\&.
.SS "mtk::UniStgGrid3D::UniStgGrid3D (const \fBUniStgGrid3D\fP &grid)"

.PP
\fBParameters:\fP
.RS 4
\fIgrid\fP Given grid\&. 
.RE
.PP

.PP
Definition at line 142 of file mtk_uni_stg_grid_3d\&.cc\&.
.SS "mtk::UniStgGrid3D::UniStgGrid3D (const \fBReal\fP &west_bndy_x, const \fBReal\fP &east_bndy_x, const int &num_cells_x, const \fBReal\fP &south_bndy_y, const \fBReal\fP &north_bndy_y, const int &num_cells_y, const \fBReal\fP &bottom_bndy_z, const \fBReal\fP &top_bndy_z, const int &num_cells_z, const \fBmtk::FieldNature\fP &nature = \fC\fBmtk::FieldNature::SCALAR\fP\fP)"

.PP
\fBParameters:\fP
.RS 4
\fIwest_bndy_x\fP Coordinate for the west boundary\&. 
.br
\fIeast_bndy_x\fP Coordinate for the east boundary\&. 
.br
\fInum_cells_x\fP Number of cells of the required grid\&. 
.br
\fIsouth_bndy_y\fP Coordinate for the west boundary\&. 
.br
\fInorth_bndy_y\fP Coordinate for the east boundary\&. 
.br
\fInum_cells_y\fP Number of cells of the required grid\&. 
.br
\fIbottom_bndy_z\fP Coordinate for the bottom boundary\&. 
.br
\fItop_bndy_z\fP Coordinate for the top boundary\&. 
.br
\fInum_cells_z\fP Number of cells of the required grid\&. 
.br
\fInature\fP Nature of the discrete field to hold\&.
.RE
.PP
\fBSee also:\fP
.RS 4
\fBmtk::FieldNature\fP 
.RE
.PP

.PP
Definition at line 174 of file mtk_uni_stg_grid_3d\&.cc\&.
.SS "mtk::UniStgGrid3D::~UniStgGrid3D ()"

.PP
Definition at line 221 of file mtk_uni_stg_grid_3d\&.cc\&.
.SH "Member Function Documentation"
.PP 
.SS "void mtk::UniStgGrid3D::BindScalarField (\fBReal\fP(*)(const \fBReal\fP &xx, const \fBReal\fP &yy, const \fBReal\fP &zz)ScalarField)"

.PP
\fBParameters:\fP
.RS 4
\fIScalarField\fP Pointer to the function implementing the scalar field\&. 
.RE
.PP

.IP "1." 4
Create collection of spatial coordinates for $ x $\&.
.IP "2." 4
Create collection of spatial coordinates for $ y $\&.
.IP "3." 4
Create collection of spatial coordinates for $ z $\&.
.IP "4." 4
Create collection of field samples\&. 
.PP

.PP
Definition at line 318 of file mtk_uni_stg_grid_3d\&.cc\&.
.SS "void mtk::UniStgGrid3D::BindVectorField (\fBReal\fP(*)(const \fBReal\fP &xx, const \fBReal\fP &yy, const \fBReal\fP &zz)VectorFieldPComponent, \fBReal\fP(*)(const \fBReal\fP &xx, const \fBReal\fP &yy, const \fBReal\fP &zz)VectorFieldQComponent, \fBReal\fP(*)(const \fBReal\fP &xx, const \fBReal\fP &yy, const \fBReal\fP &zz)VectorFieldRComponent)"
We assume the field to be of the form: \[ \mathbf{v}(\mathbf{x}) = p(x, y, z)\hat{\mathbf{i}} + q(x, y, z)\hat{\mathbf{j}} + r(x, y, z)\hat{\mathbf{k}} \]
.PP
\fBParameters:\fP
.RS 4
\fIVectorFieldPComponent\fP Pointer to the function implementing the $ p $ component of the vector field\&. 
.br
\fIVectorFieldPComponent\fP Pointer to the function implementing the $ q $ component of the vector field\&. 
.br
\fIVectorFieldRComponent\fP Pointer to the function implementing the $ r $ component of the vector field\&. 
.RE
.PP

.PP
Definition at line 415 of file mtk_uni_stg_grid_3d\&.cc\&.
.SS "void mtk::UniStgGrid3D::BindVectorFieldPComponent (\fBReal\fP(*)(const \fBReal\fP &xx, const \fBReal\fP &yy, const \fBReal\fP &zz)VectorFieldPComponent)\fC [private]\fP"
We assume the field to be of the form: \[ \mathbf{v}(\mathbf{x}) = p(x, y, z)\hat{\mathbf{i}} + q(x, y, z)\hat{\mathbf{j}} + r(x, y, z)\hat{\mathbf{k}} \]
.PP
\fBParameters:\fP
.RS 4
\fIBindVectorFieldPComponent\fP Pointer to the function implementing the $ p $ component of the vector field\&. 
.RE
.PP

.PP
Definition at line 394 of file mtk_uni_stg_grid_3d\&.cc\&.
.SS "void mtk::UniStgGrid3D::BindVectorFieldQComponent (\fBReal\fP(*)(const \fBReal\fP &xx, const \fBReal\fP &yy, const \fBReal\fP &zz)VectorFieldQComponent)\fC [private]\fP"
We assume the field to be of the form: \[ \mathbf{v}(\mathbf{x}) = p(x, y, z)\hat{\mathbf{i}} + q(x, y, z)\hat{\mathbf{j}} + r(x, y, z)\hat{\mathbf{k}} \]
.PP
\fBParameters:\fP
.RS 4
\fIBindVectorFieldQComponent\fP Pointer to the function implementing the $ q $ component of the vector field\&. 
.RE
.PP

.PP
Definition at line 401 of file mtk_uni_stg_grid_3d\&.cc\&.
.SS "void mtk::UniStgGrid3D::BindVectorFieldRComponent (\fBReal\fP(*)(const \fBReal\fP &xx, const \fBReal\fP &yy, const \fBReal\fP &zz)VectorFieldRComponent)\fC [private]\fP"
We assume the field to be of the form: \[ \mathbf{v}(\mathbf{x}) = p(x, y, z)\hat{\mathbf{i}} + q(x, y, z)\hat{\mathbf{j}} + r(x, y, z)\hat{\mathbf{k}} \]
.PP
\fBParameters:\fP
.RS 4
\fIBindVectorFieldRComponent\fP Pointer to the function implementing the $ r $ component of the vector field\&. 
.RE
.PP

.PP
Definition at line 408 of file mtk_uni_stg_grid_3d\&.cc\&.
.SS "\fBmtk::Real\fP mtk::UniStgGrid3D::bottom_bndy () const"

.PP
\fBReturns:\fP
.RS 4
Bottom boundary spatial coordinate\&. 
.RE
.PP

.PP
Definition at line 278 of file mtk_uni_stg_grid_3d\&.cc\&.
.SS "bool mtk::UniStgGrid3D::Bound () const"

.PP
\fBReturns:\fP
.RS 4
True is a field has been bound\&. 
.RE
.PP

.PP
Definition at line 308 of file mtk_uni_stg_grid_3d\&.cc\&.
.SS "\fBmtk::Real\fP mtk::UniStgGrid3D::delta_x () const"

.PP
\fBReturns:\fP
.RS 4
Computed $  x $\&. 
.RE
.PP

.PP
Definition at line 243 of file mtk_uni_stg_grid_3d\&.cc\&.
.SS "\fBmtk::Real\fP mtk::UniStgGrid3D::delta_y () const"

.PP
\fBReturns:\fP
.RS 4
Computed $  y $\&. 
.RE
.PP

.PP
Definition at line 268 of file mtk_uni_stg_grid_3d\&.cc\&.
.SS "\fBmtk::Real\fP mtk::UniStgGrid3D::delta_z () const"

.PP
\fBReturns:\fP
.RS 4
Computed $  z $\&. 
.RE
.PP

.PP
Definition at line 293 of file mtk_uni_stg_grid_3d\&.cc\&.
.SS "const \fBmtk::Real\fP * mtk::UniStgGrid3D::discrete_domain_x () const"

.PP
\fBReturns:\fP
.RS 4
Pointer to the spatial data\&.
.RE
.PP
\fBTodo\fP
.RS 4
Review const-correctness of the pointer we return\&. 
.RE
.PP

.PP
Definition at line 248 of file mtk_uni_stg_grid_3d\&.cc\&.
.SS "const \fBmtk::Real\fP * mtk::UniStgGrid3D::discrete_domain_y () const"

.PP
\fBReturns:\fP
.RS 4
Pointer to the spatial data\&.
.RE
.PP
\fBTodo\fP
.RS 4
Review const-correctness of the pointer we return\&. 
.RE
.PP

.PP
Definition at line 273 of file mtk_uni_stg_grid_3d\&.cc\&.
.SS "const \fBmtk::Real\fP * mtk::UniStgGrid3D::discrete_domain_z () const"

.PP
\fBReturns:\fP
.RS 4
Pointer to the spatial data\&.
.RE
.PP
\fBTodo\fP
.RS 4
Review const-correctness of the pointer we return\&. 
.RE
.PP

.PP
Definition at line 298 of file mtk_uni_stg_grid_3d\&.cc\&.
.SS "\fBmtk::Real\fP * mtk::UniStgGrid3D::discrete_field ()"

.PP
\fBReturns:\fP
.RS 4
Pointer to the field data\&. 
.RE
.PP

.PP
Definition at line 303 of file mtk_uni_stg_grid_3d\&.cc\&.
.SS "\fBmtk::Real\fP mtk::UniStgGrid3D::east_bndy () const"

.PP
\fBReturns:\fP
.RS 4
East boundary spatial coordinate\&. 
.RE
.PP

.PP
Definition at line 233 of file mtk_uni_stg_grid_3d\&.cc\&.
.SS "\fBmtk::FieldNature\fP mtk::UniStgGrid3D::nature () const"

.PP
\fBReturns:\fP
.RS 4
Value of an enumeration\&.
.RE
.PP
\fBSee also:\fP
.RS 4
\fBmtk::FieldNature\fP 
.RE
.PP

.PP
Definition at line 223 of file mtk_uni_stg_grid_3d\&.cc\&.
.SS "\fBmtk::Real\fP mtk::UniStgGrid3D::north_bndy () const"

.PP
\fBReturns:\fP
.RS 4
North boundary spatial coordinate\&. 
.RE
.PP

.PP
Definition at line 258 of file mtk_uni_stg_grid_3d\&.cc\&.
.SS "int mtk::UniStgGrid3D::num_cells_x () const"

.PP
\fBReturns:\fP
.RS 4
Number of cells of the grid\&. 
.RE
.PP

.PP
Definition at line 238 of file mtk_uni_stg_grid_3d\&.cc\&.
.SS "int mtk::UniStgGrid3D::num_cells_y () const"

.PP
\fBReturns:\fP
.RS 4
Number of cells of the grid\&. 
.RE
.PP

.PP
Definition at line 263 of file mtk_uni_stg_grid_3d\&.cc\&.
.SS "int mtk::UniStgGrid3D::num_cells_z () const"

.PP
\fBReturns:\fP
.RS 4
Number of cells of the grid\&. 
.RE
.PP

.PP
Definition at line 288 of file mtk_uni_stg_grid_3d\&.cc\&.
.SS "\fBmtk::UniStgGrid3D\fP mtk::UniStgGrid3D::operator= (const \fBUniStgGrid3D\fP &in)"

.PP
\fBParameters:\fP
.RS 4
\fIin\fP Given grid\&.
.RE
.PP
\fBReturns:\fP
.RS 4
Copy of the given grid\&. 
.RE
.PP

.PP
Definition at line 116 of file mtk_uni_stg_grid_3d\&.cc\&.
.SS "int mtk::UniStgGrid3D::Size () const"

.PP
\fBReturns:\fP
.RS 4
Total number of samples in the grid\&. 
.RE
.PP

.PP
Definition at line 313 of file mtk_uni_stg_grid_3d\&.cc\&.
.SS "\fBmtk::Real\fP mtk::UniStgGrid3D::south_bndy () const"

.PP
\fBReturns:\fP
.RS 4
South boundary spatial coordinate\&. 
.RE
.PP

.PP
Definition at line 253 of file mtk_uni_stg_grid_3d\&.cc\&.
.SS "\fBmtk::Real\fP mtk::UniStgGrid3D::top_bndy () const"

.PP
\fBReturns:\fP
.RS 4
Top boundary spatial coordinate\&. 
.RE
.PP

.PP
Definition at line 283 of file mtk_uni_stg_grid_3d\&.cc\&.
.SS "\fBmtk::Real\fP mtk::UniStgGrid3D::west_bndy () const"

.PP
\fBReturns:\fP
.RS 4
West boundary spatial coordinate\&. 
.RE
.PP

.PP
Definition at line 228 of file mtk_uni_stg_grid_3d\&.cc\&.
.SS "bool mtk::UniStgGrid3D::WriteToFile (std::stringfilename, std::stringspace_name_x, std::stringspace_name_y, std::stringspace_name_z, std::stringfield_name) const"

.PP
\fBParameters:\fP
.RS 4
\fIfilename\fP Name of the output file\&. 
.br
\fIspace_name_x\fP Name for the first column of the (spatial) data\&. 
.br
\fIspace_name_y\fP Name for the second column of the (spatial) data\&. 
.br
\fIspace_name_z\fP Name for the third column of the (spatial) data\&. 
.br
\fIfield_name\fP Name for the second column of the (physical field) data\&.
.RE
.PP
\fBReturns:\fP
.RS 4
Success of the file writing process\&.
.RE
.PP
\fBSee also:\fP
.RS 4
http://www.gnuplot.info/ 
.RE
.PP

.PP
Definition at line 435 of file mtk_uni_stg_grid_3d\&.cc\&.
.SH "Friends And Related Function Documentation"
.PP 
.SS "std::ostream& operator<< (std::ostream &stream, \fBmtk::UniStgGrid3D\fP &in)\fC [friend]\fP"

.IP "1." 4
Print spatial coordinates\&.
.IP "2." 4
Print scalar field\&. 
.PP

.PP
Definition at line 67 of file mtk_uni_stg_grid_3d\&.cc\&.
.SH "Member Data Documentation"
.PP 
.SS "\fBReal\fP mtk::UniStgGrid3D::bottom_bndy_\fC [private]\fP"

.PP
Definition at line 396 of file mtk_uni_stg_grid_3d\&.h\&.
.SS "\fBReal\fP mtk::UniStgGrid3D::delta_x_\fC [private]\fP"

.PP
Definition at line 389 of file mtk_uni_stg_grid_3d\&.h\&.
.SS "\fBReal\fP mtk::UniStgGrid3D::delta_y_\fC [private]\fP"

.PP
Definition at line 394 of file mtk_uni_stg_grid_3d\&.h\&.
.SS "\fBReal\fP mtk::UniStgGrid3D::delta_z_\fC [private]\fP"

.PP
Definition at line 399 of file mtk_uni_stg_grid_3d\&.h\&.
.SS "std::vector<\fBReal\fP> mtk::UniStgGrid3D::discrete_domain_x_\fC [private]\fP"

.PP
Definition at line 379 of file mtk_uni_stg_grid_3d\&.h\&.
.SS "std::vector<\fBReal\fP> mtk::UniStgGrid3D::discrete_domain_y_\fC [private]\fP"

.PP
Definition at line 380 of file mtk_uni_stg_grid_3d\&.h\&.
.SS "std::vector<\fBReal\fP> mtk::UniStgGrid3D::discrete_domain_z_\fC [private]\fP"

.PP
Definition at line 381 of file mtk_uni_stg_grid_3d\&.h\&.
.SS "std::vector<\fBReal\fP> mtk::UniStgGrid3D::discrete_field_\fC [private]\fP"

.PP
Definition at line 382 of file mtk_uni_stg_grid_3d\&.h\&.
.SS "\fBReal\fP mtk::UniStgGrid3D::east_bndy_\fC [private]\fP"

.PP
Definition at line 387 of file mtk_uni_stg_grid_3d\&.h\&.
.SS "\fBFieldNature\fP mtk::UniStgGrid3D::nature_\fC [private]\fP"

.PP
Definition at line 384 of file mtk_uni_stg_grid_3d\&.h\&.
.SS "\fBReal\fP mtk::UniStgGrid3D::north_bndy_\fC [private]\fP"

.PP
Definition at line 392 of file mtk_uni_stg_grid_3d\&.h\&.
.SS "int mtk::UniStgGrid3D::num_cells_x_\fC [private]\fP"

.PP
Definition at line 388 of file mtk_uni_stg_grid_3d\&.h\&.
.SS "int mtk::UniStgGrid3D::num_cells_y_\fC [private]\fP"

.PP
Definition at line 393 of file mtk_uni_stg_grid_3d\&.h\&.
.SS "int mtk::UniStgGrid3D::num_cells_z_\fC [private]\fP"

.PP
Definition at line 398 of file mtk_uni_stg_grid_3d\&.h\&.
.SS "\fBReal\fP mtk::UniStgGrid3D::south_bndy_\fC [private]\fP"

.PP
Definition at line 391 of file mtk_uni_stg_grid_3d\&.h\&.
.SS "\fBReal\fP mtk::UniStgGrid3D::top_bndy_\fC [private]\fP"

.PP
Definition at line 397 of file mtk_uni_stg_grid_3d\&.h\&.
.SS "\fBReal\fP mtk::UniStgGrid3D::west_bndy_\fC [private]\fP"

.PP
Definition at line 386 of file mtk_uni_stg_grid_3d\&.h\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for MTK: Mimetic Methods Toolkit from the source code\&.
