.TH "mtk::UniStgGrid2D" 3 "Tue Dec 1 2015" "MTK: Mimetic Methods Toolkit" \" -*- nroff -*-
.ad l
.nh
.SH NAME
mtk::UniStgGrid2D \- 
.PP
Uniform 2D Staggered Grid\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <mtk_uni_stg_grid_2d\&.h>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBUniStgGrid2D\fP ()"
.br
.RI "\fIDefault constructor\&. \fP"
.ti -1c
.RI "\fBUniStgGrid2D\fP (const \fBUniStgGrid2D\fP &grid)"
.br
.RI "\fICopy constructor\&. \fP"
.ti -1c
.RI "\fBUniStgGrid2D\fP (const \fBReal\fP &west_bndy_x, const \fBReal\fP &east_bndy_x, const int &\fBnum_cells_x\fP, const \fBReal\fP &south_bndy_y, const \fBReal\fP &north_bndy_y, const int &\fBnum_cells_y\fP, const \fBmtk::FieldNature\fP &\fBnature\fP=\fBmtk::SCALAR\fP)"
.br
.RI "\fIConstruct a grid based on spatial discretization parameters\&. \fP"
.ti -1c
.RI "\fB~UniStgGrid2D\fP ()"
.br
.RI "\fIDestructor\&. \fP"
.ti -1c
.RI "const \fBReal\fP * \fBdiscrete_domain_x\fP () const "
.br
.RI "\fIProvides access to the grid spatial data\&. \fP"
.ti -1c
.RI "const \fBReal\fP * \fBdiscrete_domain_y\fP () const "
.br
.RI "\fIProvides access to the grid spatial data\&. \fP"
.ti -1c
.RI "\fBReal\fP * \fBdiscrete_field\fP ()"
.br
.RI "\fIProvides access to the grid field data\&. \fP"
.ti -1c
.RI "\fBFieldNature\fP \fBnature\fP () const "
.br
.RI "\fIPhysical nature of the data bound to the grid\&. \fP"
.ti -1c
.RI "\fBReal\fP \fBwest_bndy\fP () const "
.br
.RI "\fIProvides access to west boundary spatial coordinate\&. \fP"
.ti -1c
.RI "\fBReal\fP \fBeast_bndy\fP () const "
.br
.RI "\fIProvides access to east boundary spatial coordinate\&. \fP"
.ti -1c
.RI "int \fBnum_cells_x\fP () const "
.br
.RI "\fIProvides access to the number of cells of the grid\&. \fP"
.ti -1c
.RI "\fBReal\fP \fBdelta_x\fP () const "
.br
.RI "\fIProvides access to the computed $  x $\&. \fP"
.ti -1c
.RI "\fBReal\fP \fBsouth_bndy\fP () const "
.br
.RI "\fIProvides access to south boundary spatial coordinate\&. \fP"
.ti -1c
.RI "\fBReal\fP \fBnorth_bndy\fP () const "
.br
.RI "\fIProvides access to north boundary spatial coordinate\&. \fP"
.ti -1c
.RI "int \fBnum_cells_y\fP () const "
.br
.RI "\fIProvides access to the number of cells of the grid\&. \fP"
.ti -1c
.RI "\fBReal\fP \fBdelta_y\fP () const "
.br
.RI "\fIProvides access to the computed $  y $\&. \fP"
.ti -1c
.RI "bool \fBBound\fP () const "
.br
.RI "\fIHave any field been bound to the grid? \fP"
.ti -1c
.RI "int \fBSize\fP () const "
.br
.RI "\fITotal number of samples in the grid\&. \fP"
.ti -1c
.RI "void \fBBindScalarField\fP (\fBReal\fP(*ScalarField)(const \fBReal\fP &xx, const \fBReal\fP &yy))"
.br
.RI "\fIBinds a given scalar field to the grid\&. \fP"
.ti -1c
.RI "void \fBBindVectorField\fP (\fBReal\fP(*VectorFieldPComponent)(const \fBReal\fP &xx, const \fBReal\fP &yy), \fBReal\fP(*VectorFieldQComponent)(const \fBReal\fP &xx, const \fBReal\fP &yy))"
.br
.RI "\fIBinds a given vector field to the grid\&. \fP"
.ti -1c
.RI "bool \fBWriteToFile\fP (std::string filename, std::string space_name_x, std::string space_name_y, std::string field_name) const "
.br
.RI "\fIWrites grid to a file compatible with Gnuplot 4\&.6\&. \fP"
.in -1c
.SS "Private Member Functions"

.in +1c
.ti -1c
.RI "void \fBBindVectorFieldPComponent\fP (\fBReal\fP(*VectorFieldPComponent)(const \fBReal\fP &xx, const \fBReal\fP &yy))"
.br
.RI "\fIBinds a given component of a vector field to the grid\&. \fP"
.ti -1c
.RI "void \fBBindVectorFieldQComponent\fP (\fBReal\fP(*VectorFieldQComponent)(const \fBReal\fP &xx, const \fBReal\fP &yy))"
.br
.RI "\fIBinds a given component of a vector field to the grid\&. \fP"
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "std::vector< \fBReal\fP > \fBdiscrete_domain_x_\fP"
.br
.RI "\fIArray of spatial data\&. \fP"
.ti -1c
.RI "std::vector< \fBReal\fP > \fBdiscrete_domain_y_\fP"
.br
.RI "\fIArray of spatial data\&. \fP"
.ti -1c
.RI "std::vector< \fBReal\fP > \fBdiscrete_field_\fP"
.br
.RI "\fIArray of field's data\&. \fP"
.ti -1c
.RI "\fBFieldNature\fP \fBnature_\fP"
.br
.RI "\fINature of the discrete field\&. \fP"
.ti -1c
.RI "\fBReal\fP \fBwest_bndy_\fP"
.br
.RI "\fIWest boundary spatial coordinate\&. \fP"
.ti -1c
.RI "\fBReal\fP \fBeast_bndy_\fP"
.br
.RI "\fIEast boundary spatial coordinate\&. \fP"
.ti -1c
.RI "int \fBnum_cells_x_\fP"
.br
.RI "\fINumber of cells discretizing the domain\&. \fP"
.ti -1c
.RI "\fBReal\fP \fBdelta_x_\fP"
.br
.RI "\fIComputed $ \Delta x $\&. \fP"
.ti -1c
.RI "\fBReal\fP \fBsouth_bndy_\fP"
.br
.RI "\fIWest boundary spatial coordinate\&. \fP"
.ti -1c
.RI "\fBReal\fP \fBnorth_bndy_\fP"
.br
.RI "\fIEast boundary spatial coordinate\&. \fP"
.ti -1c
.RI "int \fBnum_cells_y_\fP"
.br
.RI "\fINumber of cells discretizing the domain\&. \fP"
.ti -1c
.RI "\fBReal\fP \fBdelta_y_\fP"
.br
.RI "\fIComputed $ \Delta y $\&. \fP"
.in -1c
.SS "Friends"

.in +1c
.ti -1c
.RI "std::ostream & \fBoperator<<\fP (std::ostream &stream, \fBUniStgGrid2D\fP &in)"
.br
.RI "\fIPrints the grid as a tuple of arrays\&. \fP"
.in -1c
.SH "Detailed Description"
.PP 
Uniform 2D Staggered Grid\&. 
.PP
Definition at line 79 of file mtk_uni_stg_grid_2d\&.h\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "mtk::UniStgGrid2D::UniStgGrid2D ()"

.PP
Definition at line 131 of file mtk_uni_stg_grid_2d\&.cc\&.
.SS "mtk::UniStgGrid2D::UniStgGrid2D (const \fBUniStgGrid2D\fP &grid)"

.PP
\fBParameters:\fP
.RS 4
\fIgrid\fP Given grid\&. 
.RE
.PP

.PP
Definition at line 145 of file mtk_uni_stg_grid_2d\&.cc\&.
.SS "mtk::UniStgGrid2D::UniStgGrid2D (const \fBReal\fP &west_bndy_x, const \fBReal\fP &east_bndy_x, const int &num_cells_x, const \fBReal\fP &south_bndy_y, const \fBReal\fP &north_bndy_y, const int &num_cells_y, const \fBmtk::FieldNature\fP &nature = \fC\fBmtk::SCALAR\fP\fP)"

.PP
\fBParameters:\fP
.RS 4
\fIwest_bndy_x\fP Coordinate for the west boundary\&. 
.br
\fIeast_bndy_x\fP Coordinate for the east boundary\&. 
.br
\fInum_cells_x\fP Number of cells of the required grid\&. 
.br
\fIsouth_bndy_y\fP Coordinate for the west boundary\&. 
.br
\fInorth_bndy_y\fP Coordinate for the east boundary\&. 
.br
\fInum_cells_y\fP Number of cells of the required grid\&. 
.br
\fInature\fP Nature of the discrete field to hold\&.
.RE
.PP
\fBSee also:\fP
.RS 4
\fBmtk::FieldNature\fP 
.RE
.PP

.PP
Definition at line 169 of file mtk_uni_stg_grid_2d\&.cc\&.
.SS "mtk::UniStgGrid2D::~UniStgGrid2D ()"

.PP
Definition at line 203 of file mtk_uni_stg_grid_2d\&.cc\&.
.SH "Member Function Documentation"
.PP 
.SS "void mtk::UniStgGrid2D::BindScalarField (\fBReal\fP(*)(const \fBReal\fP &xx, const \fBReal\fP &yy)ScalarField)"

.PP
\fBParameters:\fP
.RS 4
\fIScalarField\fP Pointer to the function implementing the scalar field\&. 
.RE
.PP

.IP "1." 4
Create collection of spatial coordinates for $ x $\&.
.IP "2." 4
Create collection of spatial coordinates for $ y $\&.
.IP "3." 4
Create collection of field samples\&. 
.PP

.PP
Definition at line 275 of file mtk_uni_stg_grid_2d\&.cc\&.
.SS "void mtk::UniStgGrid2D::BindVectorField (\fBReal\fP(*)(const \fBReal\fP &xx, const \fBReal\fP &yy)VectorFieldPComponent, \fBReal\fP(*)(const \fBReal\fP &xx, const \fBReal\fP &yy)VectorFieldQComponent)"
We assume the field to be of the form:
.PP
\[ \mathbf{v}(x) = p(x, y)\hat{\mathbf{i}} + q(x, y)\hat{\mathbf{j}} \].PP
\fBParameters:\fP
.RS 4
\fIVectorFieldPComponent\fP Pointer to the function implementing the $ p $ component of the vector field\&. 
.br
\fIVectorFieldPComponent\fP Pointer to the function implementing the $ q $ component of the vector field\&. 
.RE
.PP

.PP
Definition at line 423 of file mtk_uni_stg_grid_2d\&.cc\&.
.SS "void mtk::UniStgGrid2D::BindVectorFieldPComponent (\fBReal\fP(*)(const \fBReal\fP &xx, const \fBReal\fP &yy)VectorFieldPComponent)\fC [private]\fP"
We assume the field to be of the form:
.PP
\[ \mathbf{v}(x) = p(x, y)\hat{\mathbf{i}} + q(x, y)\hat{\mathbf{j}} \].PP
\fBParameters:\fP
.RS 4
\fIBindVectorFieldPComponent\fP Pointer to the function implementing the $ p $ component of the vector field\&. 
.RE
.PP

.IP "1." 4
Create collection of spatial coordinates for $ x $\&.
.IP "2." 4
Create collection of spatial coordinates for $ y $\&.
.IP "3." 4
Allocate space for discrete vector field and bind $ p $ component\&. 
.PP

.PP
Definition at line 330 of file mtk_uni_stg_grid_2d\&.cc\&.
.SS "void mtk::UniStgGrid2D::BindVectorFieldQComponent (\fBReal\fP(*)(const \fBReal\fP &xx, const \fBReal\fP &yy)VectorFieldQComponent)\fC [private]\fP"
We assume the field to be of the form:
.PP
\[ \mathbf{v}(x) = p(x, y)\hat{\mathbf{i}} + q(x, y)\hat{\mathbf{j}} \].PP
\fBParameters:\fP
.RS 4
\fIBindVectorFieldQComponent\fP Pointer to the function implementing the $ q $ component of the vector field\&. 
.RE
.PP

.IP "3." 4
Bind $ q $ component, since $ p $ component has already been bound\&. 
.PP

.PP
Definition at line 395 of file mtk_uni_stg_grid_2d\&.cc\&.
.SS "bool mtk::UniStgGrid2D::Bound () const"

.PP
\fBReturns:\fP
.RS 4
True is a field has been bound\&. 
.RE
.PP

.PP
Definition at line 255 of file mtk_uni_stg_grid_2d\&.cc\&.
.SS "\fBmtk::Real\fP mtk::UniStgGrid2D::delta_x () const"

.PP
\fBReturns:\fP
.RS 4
Computed $  x $\&. 
.RE
.PP

.PP
Definition at line 225 of file mtk_uni_stg_grid_2d\&.cc\&.
.SS "\fBmtk::Real\fP mtk::UniStgGrid2D::delta_y () const"

.PP
\fBReturns:\fP
.RS 4
Computed $  y $\&. 
.RE
.PP

.PP
Definition at line 250 of file mtk_uni_stg_grid_2d\&.cc\&.
.SS "const \fBmtk::Real\fP * mtk::UniStgGrid2D::discrete_domain_x () const"

.PP
\fBReturns:\fP
.RS 4
Pointer to the spatial data\&.
.RE
.PP
\fBTodo\fP
.RS 4
Review const-correctness of the pointer we return\&. 
.RE
.PP

.PP
Definition at line 230 of file mtk_uni_stg_grid_2d\&.cc\&.
.SS "const \fBmtk::Real\fP * mtk::UniStgGrid2D::discrete_domain_y () const"

.PP
\fBReturns:\fP
.RS 4
Pointer to the spatial data\&.
.RE
.PP
\fBTodo\fP
.RS 4
Review const-correctness of the pointer we return\&. 
.RE
.PP

.PP
Definition at line 260 of file mtk_uni_stg_grid_2d\&.cc\&.
.SS "\fBmtk::Real\fP * mtk::UniStgGrid2D::discrete_field ()"

.PP
\fBReturns:\fP
.RS 4
Pointer to the field data\&. 
.RE
.PP

.PP
Definition at line 265 of file mtk_uni_stg_grid_2d\&.cc\&.
.SS "\fBmtk::Real\fP mtk::UniStgGrid2D::east_bndy () const"

.PP
\fBReturns:\fP
.RS 4
East boundary spatial coordinate\&. 
.RE
.PP

.PP
Definition at line 215 of file mtk_uni_stg_grid_2d\&.cc\&.
.SS "\fBmtk::FieldNature\fP mtk::UniStgGrid2D::nature () const"

.PP
\fBReturns:\fP
.RS 4
Value of an enumeration\&.
.RE
.PP
\fBSee also:\fP
.RS 4
\fBmtk::FieldNature\fP 
.RE
.PP

.PP
Definition at line 205 of file mtk_uni_stg_grid_2d\&.cc\&.
.SS "\fBmtk::Real\fP mtk::UniStgGrid2D::north_bndy () const"

.PP
\fBReturns:\fP
.RS 4
North boundary spatial coordinate\&. 
.RE
.PP

.PP
Definition at line 240 of file mtk_uni_stg_grid_2d\&.cc\&.
.SS "int mtk::UniStgGrid2D::num_cells_x () const"

.PP
\fBReturns:\fP
.RS 4
Number of cells of the grid\&. 
.RE
.PP

.PP
Definition at line 220 of file mtk_uni_stg_grid_2d\&.cc\&.
.SS "int mtk::UniStgGrid2D::num_cells_y () const"

.PP
\fBReturns:\fP
.RS 4
Number of cells of the grid\&. 
.RE
.PP

.PP
Definition at line 245 of file mtk_uni_stg_grid_2d\&.cc\&.
.SS "int mtk::UniStgGrid2D::Size () const"

.PP
\fBReturns:\fP
.RS 4
Total number of samples in the grid\&. 
.RE
.PP

.PP
Definition at line 270 of file mtk_uni_stg_grid_2d\&.cc\&.
.SS "\fBmtk::Real\fP mtk::UniStgGrid2D::south_bndy () const"

.PP
\fBReturns:\fP
.RS 4
South boundary spatial coordinate\&. 
.RE
.PP

.PP
Definition at line 235 of file mtk_uni_stg_grid_2d\&.cc\&.
.SS "\fBmtk::Real\fP mtk::UniStgGrid2D::west_bndy () const"

.PP
\fBReturns:\fP
.RS 4
West boundary spatial coordinate\&. 
.RE
.PP

.PP
Definition at line 210 of file mtk_uni_stg_grid_2d\&.cc\&.
.SS "bool mtk::UniStgGrid2D::WriteToFile (std::stringfilename, std::stringspace_name_x, std::stringspace_name_y, std::stringfield_name) const"

.PP
\fBParameters:\fP
.RS 4
\fIfilename\fP Name of the output file\&. 
.br
\fIspace_name_x\fP Name for the first column of the (spatial) data\&. 
.br
\fIspace_name_y\fP Name for the second column of the (spatial) data\&. 
.br
\fIfield_name\fP Name for the second column of the (physical field) data\&.
.RE
.PP
\fBReturns:\fP
.RS 4
Success of the file writing process\&.
.RE
.PP
\fBSee also:\fP
.RS 4
http://www.gnuplot.info/ 
.RE
.PP
Write the values of the p component, with a null q component\&.
.PP
Write the values of the q component, with a null p component\&. 
.PP
Definition at line 435 of file mtk_uni_stg_grid_2d\&.cc\&.
.SH "Friends And Related Function Documentation"
.PP 
.SS "std::ostream& operator<< (std::ostream &stream, \fBmtk::UniStgGrid2D\fP &in)\fC [friend]\fP"

.IP "1." 4
Print spatial coordinates\&.
.IP "2." 4
Print scalar field\&. 
.PP

.PP
Definition at line 67 of file mtk_uni_stg_grid_2d\&.cc\&.
.SH "Member Data Documentation"
.PP 
.SS "\fBReal\fP mtk::UniStgGrid2D::delta_x_\fC [private]\fP"

.PP
Definition at line 305 of file mtk_uni_stg_grid_2d\&.h\&.
.SS "\fBReal\fP mtk::UniStgGrid2D::delta_y_\fC [private]\fP"

.PP
Definition at line 310 of file mtk_uni_stg_grid_2d\&.h\&.
.SS "std::vector<\fBReal\fP> mtk::UniStgGrid2D::discrete_domain_x_\fC [private]\fP"

.PP
Definition at line 296 of file mtk_uni_stg_grid_2d\&.h\&.
.SS "std::vector<\fBReal\fP> mtk::UniStgGrid2D::discrete_domain_y_\fC [private]\fP"

.PP
Definition at line 297 of file mtk_uni_stg_grid_2d\&.h\&.
.SS "std::vector<\fBReal\fP> mtk::UniStgGrid2D::discrete_field_\fC [private]\fP"

.PP
Definition at line 298 of file mtk_uni_stg_grid_2d\&.h\&.
.SS "\fBReal\fP mtk::UniStgGrid2D::east_bndy_\fC [private]\fP"

.PP
Definition at line 303 of file mtk_uni_stg_grid_2d\&.h\&.
.SS "\fBFieldNature\fP mtk::UniStgGrid2D::nature_\fC [private]\fP"

.PP
Definition at line 300 of file mtk_uni_stg_grid_2d\&.h\&.
.SS "\fBReal\fP mtk::UniStgGrid2D::north_bndy_\fC [private]\fP"

.PP
Definition at line 308 of file mtk_uni_stg_grid_2d\&.h\&.
.SS "int mtk::UniStgGrid2D::num_cells_x_\fC [private]\fP"

.PP
Definition at line 304 of file mtk_uni_stg_grid_2d\&.h\&.
.SS "int mtk::UniStgGrid2D::num_cells_y_\fC [private]\fP"

.PP
Definition at line 309 of file mtk_uni_stg_grid_2d\&.h\&.
.SS "\fBReal\fP mtk::UniStgGrid2D::south_bndy_\fC [private]\fP"

.PP
Definition at line 307 of file mtk_uni_stg_grid_2d\&.h\&.
.SS "\fBReal\fP mtk::UniStgGrid2D::west_bndy_\fC [private]\fP"

.PP
Definition at line 302 of file mtk_uni_stg_grid_2d\&.h\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for MTK: Mimetic Methods Toolkit from the source code\&.
