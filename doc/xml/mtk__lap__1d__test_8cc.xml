<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="mtk__lap__1d__test_8cc" kind="file">
    <compoundname>mtk_lap_1d_test.cc</compoundname>
    <includes local="no">iostream</includes>
    <incdepgraph>
      <node id="1306">
        <label>tests/mtk_lap_1d_test.cc</label>
        <link refid="mtk_lap_1d_test.cc"/>
        <childnode refid="1307" relation="include">
        </childnode>
      </node>
      <node id="1307">
        <label>iostream</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="mtk__lap__1d__test_8cc_1ae66f6b31b5ad750f1fe042a706a4e3d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>()</argsstring>
        <name>main</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ejspeiro/Dropbox/MTK/tests/mtk_lap_1d_test.cc" line="156" column="1" bodyfile="/home/ejspeiro/Dropbox/MTK/tests/mtk_lap_1d_test.cc" bodystart="156" bodyend="159"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>==<sp/>201103L</highlight></codeline>
<codeline lineno="2"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="mtk_8h" kindref="compound">mtk.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Test1()<sp/>{</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><ref refid="classmtk_1_1Tools_1a35cefa938105619b731ea4fedb86becf" kindref="member">mtk::Tools::BeginTestNo</ref>(1);</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><ref refid="classmtk_1_1Lap1D" kindref="compound">mtk::Lap1D</ref><sp/>lap2;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>info<sp/>=<sp/>lap2.<ref refid="classmtk_1_1Lap1D_1a685dcba88c08cf5b7b6c2aa4669a472c" kindref="member">ConstructLap1D</ref>();</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!info)<sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Mimetic<sp/>lap<sp/>(2nd<sp/>order)<sp/>could<sp/>not<sp/>be<sp/>built.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><ref refid="classmtk_1_1Tools_1a5d3f78d17228fb36a73567c191f0f4ee" kindref="member">mtk::Tools::EndTestNo</ref>(1);</highlight></codeline>
<codeline lineno="20"><highlight class="normal">}</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Test2()<sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><ref refid="classmtk_1_1Tools_1a35cefa938105619b731ea4fedb86becf" kindref="member">mtk::Tools::BeginTestNo</ref>(2);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><ref refid="classmtk_1_1Lap1D" kindref="compound">mtk::Lap1D</ref><sp/>lap4;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>info<sp/>=<sp/>lap4.<ref refid="classmtk_1_1Lap1D_1a685dcba88c08cf5b7b6c2aa4669a472c" kindref="member">ConstructLap1D</ref>(4);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!info)<sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Mimetic<sp/>lap<sp/>(4th<sp/>order)<sp/>could<sp/>not<sp/>be<sp/>built.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><ref refid="classmtk_1_1Tools_1a5d3f78d17228fb36a73567c191f0f4ee" kindref="member">mtk::Tools::EndTestNo</ref>(2);</highlight></codeline>
<codeline lineno="35"><highlight class="normal">}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Test3()<sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><ref refid="classmtk_1_1Tools_1a35cefa938105619b731ea4fedb86becf" kindref="member">mtk::Tools::BeginTestNo</ref>(3);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><ref refid="classmtk_1_1Lap1D" kindref="compound">mtk::Lap1D</ref><sp/>lap6;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>info<sp/>=<sp/>lap6.<ref refid="classmtk_1_1Lap1D_1a685dcba88c08cf5b7b6c2aa4669a472c" kindref="member">ConstructLap1D</ref>(6);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!info)<sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Mimetic<sp/>lap<sp/>(6th<sp/>order)<sp/>could<sp/>not<sp/>be<sp/>built.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><ref refid="classmtk_1_1Tools_1a5d3f78d17228fb36a73567c191f0f4ee" kindref="member">mtk::Tools::EndTestNo</ref>(3);</highlight></codeline>
<codeline lineno="50"><highlight class="normal">}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Test4()<sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><ref refid="classmtk_1_1Tools_1a35cefa938105619b731ea4fedb86becf" kindref="member">mtk::Tools::BeginTestNo</ref>(4);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><ref refid="classmtk_1_1Lap1D" kindref="compound">mtk::Lap1D</ref><sp/>lap8;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>info<sp/>=<sp/>lap8.<ref refid="classmtk_1_1Lap1D_1a685dcba88c08cf5b7b6c2aa4669a472c" kindref="member">ConstructLap1D</ref>(8);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!info)<sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Mimetic<sp/>lap<sp/>(8th<sp/>order)<sp/>could<sp/>not<sp/>be<sp/>built.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><ref refid="classmtk_1_1Tools_1a5d3f78d17228fb36a73567c191f0f4ee" kindref="member">mtk::Tools::EndTestNo</ref>(4);</highlight></codeline>
<codeline lineno="65"><highlight class="normal">}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Test5()<sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><ref refid="classmtk_1_1Tools_1a35cefa938105619b731ea4fedb86becf" kindref="member">mtk::Tools::BeginTestNo</ref>(5);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><ref refid="classmtk_1_1Lap1D" kindref="compound">mtk::Lap1D</ref><sp/>lap10;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>info<sp/>=<sp/>lap10.<ref refid="classmtk_1_1Lap1D_1a685dcba88c08cf5b7b6c2aa4669a472c" kindref="member">ConstructLap1D</ref>(10);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!info)<sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Mimetic<sp/>lap<sp/>(10th<sp/>order)<sp/>could<sp/>not<sp/>be<sp/>built.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><ref refid="classmtk_1_1Tools_1a5d3f78d17228fb36a73567c191f0f4ee" kindref="member">mtk::Tools::EndTestNo</ref>(5);</highlight></codeline>
<codeline lineno="80"><highlight class="normal">}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Test6()<sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><ref refid="classmtk_1_1Tools_1a35cefa938105619b731ea4fedb86becf" kindref="member">mtk::Tools::BeginTestNo</ref>(6);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><ref refid="classmtk_1_1Lap1D" kindref="compound">mtk::Lap1D</ref><sp/>lap12;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>info<sp/>=<sp/>lap12.<ref refid="classmtk_1_1Lap1D_1a685dcba88c08cf5b7b6c2aa4669a472c" kindref="member">ConstructLap1D</ref>(12);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!info)<sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Mimetic<sp/>lap<sp/>(12th<sp/>order)<sp/>could<sp/>not<sp/>be<sp/>built.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><ref refid="classmtk_1_1Tools_1a5d3f78d17228fb36a73567c191f0f4ee" kindref="member">mtk::Tools::EndTestNo</ref>(6);</highlight></codeline>
<codeline lineno="95"><highlight class="normal">}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Test7()<sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><ref refid="classmtk_1_1Tools_1a35cefa938105619b731ea4fedb86becf" kindref="member">mtk::Tools::BeginTestNo</ref>(7);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><ref refid="classmtk_1_1Lap1D" kindref="compound">mtk::Lap1D</ref><sp/>lap4;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>info<sp/>=<sp/>lap4.<ref refid="classmtk_1_1Lap1D_1a685dcba88c08cf5b7b6c2aa4669a472c" kindref="member">ConstructLap1D</ref>(4);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!info)<sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Mimetic<sp/>lap<sp/>(4th<sp/>order)<sp/>could<sp/>not<sp/>be<sp/>built.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>lap4<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><ref refid="classmtk_1_1Tools_1a5d3f78d17228fb36a73567c191f0f4ee" kindref="member">mtk::Tools::EndTestNo</ref>(7);</highlight></codeline>
<codeline lineno="113"><highlight class="normal">}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Test8()<sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><ref refid="classmtk_1_1Tools_1a35cefa938105619b731ea4fedb86becf" kindref="member">mtk::Tools::BeginTestNo</ref>(8);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><ref refid="classmtk_1_1Lap1D" kindref="compound">mtk::Lap1D</ref><sp/>lap4;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>info<sp/>=<sp/>lap4.<ref refid="classmtk_1_1Lap1D_1a685dcba88c08cf5b7b6c2aa4669a472c" kindref="member">ConstructLap1D</ref>(4);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!info)<sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Mimetic<sp/>lap<sp/>(4th<sp/>order)<sp/>could<sp/>not<sp/>be<sp/>built.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>lap4<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><ref refid="classmtk_1_1UniStgGrid1D" kindref="compound">mtk::UniStgGrid1D</ref><sp/>aux(0.0,<sp/>1.0,<sp/>11);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><ref refid="classmtk_1_1DenseMatrix" kindref="compound">mtk::DenseMatrix</ref><sp/>lap4_m(lap4.<ref refid="classmtk_1_1Lap1D_1a28672c735fa0d13e6204795b63aec4e2" kindref="member">ReturnAsDenseMatrix</ref>(aux));</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>lap4_m<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><ref refid="classmtk_1_1Tools_1a5d3f78d17228fb36a73567c191f0f4ee" kindref="member">mtk::Tools::EndTestNo</ref>(8);</highlight></codeline>
<codeline lineno="138"><highlight class="normal">}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="mtk__lap__1d__test_8cc_1ae66f6b31b5ad750f1fe042a706a4e3d4" kindref="member">main</ref><sp/>()<sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Testing<sp/>MTK<sp/>1D<sp/>Laplacian&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/>Test1();</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/>Test2();</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/>Test3();</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/>Test4();</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/>Test5();</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/>Test6();</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/>Test7();</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/>Test8();</highlight></codeline>
<codeline lineno="152"><highlight class="normal">}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="155"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156" refid="mtk__lap__1d__test_8cc_1ae66f6b31b5ad750f1fe042a706a4e3d4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="mtk__lap__1d__test_8cc_1ae66f6b31b5ad750f1fe042a706a4e3d4" kindref="member">main</ref><sp/>()<sp/>{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;This<sp/>code<sp/>HAS<sp/>to<sp/>be<sp/>compiled<sp/>to<sp/>support<sp/>C++11.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Exiting...&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="159"><highlight class="normal">}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/ejspeiro/Dropbox/MTK/tests/mtk_lap_1d_test.cc"/>
  </compounddef>
</doxygen>
