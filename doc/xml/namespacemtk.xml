<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.8">
  <compounddef id="namespacemtk" kind="namespace">
    <compoundname>mtk</compoundname>
    <innerclass refid="classmtk_1_1BLASAdapter" prot="public">mtk::BLASAdapter</innerclass>
    <innerclass refid="classmtk_1_1Curl2D" prot="public">mtk::Curl2D</innerclass>
    <innerclass refid="classmtk_1_1DenseMatrix" prot="public">mtk::DenseMatrix</innerclass>
    <innerclass refid="classmtk_1_1Div1D" prot="public">mtk::Div1D</innerclass>
    <innerclass refid="classmtk_1_1Div2D" prot="public">mtk::Div2D</innerclass>
    <innerclass refid="classmtk_1_1Div3D" prot="public">mtk::Div3D</innerclass>
    <innerclass refid="classmtk_1_1GLPKAdapter" prot="public">mtk::GLPKAdapter</innerclass>
    <innerclass refid="classmtk_1_1Grad1D" prot="public">mtk::Grad1D</innerclass>
    <innerclass refid="classmtk_1_1Grad2D" prot="public">mtk::Grad2D</innerclass>
    <innerclass refid="classmtk_1_1Grad3D" prot="public">mtk::Grad3D</innerclass>
    <innerclass refid="classmtk_1_1Interp1D" prot="public">mtk::Interp1D</innerclass>
    <innerclass refid="classmtk_1_1Interp2D" prot="public">mtk::Interp2D</innerclass>
    <innerclass refid="classmtk_1_1Lap1D" prot="public">mtk::Lap1D</innerclass>
    <innerclass refid="classmtk_1_1Lap2D" prot="public">mtk::Lap2D</innerclass>
    <innerclass refid="classmtk_1_1Lap3D" prot="public">mtk::Lap3D</innerclass>
    <innerclass refid="classmtk_1_1LAPACKAdapter" prot="public">mtk::LAPACKAdapter</innerclass>
    <innerclass refid="classmtk_1_1Matrix" prot="public">mtk::Matrix</innerclass>
    <innerclass refid="classmtk_1_1Quad1D" prot="public">mtk::Quad1D</innerclass>
    <innerclass refid="classmtk_1_1RobinBCDescriptor1D" prot="public">mtk::RobinBCDescriptor1D</innerclass>
    <innerclass refid="classmtk_1_1RobinBCDescriptor2D" prot="public">mtk::RobinBCDescriptor2D</innerclass>
    <innerclass refid="classmtk_1_1RobinBCDescriptor3D" prot="public">mtk::RobinBCDescriptor3D</innerclass>
    <innerclass refid="classmtk_1_1Tools" prot="public">mtk::Tools</innerclass>
    <innerclass refid="classmtk_1_1UniStgGrid1D" prot="public">mtk::UniStgGrid1D</innerclass>
    <innerclass refid="classmtk_1_1UniStgGrid2D" prot="public">mtk::UniStgGrid2D</innerclass>
    <innerclass refid="classmtk_1_1UniStgGrid3D" prot="public">mtk::UniStgGrid3D</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group__c02-enums_1ga25b67ec6a2afeee69f9bb196a9c66619" prot="public" static="no">
        <name>MatrixStorage</name>
        <enumvalue id="namespacemtk_1ga25b67ec6a2afeee69f9bb196a9c66619a0706fbbd929bd8abc4de386c53d439ff" prot="public">
          <name>DENSE</name>
          <briefdescription>
<para>Dense matrices, implemented as a 1D array: <ref refid="classmtk_1_1DenseMatrix" kindref="compound">DenseMatrix</ref>. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacemtk_1ga25b67ec6a2afeee69f9bb196a9c66619a710800eb2f07821684373493be7fee14" prot="public">
          <name>BANDED</name>
          <briefdescription>
<para>Banded matrices ala LAPACK and ScaLAPACK: Must be implemented. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacemtk_1ga25b67ec6a2afeee69f9bb196a9c66619a22d51ee0c812123c541f2a1bdf794fd1" prot="public">
          <name>CRS</name>
          <briefdescription>
<para>Compressed-Rows Storage: Must be implemented. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Considered matrix storage schemes to implement sparse matrices. </para>        </briefdescription>
        <detaileddescription>
<para>The considered sparse storage schemes are selected so that these are compatible with some of the most used mathematical APIs, as follows: DENSE and BANDED for <ulink url="http://www.netlib.org/blas/">BLAS</ulink>, <ulink url="http://www.netlib.org/lapack/">LAPACK</ulink>, and <ulink url="http://www.netlib.org/scalapack/">ScaLAPACK</ulink>. Finally, CRS for <ulink url="http://crd.lbl.gov/~xiaoye/SuperLU/">SuperLU</ulink>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/esanchez/Dropbox/MTK/include/mtk_enums.h" line="77" column="1" bodyfile="/home/esanchez/Dropbox/MTK/include/mtk_enums.h" bodystart="77" bodyend="81"/>
      </memberdef>
      <memberdef kind="enum" id="group__c02-enums_1ga622801bd9f912d0f976c3e383f5f581c" prot="public" static="no">
        <name>MatrixOrdering</name>
        <enumvalue id="namespacemtk_1ga622801bd9f912d0f976c3e383f5f581ca21541962976d7709c26e9cd8385bd648" prot="public">
          <name>ROW_MAJOR</name>
          <briefdescription>
<para>Row-major ordering (C/C++). </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacemtk_1ga622801bd9f912d0f976c3e383f5f581ca34d2765ffc490951febdcca04bc4f7cd" prot="public">
          <name>COL_MAJOR</name>
          <briefdescription>
<para>Column-major ordering (Fortran). </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Considered matrix ordering (for Fortran purposes). </para>        </briefdescription>
        <detaileddescription>
<para>Row-major ordering is used for most application in C/C++. For Fortran purposes, the matrices must be listed in a column-major ordering.</para><para><simplesect kind="see"><para><ulink url="https://en.wikipedia.org/wiki/Row-major_order">https://en.wikipedia.org/wiki/Row-major_order</ulink> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/esanchez/Dropbox/MTK/include/mtk_enums.h" line="95" column="1" bodyfile="/home/esanchez/Dropbox/MTK/include/mtk_enums.h" bodystart="95" bodyend="98"/>
      </memberdef>
      <memberdef kind="enum" id="group__c02-enums_1ga4c54f2a329cfb4e56213b02a259d19e2" prot="public" static="no">
        <name>FieldNature</name>
        <enumvalue id="namespacemtk_1ga4c54f2a329cfb4e56213b02a259d19e2a8f3d9a4b6a7b7f2c7afa61ca113d0db9" prot="public">
          <name>SCALAR</name>
          <briefdescription>
<para>Scalar-valued field. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacemtk_1ga4c54f2a329cfb4e56213b02a259d19e2a87752381b583740610f1dfeb07fdad7e" prot="public">
          <name>VECTOR</name>
          <briefdescription>
<para>Vector-valued field. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Nature of the field discretized in a given grid. </para>        </briefdescription>
        <detaileddescription>
<para>Fields can be <bold>scalar</bold> or <bold>vector</bold> in nature.</para><para><simplesect kind="see"><para><ulink url="https://en.wikipedia.org/wiki/Scalar_field">https://en.wikipedia.org/wiki/Scalar_field</ulink></para></simplesect>
<simplesect kind="see"><para><ulink url="https://en.wikipedia.org/wiki/Vector_field">https://en.wikipedia.org/wiki/Vector_field</ulink> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/esanchez/Dropbox/MTK/include/mtk_enums.h" line="113" column="1" bodyfile="/home/esanchez/Dropbox/MTK/include/mtk_enums.h" bodystart="113" bodyend="116"/>
      </memberdef>
      <memberdef kind="enum" id="group__c02-enums_1ga674ec67bd1baa04e5dc06c2bcc351972" prot="public" static="no">
        <name>DirInterp</name>
        <enumvalue id="namespacemtk_1ga674ec67bd1baa04e5dc06c2bcc351972a53facfbeb6725b2bd220c8d9811a0673" prot="public">
          <name>SCALAR_TO_VECTOR</name>
          <briefdescription>
<para>Interpolations places scalar on vectors&apos; location. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacemtk_1ga674ec67bd1baa04e5dc06c2bcc351972a6b389c8391a900c481d8c96c6045f468" prot="public">
          <name>VECTOR_TO_SCALAR</name>
          <briefdescription>
<para>Interpolations places vectors on scalars&apos; location. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Interpolation operator. </para>        </briefdescription>
        <detaileddescription>
<para>Used to tag different directions of interpolation supported. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/esanchez/Dropbox/MTK/include/mtk_enums.h" line="127" column="1" bodyfile="/home/esanchez/Dropbox/MTK/include/mtk_enums.h" bodystart="127" bodyend="130"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__c07-mim__ops_1ga04276745b4d511f0f3c636d6e0df7c2d" prot="public" static="no">
        <type><ref refid="group__c01-roots_1gac080bbbf5cbb5502c9f00405f894857d" kindref="member">Real</ref>(*</type>
        <definition>mtk::CoefficientFunction0D</definition>
        <argsstring>)(const Real &amp;tt)</argsstring>
        <name>CoefficientFunction0D</name>
        <briefdescription>
<para>A function of a BC coefficient evaluated on a 0D domain and time. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>This definition implies that, for now, coefficients will depend on space and time, thus no extra parameters can influence their behavior. We will fix this soon enough. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/esanchez/Dropbox/MTK/include/mtk_robin_bc_descriptor_1d.h" line="111" column="1" bodyfile="/home/esanchez/Dropbox/MTK/include/mtk_robin_bc_descriptor_1d.h" bodystart="111" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__c07-mim__ops_1gaa79593eeb6676d6011db339e01983909" prot="public" static="no">
        <type><ref refid="group__c01-roots_1gac080bbbf5cbb5502c9f00405f894857d" kindref="member">Real</ref>(*</type>
        <definition>mtk::CoefficientFunction1D</definition>
        <argsstring>)(const Real &amp;xx, const Real &amp;tt)</argsstring>
        <name>CoefficientFunction1D</name>
        <briefdescription>
<para>A function of a BC coefficient evaluated on a 1D domain and time. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/esanchez/Dropbox/MTK/include/mtk_robin_bc_descriptor_2d.h" line="97" column="1" bodyfile="/home/esanchez/Dropbox/MTK/include/mtk_robin_bc_descriptor_2d.h" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__c07-mim__ops_1ga0ff293d1fd754006d64a3588971dc5c4" prot="public" static="no">
        <type><ref refid="group__c01-roots_1gac080bbbf5cbb5502c9f00405f894857d" kindref="member">Real</ref>(*</type>
        <definition>mtk::CoefficientFunction2D</definition>
        <argsstring>)(const Real &amp;xx, const Real &amp;yy, const Real &amp;tt)</argsstring>
        <name>CoefficientFunction2D</name>
        <briefdescription>
<para>A function of a BC coefficient evaluated on a 2D domain and time. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/esanchez/Dropbox/MTK/include/mtk_robin_bc_descriptor_3d.h" line="97" column="1" bodyfile="/home/esanchez/Dropbox/MTK/include/mtk_robin_bc_descriptor_3d.h" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__c01-roots_1gac080bbbf5cbb5502c9f00405f894857d" prot="public" static="no">
        <type>float</type>
        <definition>mtk::Real</definition>
        <argsstring></argsstring>
        <name>Real</name>
        <briefdescription>
<para>Users can simply change this to build a double- or single-precision MTK. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>Defined as double if MTK_PRECISION_DOUBLE is defined on <ref refid="Makefile_8inc" kindref="compound">Makefile.inc</ref>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/esanchez/Dropbox/MTK/include/mtk_roots.h" line="93" column="1" bodyfile="/home/esanchez/Dropbox/MTK/include/mtk_roots.h" bodystart="93" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="group__c01-roots_1ga59a451a5fae30d59649bcda274fea271" prot="public" static="no" mutable="no">
        <type>const float</type>
        <definition>mtk::kZero</definition>
        <argsstring></argsstring>
        <name>kZero</name>
        <initializer>{0.0f}</initializer>
        <briefdescription>
<para>MTK&apos;s zero defined according to selective compilation. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>Declared as double if MTK_PRECISION_DOUBLE is defined on <ref refid="Makefile_8inc" kindref="compound">Makefile.inc</ref>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/esanchez/Dropbox/MTK/include/mtk_roots.h" line="126" column="1" bodyfile="/home/esanchez/Dropbox/MTK/include/mtk_roots.h" bodystart="126" bodyend="-1"/>
        <referencedby refid="classmtk_1_1BLASAdapter_1acebd0e9bfe0bdd609c7fbea98ccfd3b5" compoundref="mtk__blas__adapter_8cc" startline="412" endline="467">mtk::BLASAdapter::RealDenseMM</referencedby>
        <referencedby refid="classmtk_1_1BLASAdapter_1a0dd80d043615a95f11b7341ce69b44d3" compoundref="mtk__blas__adapter_8cc" startline="469" endline="515">mtk::BLASAdapter::RealDenseSM</referencedby>
        <referencedby refid="classmtk_1_1DenseMatrix_1a0d27dc7c4d2c49f391017e392345ced0" compoundref="mtk__dense__matrix_8cc" startline="105" endline="144">mtk::DenseMatrix::operator=</referencedby>
        <referencedby refid="classmtk_1_1DenseMatrix_1a90102d605a668bf7ecf0d766cc4c10db" compoundref="mtk__dense__matrix_8cc" startline="173" endline="204">mtk::DenseMatrix::DenseMatrix</referencedby>
        <referencedby refid="classmtk_1_1DenseMatrix_1a71d9c07ca66e88d97d1fd5012f43138b" compoundref="mtk__dense__matrix_8cc" startline="379" endline="414">mtk::DenseMatrix::Transpose</referencedby>
        <referencedby refid="classmtk_1_1DenseMatrix_1ac2949efba3e8278335d45418c85433e4" compoundref="mtk__dense__matrix_8cc" startline="416" endline="455">mtk::DenseMatrix::OrderRowMajor</referencedby>
        <referencedby refid="classmtk_1_1DenseMatrix_1a59b9bea24acf39dca64e8549b3527463" compoundref="mtk__dense__matrix_8cc" startline="457" endline="494">mtk::DenseMatrix::OrderColMajor</referencedby>
        <referencedby refid="classmtk_1_1Div1D_1a52fcd1542f11e606e36bd188e48bfdf7" compoundref="mtk__div__1d_8cc" startline="189" endline="326">mtk::Div1D::ConstructDiv1D</referencedby>
        <referencedby refid="classmtk_1_1Div1D_1a213fddbaaf86e4840c6a9649b69c2d49" compoundref="mtk__div__1d_8cc" startline="368" endline="430">mtk::Div1D::ReturnAsDenseMatrix</referencedby>
        <referencedby refid="classmtk_1_1Div1D_1af2546ad1568ef39a6075f03bb395719e" compoundref="mtk__div__1d_8cc" startline="432" endline="492">mtk::Div1D::ReturnAsDimensionlessDenseMatrix</referencedby>
        <referencedby refid="classmtk_1_1Div1D_1a3eb3a32862a6b066cd583cbbd00a6509" compoundref="mtk__div__1d_8cc" startline="494" endline="593">mtk::Div1D::ComputeStencilInteriorGrid</referencedby>
        <referencedby refid="classmtk_1_1Div1D_1aa0c0c278b2c00a29c1ceaa70d31aebab" compoundref="mtk__div__1d_8cc" startline="595" endline="769">mtk::Div1D::ComputeRationalBasisNullSpace</referencedby>
        <referencedby refid="classmtk_1_1Div1D_1a4be0534a4e22d44a7aedde326cc3f3b6" compoundref="mtk__div__1d_8cc" startline="771" endline="989">mtk::Div1D::ComputePreliminaryApproximations</referencedby>
        <referencedby refid="classmtk_1_1Div1D_1aaadd6a6e6836bb94841c4c35dffab828" compoundref="mtk__div__1d_8cc" startline="991" endline="1362">mtk::Div1D::ComputeWeights</referencedby>
        <referencedby refid="classmtk_1_1Div1D_1a29bb417c76286414dce9258a0bcb5aab" compoundref="mtk__div__1d_8cc" startline="1364" endline="1481">mtk::Div1D::ComputeStencilBoundaryGrid</referencedby>
        <referencedby refid="classmtk_1_1Div1D_1a5a12482e1ceac232339dd8f647af886b" compoundref="mtk__div__1d_8cc" startline="1483" endline="1554">mtk::Div1D::AssembleOperator</referencedby>
        <referencedby refid="classmtk_1_1GLPKAdapter_1a834480aca83e3c0d09fdab7fdb7e8a3f" compoundref="mtk__glpk__adapter_8cc" startline="77" endline="331">mtk::GLPKAdapter::SolveSimplexAndCompare</referencedby>
        <referencedby refid="classmtk_1_1Grad1D_1a74ef5245cfae6fd158bd7f563a0c2e52" compoundref="mtk__grad__1d_8cc" startline="198" endline="335">mtk::Grad1D::ConstructGrad1D</referencedby>
        <referencedby refid="classmtk_1_1Grad1D_1a77b2eddbe4ab03f469306c604d505b1a" compoundref="mtk__grad__1d_8cc" startline="377" endline="444">mtk::Grad1D::ReturnAsDenseMatrix</referencedby>
        <referencedby refid="classmtk_1_1Grad1D_1ab07e6a15edca32534ae3d1a8ccaf1c42" compoundref="mtk__grad__1d_8cc" startline="510" endline="570">mtk::Grad1D::ReturnAsDimensionlessDenseMatrix</referencedby>
        <referencedby refid="classmtk_1_1Grad1D_1ad6df25cc9dfc85ff8562ae3605486976" compoundref="mtk__grad__1d_8cc" startline="572" endline="667">mtk::Grad1D::ComputeStencilInteriorGrid</referencedby>
        <referencedby refid="classmtk_1_1Grad1D_1a2d03e6a3961bee558f575ec4099782a9" compoundref="mtk__grad__1d_8cc" startline="669" endline="850">mtk::Grad1D::ComputeRationalBasisNullSpace</referencedby>
        <referencedby refid="classmtk_1_1Grad1D_1add4c68a6e78d8b9c2b800b3f96f4757d" compoundref="mtk__grad__1d_8cc" startline="852" endline="1071">mtk::Grad1D::ComputePreliminaryApproximations</referencedby>
        <referencedby refid="classmtk_1_1Grad1D_1a224082617751864bffca9bfe494c36d5" compoundref="mtk__grad__1d_8cc" startline="1073" endline="1455">mtk::Grad1D::ComputeWeights</referencedby>
        <referencedby refid="classmtk_1_1Grad1D_1a7ad1cecf6b52647263208ffaea0ee1e5" compoundref="mtk__grad__1d_8cc" startline="1457" endline="1579">mtk::Grad1D::ComputeStencilBoundaryGrid</referencedby>
        <referencedby refid="classmtk_1_1Grad1D_1a4eb4d363506b8c64b2bb18a318bbd259" compoundref="mtk__grad__1d_8cc" startline="1581" endline="1650">mtk::Grad1D::AssembleOperator</referencedby>
        <referencedby refid="classmtk_1_1Interp1D_1ace09ceeb508afde5d95f20a8e73d5315" compoundref="mtk__interp__1d_8cc" startline="96" endline="130">mtk::Interp1D::ConstructInterp1D</referencedby>
        <referencedby refid="classmtk_1_1Lap1D_1a685dcba88c08cf5b7b6c2aa4669a472c" compoundref="mtk__lap__1d_8cc" startline="139" endline="290">mtk::Lap1D::ConstructLap1D</referencedby>
        <referencedby refid="classmtk_1_1LAPACKAdapter_1ae5c6e78c9c819c9ac7a6f31bfd011d7a" compoundref="mtk__lapack__adapter_8cc" startline="594" endline="789">mtk::LAPACKAdapter::QRFactorDenseMatrix</referencedby>
        <referencedby refid="classmtk_1_1LAPACKAdapter_1a380f148ffdf96bae2f79ae28f1a6560c" compoundref="mtk__lapack__adapter_8cc" startline="791" endline="875">mtk::LAPACKAdapter::SolveRectangularDenseSystem</referencedby>
        <referencedby refid="classmtk_1_1UniStgGrid1D_1aa9b9db169c6e052e6fd6ffd6fca36646" compoundref="mtk__uni__stg__grid__1d_8cc" startline="124" endline="142">mtk::UniStgGrid1D::UniStgGrid1D</referencedby>
        <referencedby refid="classmtk_1_1UniStgGrid2D_1a9d96b31002c1deb3a90954bbb112487e" compoundref="mtk__uni__stg__grid__2d_8cc" startline="170" endline="202">mtk::UniStgGrid2D::UniStgGrid2D</referencedby>
        <referencedby refid="classmtk_1_1UniStgGrid2D_1a1787a79e4bcee6b89c681dc7e5e2d7bc" compoundref="mtk__uni__stg__grid__2d_8cc" startline="438" endline="512">mtk::UniStgGrid2D::WriteToFile</referencedby>
        <referencedby refid="classmtk_1_1UniStgGrid3D_1aa5a902b9b0236a81c4b12198d6e97534" compoundref="mtk__uni__stg__grid__3d_8cc" startline="174" endline="219">mtk::UniStgGrid3D::UniStgGrid3D</referencedby>
      </memberdef>
      <memberdef kind="variable" id="group__c01-roots_1ga26407c24d43b6b95480943340d285c71" prot="public" static="no" mutable="no">
        <type>const float</type>
        <definition>mtk::kOne</definition>
        <argsstring></argsstring>
        <name>kOne</name>
        <initializer>{1.0f}</initializer>
        <briefdescription>
<para>MTK&apos;s one defined according to selective compilation. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>Declared as double if MTK_PRECISION_DOUBLE is defined on <ref refid="Makefile_8inc" kindref="compound">Makefile.inc</ref>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/esanchez/Dropbox/MTK/include/mtk_roots.h" line="127" column="1" bodyfile="/home/esanchez/Dropbox/MTK/include/mtk_roots.h" bodystart="127" bodyend="-1"/>
        <referencedby refid="classmtk_1_1BLASAdapter_1af2ac5691f45e67d6e26186b071119ec4" compoundref="mtk__blas__adapter_8cc" startline="361" endline="379">mtk::BLASAdapter::RelNorm2Error</referencedby>
        <referencedby refid="classmtk_1_1BLASAdapter_1acebd0e9bfe0bdd609c7fbea98ccfd3b5" compoundref="mtk__blas__adapter_8cc" startline="412" endline="467">mtk::BLASAdapter::RealDenseMM</referencedby>
        <referencedby refid="classmtk_1_1DenseMatrix_1a4ef0dec1b5558fcf00719bfac059ec68" compoundref="mtk__dense__matrix_8cc" startline="228" endline="267">mtk::DenseMatrix::DenseMatrix</referencedby>
        <referencedby refid="classmtk_1_1Div1D_1a213fddbaaf86e4840c6a9649b69c2d49" compoundref="mtk__div__1d_8cc" startline="368" endline="430">mtk::Div1D::ReturnAsDenseMatrix</referencedby>
        <referencedby refid="classmtk_1_1Div1D_1a3eb3a32862a6b066cd583cbbd00a6509" compoundref="mtk__div__1d_8cc" startline="494" endline="593">mtk::Div1D::ComputeStencilInteriorGrid</referencedby>
        <referencedby refid="classmtk_1_1Div1D_1aa0c0c278b2c00a29c1ceaa70d31aebab" compoundref="mtk__div__1d_8cc" startline="595" endline="769">mtk::Div1D::ComputeRationalBasisNullSpace</referencedby>
        <referencedby refid="classmtk_1_1Div1D_1a4be0534a4e22d44a7aedde326cc3f3b6" compoundref="mtk__div__1d_8cc" startline="771" endline="989">mtk::Div1D::ComputePreliminaryApproximations</referencedby>
        <referencedby refid="classmtk_1_1Div1D_1aaadd6a6e6836bb94841c4c35dffab828" compoundref="mtk__div__1d_8cc" startline="991" endline="1362">mtk::Div1D::ComputeWeights</referencedby>
        <referencedby refid="classmtk_1_1Grad1D_1a77b2eddbe4ab03f469306c604d505b1a" compoundref="mtk__grad__1d_8cc" startline="377" endline="444">mtk::Grad1D::ReturnAsDenseMatrix</referencedby>
        <referencedby refid="classmtk_1_1Grad1D_1ad6df25cc9dfc85ff8562ae3605486976" compoundref="mtk__grad__1d_8cc" startline="572" endline="667">mtk::Grad1D::ComputeStencilInteriorGrid</referencedby>
        <referencedby refid="classmtk_1_1Grad1D_1a2d03e6a3961bee558f575ec4099782a9" compoundref="mtk__grad__1d_8cc" startline="669" endline="850">mtk::Grad1D::ComputeRationalBasisNullSpace</referencedby>
        <referencedby refid="classmtk_1_1Grad1D_1add4c68a6e78d8b9c2b800b3f96f4757d" compoundref="mtk__grad__1d_8cc" startline="852" endline="1071">mtk::Grad1D::ComputePreliminaryApproximations</referencedby>
        <referencedby refid="classmtk_1_1Grad1D_1a224082617751864bffca9bfe494c36d5" compoundref="mtk__grad__1d_8cc" startline="1073" endline="1455">mtk::Grad1D::ComputeWeights</referencedby>
        <referencedby refid="classmtk_1_1Interp1D_1ace09ceeb508afde5d95f20a8e73d5315" compoundref="mtk__interp__1d_8cc" startline="96" endline="130">mtk::Interp1D::ConstructInterp1D</referencedby>
        <referencedby refid="classmtk_1_1Interp1D_1aee8126b8a4be378a30be4d95b43b384b" compoundref="mtk__interp__1d_8cc" startline="137" endline="178">mtk::Interp1D::ReturnAsDenseMatrix</referencedby>
        <referencedby refid="classmtk_1_1Lap1D_1aaea34a17b0879e05eb4109645a2ba8f4" compoundref="mtk__lap__1d_8cc" startline="297" endline="365">mtk::Lap1D::ReturnAsDenseMatrix</referencedby>
        <referencedby refid="classmtk_1_1RobinBCDescriptor1D_1ab8446428df923c27f388a85bd3f2c6d4" compoundref="mtk__robin__bc__descriptor__1d_8cc" startline="166" endline="244">mtk::RobinBCDescriptor1D::ImposeOnLaplacianMatrix</referencedby>
        <referencedby refid="classmtk_1_1RobinBCDescriptor2D_1af5dd24444e7eb14592a3c3feaf30d561" compoundref="mtk__robin__bc__descriptor__2d_8cc" startline="399" endline="466">mtk::RobinBCDescriptor2D::ImposeOnWestBoundaryNoSpace</referencedby>
        <referencedby refid="classmtk_1_1RobinBCDescriptor2D_1ae1df82802d541d3566f3d2659e4aaf05" compoundref="mtk__robin__bc__descriptor__2d_8cc" startline="495" endline="562">mtk::RobinBCDescriptor2D::ImposeOnEastBoundaryNoSpace</referencedby>
      </memberdef>
      <memberdef kind="variable" id="group__c01-roots_1gaf39c2d851a2db744f4feb1c5ab3ec2cf" prot="public" static="no" mutable="no">
        <type>const float</type>
        <definition>mtk::kTwo</definition>
        <argsstring></argsstring>
        <name>kTwo</name>
        <initializer>{2.0f}</initializer>
        <briefdescription>
<para>MTK&apos;s two defined according to selective compilation. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>Declared as double if MTK_PRECISION_DOUBLE is defined on <ref refid="Makefile_8inc" kindref="compound">Makefile.inc</ref>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/esanchez/Dropbox/MTK/include/mtk_roots.h" line="128" column="1" bodyfile="/home/esanchez/Dropbox/MTK/include/mtk_roots.h" bodystart="128" bodyend="-1"/>
        <referencedby refid="classmtk_1_1RobinBCDescriptor2D_1a82159bcca93555114532c5fa4d0fb3db" compoundref="mtk__robin__bc__descriptor__2d_8cc" startline="229" endline="282">mtk::RobinBCDescriptor2D::ImposeOnSouthBoundaryNoSpace</referencedby>
        <referencedby refid="classmtk_1_1RobinBCDescriptor2D_1a3bc22c1d5a7a4d7c2130351cbfa35135" compoundref="mtk__robin__bc__descriptor__2d_8cc" startline="312" endline="370">mtk::RobinBCDescriptor2D::ImposeOnNorthBoundaryNoSpace</referencedby>
        <referencedby refid="classmtk_1_1RobinBCDescriptor2D_1af5dd24444e7eb14592a3c3feaf30d561" compoundref="mtk__robin__bc__descriptor__2d_8cc" startline="399" endline="466">mtk::RobinBCDescriptor2D::ImposeOnWestBoundaryNoSpace</referencedby>
        <referencedby refid="classmtk_1_1RobinBCDescriptor2D_1ae1df82802d541d3566f3d2659e4aaf05" compoundref="mtk__robin__bc__descriptor__2d_8cc" startline="495" endline="562">mtk::RobinBCDescriptor2D::ImposeOnEastBoundaryNoSpace</referencedby>
        <referencedby refid="classmtk_1_1RobinBCDescriptor2D_1ac9564bc46c196cbf4720a0e4b93da8b0" compoundref="mtk__robin__bc__descriptor__2d_8cc" startline="674" endline="790">mtk::RobinBCDescriptor2D::ImposeOnGrid</referencedby>
        <referencedby refid="classmtk_1_1UniStgGrid3D_1a02fb1ea08f81e733ab3c8ac244b78371" compoundref="mtk__uni__stg__grid__3d_8cc" startline="318" endline="392">mtk::UniStgGrid3D::BindScalarField</referencedby>
      </memberdef>
      <memberdef kind="variable" id="group__c01-roots_1gae914b125d81d1b97e0aee7bbc7739786" prot="public" static="no" mutable="no">
        <type>const float</type>
        <definition>mtk::kDefaultTolerance</definition>
        <argsstring></argsstring>
        <name>kDefaultTolerance</name>
        <initializer>{1e-7f}</initializer>
        <briefdescription>
<para>Considered tolerance for comparisons in numerical methods. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>Declared as double if MTK_PRECISION_DOUBLE is defined on <ref refid="Makefile_8inc" kindref="compound">Makefile.inc</ref>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/esanchez/Dropbox/MTK/include/mtk_roots.h" line="143" column="1" bodyfile="/home/esanchez/Dropbox/MTK/include/mtk_roots.h" bodystart="143" bodyend="-1"/>
        <referencedby refid="classmtk_1_1DenseMatrix_1a94ab5a02d9cf81c17b6f68f4c41cb797" compoundref="mtk__dense__matrix_8cc" startline="146" endline="165">mtk::DenseMatrix::operator==</referencedby>
      </memberdef>
      <memberdef kind="variable" id="group__c01-roots_1ga35718d949bdc81a08a9cc8ebbe3478a2" prot="public" static="no" mutable="no">
        <type>const float</type>
        <definition>mtk::kDefaultMimeticThreshold</definition>
        <argsstring></argsstring>
        <name>kDefaultMimeticThreshold</name>
        <initializer>{1e-6f}</initializer>
        <briefdescription>
<para>Default tolerance for higher-order mimetic operators. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>Declared as double if MTK_PRECISION_DOUBLE is defined on <ref refid="Makefile_8inc" kindref="compound">Makefile.inc</ref>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/esanchez/Dropbox/MTK/include/mtk_roots.h" line="158" column="1" bodyfile="/home/esanchez/Dropbox/MTK/include/mtk_roots.h" bodystart="158" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__c01-roots_1ga0d95560098eb36420511103637b6952f" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>mtk::kDefaultOrderAccuracy</definition>
        <argsstring></argsstring>
        <name>kDefaultOrderAccuracy</name>
        <initializer>{2}</initializer>
        <briefdescription>
<para>Default order of accuracy for mimetic operators. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/esanchez/Dropbox/MTK/include/mtk_roots.h" line="168" column="1" bodyfile="/home/esanchez/Dropbox/MTK/include/mtk_roots.h" bodystart="168" bodyend="-1"/>
        <referencedby refid="classmtk_1_1Div1D_1a5a12482e1ceac232339dd8f647af886b" compoundref="mtk__div__1d_8cc" startline="1483" endline="1554">mtk::Div1D::AssembleOperator</referencedby>
        <referencedby refid="namespacemtk_1a3f546b8a3743b8719db17e33f2d7ef7f" compoundref="mtk__grad__1d_8cc" startline="84" endline="140">operator&lt;&lt;</referencedby>
        <referencedby refid="classmtk_1_1Grad1D_1a4eb4d363506b8c64b2bb18a318bbd259" compoundref="mtk__grad__1d_8cc" startline="1581" endline="1650">mtk::Grad1D::AssembleOperator</referencedby>
      </memberdef>
      <memberdef kind="variable" id="group__c01-roots_1ga295dd2f403c775ecd942c22b5a777496" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>mtk::kCriticalOrderAccuracyGrad</definition>
        <argsstring></argsstring>
        <name>kCriticalOrderAccuracyGrad</name>
        <initializer>{10}</initializer>
        <briefdescription>
<para>At this order (and higher) we must use the CBSA to construct gradients. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/esanchez/Dropbox/MTK/include/mtk_roots.h" line="177" column="1" bodyfile="/home/esanchez/Dropbox/MTK/include/mtk_roots.h" bodystart="177" bodyend="-1"/>
        <referencedby refid="classmtk_1_1Grad1D_1a74ef5245cfae6fd158bd7f563a0c2e52" compoundref="mtk__grad__1d_8cc" startline="198" endline="335">mtk::Grad1D::ConstructGrad1D</referencedby>
        <referencedby refid="classmtk_1_1Grad1D_1a224082617751864bffca9bfe494c36d5" compoundref="mtk__grad__1d_8cc" startline="1073" endline="1455">mtk::Grad1D::ComputeWeights</referencedby>
      </memberdef>
      <memberdef kind="variable" id="group__c01-roots_1ga0898eef2108473e44a5223932d571c31" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>mtk::kCriticalOrderAccuracyDiv</definition>
        <argsstring></argsstring>
        <name>kCriticalOrderAccuracyDiv</name>
        <initializer>{8}</initializer>
        <briefdescription>
<para>At this order (and higher) we must use the CBSA to construct divergences. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/esanchez/Dropbox/MTK/include/mtk_roots.h" line="186" column="1" bodyfile="/home/esanchez/Dropbox/MTK/include/mtk_roots.h" bodystart="186" bodyend="-1"/>
        <referencedby refid="classmtk_1_1Div1D_1a52fcd1542f11e606e36bd188e48bfdf7" compoundref="mtk__div__1d_8cc" startline="189" endline="326">mtk::Div1D::ConstructDiv1D</referencedby>
        <referencedby refid="classmtk_1_1Div1D_1aaadd6a6e6836bb94841c4c35dffab828" compoundref="mtk__div__1d_8cc" startline="991" endline="1362">mtk::Div1D::ComputeWeights</referencedby>
        <referencedby refid="classmtk_1_1Lap1D_1a685dcba88c08cf5b7b6c2aa4669a472c" compoundref="mtk__lap__1d_8cc" startline="139" endline="290">mtk::Lap1D::ConstructLap1D</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespacemtk_1a508e99fcb14d526bc43aa0a80aa4b658" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float mtk::snrm2_</definition>
        <argsstring>(int *n, float *x, int *incx)</argsstring>
        <name>snrm2_</name>
        <param>
          <type>int *</type>
          <declname>n</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>incx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/esanchez/Dropbox/MTK/src/mtk_blas_adapter.cc" line="115" column="1"/>
        <referencedby refid="classmtk_1_1BLASAdapter_1ab92440888b730863244c5d9479c11aca" compoundref="mtk__blas__adapter_8cc" startline="327" endline="340">mtk::BLASAdapter::RealNRM2</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacemtk_1a81a2d7d1ea9eff65ae13646c93dad5e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mtk::saxpy_</definition>
        <argsstring>(int *n, float *sa, float *sx, int *incx, float *sy, int *incy)</argsstring>
        <name>saxpy_</name>
        <param>
          <type>int *</type>
          <declname>n</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>sa</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>sx</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>incx</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>sy</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>incy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/esanchez/Dropbox/MTK/src/mtk_blas_adapter.cc" line="159" column="1"/>
        <referencedby refid="classmtk_1_1BLASAdapter_1a081cd092ae65e730f44eae8643edd539" compoundref="mtk__blas__adapter_8cc" startline="342" endline="359">mtk::BLASAdapter::RealAXPY</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacemtk_1a88daff7ad6f251a58b94aa2d0c94d069" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mtk::sgemv_</definition>
        <argsstring>(char *trans, int *m, int *n, float *alpha, float *a, int *lda, float *x, int *incx, float *beta, float *y, int *incy)</argsstring>
        <name>sgemv_</name>
        <param>
          <type>char *</type>
          <declname>trans</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>m</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>n</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>alpha</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>lda</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>incx</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>beta</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>incy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/esanchez/Dropbox/MTK/src/mtk_blas_adapter.cc" line="231" column="1"/>
        <referencedby refid="classmtk_1_1BLASAdapter_1afdcac059a4294287cb55638221220646" compoundref="mtk__blas__adapter_8cc" startline="381" endline="410">mtk::BLASAdapter::RealDenseMV</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacemtk_1adb7c0560326b8e57f255e58b87ec76b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mtk::sgemm_</definition>
        <argsstring>(char *transa, char *transb, int *m, int *n, int *k, double *alpha, double *a, int *lda, double *b, aamm int *ldb, double *beta, double *c, int *ldc)</argsstring>
        <name>sgemm_</name>
        <param>
          <type>char *</type>
          <declname>transa</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>transb</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>m</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>n</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>k</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>alpha</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>lda</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>b</declname>
        </param>
        <param>
          <type>aamm int *</type>
          <declname>ldb</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>beta</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>c</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>ldc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/esanchez/Dropbox/MTK/src/mtk_blas_adapter.cc" line="310" column="1"/>
        <referencedby refid="classmtk_1_1BLASAdapter_1acebd0e9bfe0bdd609c7fbea98ccfd3b5" compoundref="mtk__blas__adapter_8cc" startline="412" endline="467">mtk::BLASAdapter::RealDenseMM</referencedby>
        <referencedby refid="classmtk_1_1BLASAdapter_1a0dd80d043615a95f11b7341ce69b44d3" compoundref="mtk__blas__adapter_8cc" startline="469" endline="515">mtk::BLASAdapter::RealDenseSM</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacemtk_1ad3bcf52cda59ddb5fc7b4bdce76c46dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream&amp; mtk::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;stream, mtk::DenseMatrix &amp;in)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>stream</declname>
        </param>
        <param>
          <type><ref refid="classmtk_1_1DenseMatrix" kindref="compound">mtk::DenseMatrix</ref> &amp;</type>
          <declname>in</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/esanchez/Dropbox/MTK/src/mtk_dense_matrix.cc" line="79" column="1" bodyfile="/home/esanchez/Dropbox/MTK/src/mtk_dense_matrix.cc" bodystart="79" bodyend="102"/>
        <references refid="classmtk_1_1DenseMatrix_1a481c8d09af685a5ba67acefdcaa810cc" compoundref="mtk__dense__matrix_8h" startline="289">mtk::DenseMatrix::matrix_properties_</references>
        <references refid="classmtk_1_1Matrix_1ab308b25b48e4fcd39fc60e0c3fc66dea" compoundref="mtk__matrix_8cc" startline="117" endline="120">mtk::Matrix::num_rows</references>
        <references refid="classmtk_1_1Matrix_1a2160118d0edf51cf2aaa806ee1b915f8" compoundref="mtk__matrix_8cc" startline="122" endline="125">mtk::Matrix::num_cols</references>
        <references refid="classmtk_1_1Matrix_1a13cd17621652cd5551ff98549bd94df7" compoundref="mtk__matrix_8cc" startline="112" endline="115">mtk::Matrix::ordering</references>
        <references refid="namespacemtk_1ga622801bd9f912d0f976c3e383f5f581ca34d2765ffc490951febdcca04bc4f7cd">COL_MAJOR</references>
        <references refid="classmtk_1_1DenseMatrix_1a7893e4e5c8d2e2de32b156177e78cb6f" compoundref="mtk__dense__matrix_8h" startline="291">mtk::DenseMatrix::data_</references>
      </memberdef>
      <memberdef kind="function" id="namespacemtk_1a12db5e6fff3788f728819a60d5c28d01" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream&amp; mtk::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;stream, mtk::Div1D &amp;in)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>stream</declname>
        </param>
        <param>
          <type><ref refid="classmtk_1_1Div1D" kindref="compound">mtk::Div1D</ref> &amp;</type>
          <declname>in</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para><orderedlist>
<listitem><para>Print order of accuracy.</para></listitem><listitem><para>Print approximating coefficients for the interior.</para></listitem><listitem><para>Print mimetic weights.</para></listitem><listitem><para>Print mimetic approximations at the boundary. </para></listitem></orderedlist>
</para>        </inbodydescription>
        <location file="/home/esanchez/Dropbox/MTK/src/mtk_div_1d.cc" line="84" column="1" bodyfile="/home/esanchez/Dropbox/MTK/src/mtk_div_1d.cc" bodystart="84" bodyend="133"/>
        <references refid="classmtk_1_1Div1D_1a0f96410051ba1fa6d91dfa7b7eacead9" compoundref="mtk__div__1d_8h" startline="223">mtk::Div1D::divergence_</references>
        <references refid="classmtk_1_1Div1D_1a9c8a8d7cd08a72dbd1daa8deee06f9c6" compoundref="mtk__div__1d_8h" startline="209">mtk::Div1D::order_accuracy_</references>
        <references refid="classmtk_1_1Div1D_1a264027144def76d802778391f55381a0" compoundref="mtk__div__1d_8h" startline="210">mtk::Div1D::dim_null_</references>
        <references refid="classmtk_1_1Div1D_1a717240b41eaa2adde858630b9e3d3042" compoundref="mtk__div__1d_8h" startline="211">mtk::Div1D::num_bndy_coeffs_</references>
        <references refid="classmtk_1_1Div1D_1aab7f0333d4156efa92e2089295decebc" compoundref="mtk__div__1d_8h" startline="225">mtk::Div1D::sums_rows_mim_bndy_</references>
      </memberdef>
      <memberdef kind="function" id="namespacemtk_1a3f546b8a3743b8719db17e33f2d7ef7f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream&amp; mtk::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;stream, mtk::Grad1D &amp;in)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>stream</declname>
        </param>
        <param>
          <type><ref refid="classmtk_1_1Grad1D" kindref="compound">mtk::Grad1D</ref> &amp;</type>
          <declname>in</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para><orderedlist>
<listitem><para>Print order of accuracy.</para></listitem><listitem><para>Print approximating coefficients for the interior.</para></listitem><listitem><para>Print mimetic weights.</para></listitem><listitem><para>Print mimetic approximations at the boundary. </para></listitem></orderedlist>
</para>        </inbodydescription>
        <location file="/home/esanchez/Dropbox/MTK/src/mtk_grad_1d.cc" line="84" column="1" bodyfile="/home/esanchez/Dropbox/MTK/src/mtk_grad_1d.cc" bodystart="84" bodyend="140"/>
        <references refid="classmtk_1_1Grad1D_1a024b84b1ea285c0c590eb42d40ff4469" compoundref="mtk__grad__1d_8h" startline="231">mtk::Grad1D::gradient_</references>
        <references refid="classmtk_1_1Grad1D_1a545e9c865e5d4716f2684a64f744c78c" compoundref="mtk__grad__1d_8h" startline="216">mtk::Grad1D::order_accuracy_</references>
        <references refid="group__c01-roots_1ga0d95560098eb36420511103637b6952f" compoundref="mtk__roots_8h" startline="168">kDefaultOrderAccuracy</references>
        <references refid="classmtk_1_1Grad1D_1abe15c1ffd9dfaba1a65f4f0e096287ce" compoundref="mtk__grad__1d_8h" startline="218">mtk::Grad1D::num_bndy_approxs_</references>
        <references refid="classmtk_1_1Grad1D_1a60c560882bc601f9ab1d4cd5331e55ef" compoundref="mtk__grad__1d_8h" startline="219">mtk::Grad1D::num_bndy_coeffs_</references>
        <references refid="classmtk_1_1Grad1D_1ab8858a35339ed7036083d25b23293737" compoundref="mtk__grad__1d_8h" startline="233">mtk::Grad1D::sums_rows_mim_bndy_</references>
      </memberdef>
      <memberdef kind="function" id="namespacemtk_1a1defe4e644a8c7d89bcceb0b1bc2372f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream&amp; mtk::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;stream, mtk::Interp1D &amp;in)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>stream</declname>
        </param>
        <param>
          <type><ref refid="classmtk_1_1Interp1D" kindref="compound">mtk::Interp1D</ref> &amp;</type>
          <declname>in</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para><orderedlist>
<listitem><para>Print approximating coefficients for the interior. </para></listitem></orderedlist>
</para>        </inbodydescription>
        <location file="/home/esanchez/Dropbox/MTK/src/mtk_interp_1d.cc" line="66" column="1" bodyfile="/home/esanchez/Dropbox/MTK/src/mtk_interp_1d.cc" bodystart="66" bodyend="77"/>
        <references refid="classmtk_1_1Interp1D_1a1ee8467d93536dc04240cd76f0d95c9c" compoundref="mtk__interp__1d_8h" startline="125">mtk::Interp1D::order_accuracy_</references>
        <references refid="classmtk_1_1Interp1D_1abae01ab84103d8b11903357cfdeb94d5" compoundref="mtk__interp__1d_8h" startline="127">mtk::Interp1D::coeffs_interior_</references>
      </memberdef>
      <memberdef kind="function" id="namespacemtk_1af667c01a388ef1815d549b09b2d76bcc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream&amp; mtk::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;stream, mtk::Lap1D &amp;in)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>stream</declname>
        </param>
        <param>
          <type><ref refid="classmtk_1_1Lap1D" kindref="compound">mtk::Lap1D</ref> &amp;</type>
          <declname>in</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para><orderedlist>
<listitem><para>Print order of accuracy.</para></listitem><listitem><para>Print approximating coefficients for the interior.</para></listitem><listitem><para>No weights, thus print the mimetic boundary coefficients. </para></listitem></orderedlist>
</para>        </inbodydescription>
        <location file="/home/esanchez/Dropbox/MTK/src/mtk_lap_1d.cc" line="73" column="1" bodyfile="/home/esanchez/Dropbox/MTK/src/mtk_lap_1d.cc" bodystart="73" bodyend="109"/>
        <references refid="classmtk_1_1Lap1D_1a64a3977527c00b4ef994d1bd549f82fd" compoundref="mtk__lap__1d_8h" startline="150">mtk::Lap1D::laplacian_</references>
        <references refid="classmtk_1_1Lap1D_1a35d34c085b9cf6f9961a699dfb02fea6" compoundref="mtk__lap__1d_8h" startline="147">mtk::Lap1D::order_accuracy_</references>
        <references refid="classmtk_1_1Lap1D_1a81d34a48cead4d5a2358581b1ff44252" compoundref="mtk__lap__1d_8h" startline="156">mtk::Lap1D::sums_rows_mim_bndy_</references>
      </memberdef>
      <memberdef kind="function" id="namespacemtk_1ae1d63c7ae73b3c48e0dca81eb19039f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mtk::sgesv_</definition>
        <argsstring>(int *n, int *nrhs, Real *a, int *lda, int *ipiv, Real *b, int *ldb, int *info)</argsstring>
        <name>sgesv_</name>
        <param>
          <type>int *</type>
          <declname>n</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>nrhs</declname>
        </param>
        <param>
          <type><ref refid="group__c01-roots_1gac080bbbf5cbb5502c9f00405f894857d" kindref="member">Real</ref> *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>lda</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>ipiv</declname>
        </param>
        <param>
          <type><ref refid="group__c01-roots_1gac080bbbf5cbb5502c9f00405f894857d" kindref="member">Real</ref> *</type>
          <declname>b</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>ldb</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>info</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/esanchez/Dropbox/MTK/src/mtk_lapack_adapter.cc" line="131" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespacemtk_1ada6df1b733204aa7ff0b1ec7556288f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mtk::sgels_</definition>
        <argsstring>(char *trans, int *m, int *n, int *nrhs, Real *a, int *lda, Real *b, int *ldb, Real *work, int *lwork, int *info)</argsstring>
        <name>sgels_</name>
        <param>
          <type>char *</type>
          <declname>trans</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>m</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>n</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>nrhs</declname>
        </param>
        <param>
          <type><ref refid="group__c01-roots_1gac080bbbf5cbb5502c9f00405f894857d" kindref="member">Real</ref> *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>lda</declname>
        </param>
        <param>
          <type><ref refid="group__c01-roots_1gac080bbbf5cbb5502c9f00405f894857d" kindref="member">Real</ref> *</type>
          <declname>b</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>ldb</declname>
        </param>
        <param>
          <type><ref refid="group__c01-roots_1gac080bbbf5cbb5502c9f00405f894857d" kindref="member">Real</ref> *</type>
          <declname>work</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>lwork</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>info</declname>
        </param>
        <briefdescription>
<para>Single-precision GEneral matrix Least Squares solver. </para>        </briefdescription>
        <detaileddescription>
<para>SGELS solves overdetermined or underdetermined real linear systems involving an M-by-N matrix A, or its transpose, using a QR or LQ factorization of A. It is assumed that A has full rank.</para><para>The following options are provided:</para><para><orderedlist>
<listitem><para>If TRANS = &apos;N&apos; and m &gt;= n: find the least squares solution of an overdetermined system, i.e., solve the least squares problem <verbatim>            minimize || B - A*X ||.
</verbatim></para></listitem><listitem><para>If TRANS = &apos;N&apos; and m &lt; n: find the minimum norm solution of an underdetermined system A * X = B.</para></listitem><listitem><para>If TRANS = &apos;T&apos; and m &gt;= n: find the minimum norm solution of an undetermined system A**T * X = B.</para></listitem><listitem><para>If TRANS = &apos;T&apos; and m &lt; n: find the least squares solution of an overdetermined system, i.e., solve the least squares problem <verbatim>            minimize || B - A**T * X ||.
</verbatim></para></listitem></orderedlist>
</para><para>Several right hand side vectors b and solution vectors x can be handled in a single call; they are stored as the columns of the M-by-NRHS right hand side matrix B and the N-by-NRHS solution matrix X.</para><para><simplesect kind="see"><para><ulink url="http://www.math.utah.edu/software/lapack/lapack-s/sgels.html">http://www.math.utah.edu/software/lapack/lapack-s/sgels.html</ulink></para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">trans</parametername>
</parameternamelist>
<parameterdescription>
<para>Am I giving the transpose of the matrix? </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">m</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of rows of the matrix a. m &gt;= 0. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">n</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of columns of the matrix a. n &gt;= 0. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">nrhs</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of right-hand sides. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">a</parametername>
</parameternamelist>
<parameterdescription>
<para>On entry, the m-by-n matrix a. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">lda</parametername>
</parameternamelist>
<parameterdescription>
<para>The leading dimension of a. lda &gt;= max(1,m). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">b</parametername>
</parameternamelist>
<parameterdescription>
<para>On entry, matrix b of right-hand side vectors. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ldb</parametername>
</parameternamelist>
<parameterdescription>
<para>The leading dimension of b. ldb &gt;= max(1,m,n). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">work</parametername>
</parameternamelist>
<parameterdescription>
<para>On exit, if info = 0, work(1) is optimal lwork. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">lwork</parametername>
</parameternamelist>
<parameterdescription>
<para>The dimension of the array work. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">info</parametername>
</parameternamelist>
<parameterdescription>
<para>If info = 0, then successful exit. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/esanchez/Dropbox/MTK/src/mtk_lapack_adapter.cc" line="240" column="1"/>
        <referencedby refid="classmtk_1_1LAPACKAdapter_1a380f148ffdf96bae2f79ae28f1a6560c" compoundref="mtk__lapack__adapter_8cc" startline="791" endline="875">mtk::LAPACKAdapter::SolveRectangularDenseSystem</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacemtk_1aece7419193d8ab43e186c97ad6d529fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mtk::sgeqrf_</definition>
        <argsstring>(int *m, int *n, Real *a, int *lda, Real *tau, Real *work, int *lwork, int *info)</argsstring>
        <name>sgeqrf_</name>
        <param>
          <type>int *</type>
          <declname>m</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>n</declname>
        </param>
        <param>
          <type><ref refid="group__c01-roots_1gac080bbbf5cbb5502c9f00405f894857d" kindref="member">Real</ref> *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>lda</declname>
        </param>
        <param>
          <type><ref refid="group__c01-roots_1gac080bbbf5cbb5502c9f00405f894857d" kindref="member">Real</ref> *</type>
          <declname>tau</declname>
        </param>
        <param>
          <type><ref refid="group__c01-roots_1gac080bbbf5cbb5502c9f00405f894857d" kindref="member">Real</ref> *</type>
          <declname>work</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>lwork</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>info</declname>
        </param>
        <briefdescription>
<para>Single-precision GEneral matrix QR Factorization. </para>        </briefdescription>
        <detaileddescription>
<para>Single-Precision Orthogonal Make Q from QR: dormqr_ overwrites the general real M-by-N matrix C with (Table 1): <verbatim>            SIDE = &apos;L&apos;     SIDE = &apos;R&apos;
</verbatim> TRANS = &apos;N&apos;: Q * C C * Q TRANS = &apos;T&apos;: Q**T * C C * Q**T</para><para>where Q is a real orthogonal matrix defined as the product of k elementary reflectors <verbatim>  Q = H(1) H(2) . . . H(k)
</verbatim></para><para>as returned by SGEQRF. Q is of order M if SIDE = &apos;L&apos; and of order N if SIDE = &apos;R&apos;.</para><para><simplesect kind="see"><para><ulink url="http://www.netlib.org/lapack/explore-html/df/d97/sgeqrf_8f.html">http://www.netlib.org/lapack/explore-html/df/d97/sgeqrf_8f.html</ulink></para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">m</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of columns of the matrix a. n &gt;= 0. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">n</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of columns of the matrix a. n &gt;= 0. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">a</parametername>
</parameternamelist>
<parameterdescription>
<para>On entry, the n-by-n matrix a. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">lda</parametername>
</parameternamelist>
<parameterdescription>
<para>Leading dimension matrix. LDA &gt;= max(1,M). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">tau</parametername>
</parameternamelist>
<parameterdescription>
<para>Scalars from elementary reflectors. min(M,N). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">work</parametername>
</parameternamelist>
<parameterdescription>
<para>Workspace. info = 0, work(1) is optimal lwork. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">lwork</parametername>
</parameternamelist>
<parameterdescription>
<para>The dimension of work. lwork &gt;= max(1,n). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">info</parametername>
</parameternamelist>
<parameterdescription>
<para>info = 0: successful exit. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/esanchez/Dropbox/MTK/src/mtk_lapack_adapter.cc" line="321" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespacemtk_1a59c58408e1c0a9837b67a417be986b82" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mtk::sormqr_</definition>
        <argsstring>(char *side, char *trans, int *m, int *n, int *k, Real *a, int *lda, Real *tau, Real *c, int *ldc, Real *work, int *lwork, int *info)</argsstring>
        <name>sormqr_</name>
        <param>
          <type>char *</type>
          <declname>side</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>trans</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>m</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>n</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>k</declname>
        </param>
        <param>
          <type><ref refid="group__c01-roots_1gac080bbbf5cbb5502c9f00405f894857d" kindref="member">Real</ref> *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>lda</declname>
        </param>
        <param>
          <type><ref refid="group__c01-roots_1gac080bbbf5cbb5502c9f00405f894857d" kindref="member">Real</ref> *</type>
          <declname>tau</declname>
        </param>
        <param>
          <type><ref refid="group__c01-roots_1gac080bbbf5cbb5502c9f00405f894857d" kindref="member">Real</ref> *</type>
          <declname>c</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>ldc</declname>
        </param>
        <param>
          <type><ref refid="group__c01-roots_1gac080bbbf5cbb5502c9f00405f894857d" kindref="member">Real</ref> *</type>
          <declname>work</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>lwork</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>info</declname>
        </param>
        <briefdescription>
<para>Single-precision Orthogonal <ref refid="classmtk_1_1Matrix" kindref="compound">Matrix</ref> from QR factorization. </para>        </briefdescription>
        <detaileddescription>
<para>Single-Precision Orthogonal Make Q from QR: sormqr_ overwrites the general real M-by-N matrix C with (Table 1): <verbatim>            SIDE = &apos;L&apos;     SIDE = &apos;R&apos;
</verbatim> TRANS = &apos;N&apos;: Q * C C * Q TRANS = &apos;T&apos;: Q**T * C C * Q**T</para><para>where Q is a real orthogonal matrix defined as the product of k elementary reflectors <verbatim>  Q = H(1) H(2) . . . H(k)
</verbatim></para><para>as returned by SGEQRF. Q is of order M if SIDE = &apos;L&apos; and of order N if SIDE = &apos;R&apos;.</para><para><simplesect kind="see"><para><ulink url="http://www.netlib.org/lapack/explore-html/d0/d98/sormqr_8f_source.html">http://www.netlib.org/lapack/explore-html/d0/d98/sormqr_8f_source.html</ulink></para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">side</parametername>
</parameternamelist>
<parameterdescription>
<para>See Table 1 above. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">trans</parametername>
</parameternamelist>
<parameterdescription>
<para>See Table 1 above. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">m</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of rows of the C matrix. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">n</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of columns of the C matrix. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">k</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of reflectors. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">a</parametername>
</parameternamelist>
<parameterdescription>
<para>The matrix containing the reflectors. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">lda</parametername>
</parameternamelist>
<parameterdescription>
<para>The dimension of work. lwork &gt;= max(1,n). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">tau</parametername>
</parameternamelist>
<parameterdescription>
<para>Scalar factors of the elementary reflectors. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">c</parametername>
</parameternamelist>
<parameterdescription>
<para>Output matrix. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ldc</parametername>
</parameternamelist>
<parameterdescription>
<para>Leading dimension of the output matrix. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">work</parametername>
</parameternamelist>
<parameterdescription>
<para>Workspace. info = 0, work(1) optimal lwork. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">lwork</parametername>
</parameternamelist>
<parameterdescription>
<para>The dimension of work. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">info</parametername>
</parameternamelist>
<parameterdescription>
<para>info = 0: successful exit. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/esanchez/Dropbox/MTK/src/mtk_lapack_adapter.cc" line="414" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespacemtk_1a97f79d150b3b5c7b76d4fcc2271f972b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream&amp; mtk::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;stream, mtk::UniStgGrid1D &amp;in)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>stream</declname>
        </param>
        <param>
          <type><ref refid="classmtk_1_1UniStgGrid1D" kindref="compound">mtk::UniStgGrid1D</ref> &amp;</type>
          <declname>in</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para><orderedlist>
<listitem><para>Print spatial coordinates.</para></listitem><listitem><para>Print scalar field. </para></listitem></orderedlist>
</para>        </inbodydescription>
        <location file="/home/esanchez/Dropbox/MTK/src/mtk_uni_stg_grid_1d.cc" line="68" column="1" bodyfile="/home/esanchez/Dropbox/MTK/src/mtk_uni_stg_grid_1d.cc" bodystart="68" bodyend="96"/>
        <references refid="classmtk_1_1UniStgGrid1D_1a6910438d3396d0b9a130d11d16979c46" compoundref="mtk__uni__stg__grid__1d_8h" startline="196">mtk::UniStgGrid1D::west_bndy_x_</references>
        <references refid="classmtk_1_1UniStgGrid1D_1afa43750db0029b7454aef343759e7097" compoundref="mtk__uni__stg__grid__1d_8h" startline="198">mtk::UniStgGrid1D::num_cells_x_</references>
        <references refid="classmtk_1_1UniStgGrid1D_1a69a7d6be3171e53177e476348d04f4ae" compoundref="mtk__uni__stg__grid__1d_8h" startline="197">mtk::UniStgGrid1D::east_bndy_x_</references>
        <references refid="classmtk_1_1UniStgGrid1D_1a0a1f9c00e21659e05f414dd97e2a52e3" compoundref="mtk__uni__stg__grid__1d_8h" startline="193">mtk::UniStgGrid1D::discrete_domain_x_</references>
        <references refid="classmtk_1_1UniStgGrid1D_1a061b66c92532b1498ce0e15418754911" compoundref="mtk__uni__stg__grid__1d_8h" startline="191">mtk::UniStgGrid1D::nature_</references>
        <references refid="namespacemtk_1ga4c54f2a329cfb4e56213b02a259d19e2a8f3d9a4b6a7b7f2c7afa61ca113d0db9">SCALAR</references>
        <references refid="classmtk_1_1UniStgGrid1D_1a7379a5c6d16210cdd61ffa731bc47edc" compoundref="mtk__uni__stg__grid__1d_8h" startline="194">mtk::UniStgGrid1D::discrete_field_</references>
      </memberdef>
      <memberdef kind="function" id="namespacemtk_1a82cd99c0c7e695e4eccfbe7380525959" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream&amp; mtk::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;stream, mtk::UniStgGrid2D &amp;in)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>stream</declname>
        </param>
        <param>
          <type><ref refid="classmtk_1_1UniStgGrid2D" kindref="compound">mtk::UniStgGrid2D</ref> &amp;</type>
          <declname>in</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para><orderedlist>
<listitem><para>Print spatial coordinates.</para></listitem><listitem><para>Print scalar field. </para></listitem></orderedlist>
</para>        </inbodydescription>
        <location file="/home/esanchez/Dropbox/MTK/src/mtk_uni_stg_grid_2d.cc" line="67" column="1" bodyfile="/home/esanchez/Dropbox/MTK/src/mtk_uni_stg_grid_2d.cc" bodystart="67" bodyend="129"/>
        <references refid="classmtk_1_1UniStgGrid2D_1a59c42d8099a017bc8a082fddc1e5606c" compoundref="mtk__uni__stg__grid__2d_8h" startline="299">mtk::UniStgGrid2D::west_bndy_</references>
        <references refid="classmtk_1_1UniStgGrid2D_1ac03a0f4840ee6ae1bc853e5d9c0df8d1" compoundref="mtk__uni__stg__grid__2d_8h" startline="301">mtk::UniStgGrid2D::num_cells_x_</references>
        <references refid="classmtk_1_1UniStgGrid2D_1ae24f3d5bf5ed3a6d066cdf48aa1fb307" compoundref="mtk__uni__stg__grid__2d_8h" startline="300">mtk::UniStgGrid2D::east_bndy_</references>
        <references refid="classmtk_1_1UniStgGrid2D_1ac228c81fad7f4feeae93fb3c09d7e175" compoundref="mtk__uni__stg__grid__2d_8h" startline="304">mtk::UniStgGrid2D::south_bndy_</references>
        <references refid="classmtk_1_1UniStgGrid2D_1a3e4f61d781212ad57c34e9446c4074b6" compoundref="mtk__uni__stg__grid__2d_8h" startline="306">mtk::UniStgGrid2D::num_cells_y_</references>
        <references refid="classmtk_1_1UniStgGrid2D_1a3f904091b6e74aa78d8543e5cba26afb" compoundref="mtk__uni__stg__grid__2d_8h" startline="305">mtk::UniStgGrid2D::north_bndy_</references>
        <references refid="classmtk_1_1UniStgGrid2D_1ab15979865852583a46662ea592f27a4f" compoundref="mtk__uni__stg__grid__2d_8h" startline="293">mtk::UniStgGrid2D::discrete_domain_x_</references>
        <references refid="classmtk_1_1UniStgGrid2D_1ad69f93d4b27707d97f209b907383a7a2" compoundref="mtk__uni__stg__grid__2d_8h" startline="294">mtk::UniStgGrid2D::discrete_domain_y_</references>
        <references refid="classmtk_1_1UniStgGrid2D_1ac8b66740d328803f7fbabd1c42c775b2" compoundref="mtk__uni__stg__grid__2d_8h" startline="297">mtk::UniStgGrid2D::nature_</references>
        <references refid="namespacemtk_1ga4c54f2a329cfb4e56213b02a259d19e2a8f3d9a4b6a7b7f2c7afa61ca113d0db9">SCALAR</references>
        <references refid="classmtk_1_1UniStgGrid2D_1ad7474b2669ee988b84aed20b7f5dc7be" compoundref="mtk__uni__stg__grid__2d_8h" startline="295">mtk::UniStgGrid2D::discrete_field_</references>
      </memberdef>
      <memberdef kind="function" id="namespacemtk_1a50ce3dc63af019c21e15e1b09465d334" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream&amp; mtk::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;stream, mtk::UniStgGrid3D &amp;in)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>stream</declname>
        </param>
        <param>
          <type><ref refid="classmtk_1_1UniStgGrid3D" kindref="compound">mtk::UniStgGrid3D</ref> &amp;</type>
          <declname>in</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para><orderedlist>
<listitem><para>Print spatial coordinates.</para></listitem><listitem><para>Print scalar field. </para></listitem></orderedlist>
</para>        </inbodydescription>
        <location file="/home/esanchez/Dropbox/MTK/src/mtk_uni_stg_grid_3d.cc" line="67" column="1" bodyfile="/home/esanchez/Dropbox/MTK/src/mtk_uni_stg_grid_3d.cc" bodystart="67" bodyend="113"/>
        <references refid="classmtk_1_1UniStgGrid3D_1ac61f8810468d2a802d8a5ba11b0409c9" compoundref="mtk__uni__stg__grid__3d_8h" startline="386">mtk::UniStgGrid3D::west_bndy_</references>
        <references refid="classmtk_1_1UniStgGrid3D_1a44c1a51843b37aee9b714c8bb9016262" compoundref="mtk__uni__stg__grid__3d_8h" startline="388">mtk::UniStgGrid3D::num_cells_x_</references>
        <references refid="classmtk_1_1UniStgGrid3D_1aafe32f2f7eb2660f06a8b9ef30c3cc0c" compoundref="mtk__uni__stg__grid__3d_8h" startline="387">mtk::UniStgGrid3D::east_bndy_</references>
        <references refid="classmtk_1_1UniStgGrid3D_1a30b52c42ba39f2be09df1a5dd140cba1" compoundref="mtk__uni__stg__grid__3d_8h" startline="391">mtk::UniStgGrid3D::south_bndy_</references>
        <references refid="classmtk_1_1UniStgGrid3D_1ae944d431e0228fad3a807fbefb21fe62" compoundref="mtk__uni__stg__grid__3d_8h" startline="393">mtk::UniStgGrid3D::num_cells_y_</references>
        <references refid="classmtk_1_1UniStgGrid3D_1aa123abdd43dddd27a8206e99eb496c05" compoundref="mtk__uni__stg__grid__3d_8h" startline="392">mtk::UniStgGrid3D::north_bndy_</references>
        <references refid="classmtk_1_1UniStgGrid3D_1aae37910fbf5466a711bf290041839a75" compoundref="mtk__uni__stg__grid__3d_8h" startline="396">mtk::UniStgGrid3D::bottom_bndy_</references>
        <references refid="classmtk_1_1UniStgGrid3D_1a1758dfb9c97287f69662e77388f3dfc9" compoundref="mtk__uni__stg__grid__3d_8h" startline="398">mtk::UniStgGrid3D::num_cells_z_</references>
        <references refid="classmtk_1_1UniStgGrid3D_1af2cc6416dfd1c3afb3b9db5d1c846128" compoundref="mtk__uni__stg__grid__3d_8h" startline="397">mtk::UniStgGrid3D::top_bndy_</references>
        <references refid="classmtk_1_1UniStgGrid3D_1ad3064a12921a11823dbd8fe253867898" compoundref="mtk__uni__stg__grid__3d_8h" startline="379">mtk::UniStgGrid3D::discrete_domain_x_</references>
        <references refid="classmtk_1_1UniStgGrid3D_1aea0e7ee9e363c850e3ec466966cd7a9a" compoundref="mtk__uni__stg__grid__3d_8h" startline="380">mtk::UniStgGrid3D::discrete_domain_y_</references>
        <references refid="classmtk_1_1UniStgGrid3D_1a9863aad800bf00d17f478ec511dd25fe" compoundref="mtk__uni__stg__grid__3d_8h" startline="381">mtk::UniStgGrid3D::discrete_domain_z_</references>
        <references refid="classmtk_1_1UniStgGrid3D_1a04f7ad8ef5ea51ef0442fdbf0592a14c" compoundref="mtk__uni__stg__grid__3d_8h" startline="384">mtk::UniStgGrid3D::nature_</references>
        <references refid="namespacemtk_1ga4c54f2a329cfb4e56213b02a259d19e2a8f3d9a4b6a7b7f2c7afa61ca113d0db9">SCALAR</references>
        <references refid="classmtk_1_1UniStgGrid3D_1acbd2e19beffc89f87e6ef7b39f98bfe2" compoundref="mtk__uni__stg__grid__3d_8h" startline="382">mtk::UniStgGrid3D::discrete_field_</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Mimetic Methods Toolkit namespace. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/esanchez/Dropbox/MTK/include/mtk_blas_adapter.h" line="76" column="1"/>
  </compounddef>
</doxygen>
