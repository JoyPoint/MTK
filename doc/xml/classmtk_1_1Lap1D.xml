<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.8">
  <compounddef id="classmtk_1_1Lap1D" kind="class" prot="public">
    <compoundname>mtk::Lap1D</compoundname>
    <includes refid="mtk__lap__1d_8h" local="no">mtk_lap_1d.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classmtk_1_1Lap1D_1a35d34c085b9cf6f9961a699dfb02fea6" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int mtk::Lap1D::order_accuracy_</definition>
        <argsstring></argsstring>
        <name>order_accuracy_</name>
        <briefdescription>
<para>Order of numerical accuracy of the operator. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/esanchez/Dropbox/MTK/include/mtk_lap_1d.h" line="138" column="1" bodyfile="/home/esanchez/Dropbox/MTK/include/mtk_lap_1d.h" bodystart="138" bodyend="-1"/>
        <referencedby refid="namespacemtk_1af667c01a388ef1815d549b09b2d76bcc" compoundref="mtk__lap__1d_8cc" startline="73" endline="105">mtk::operator&lt;&lt;</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classmtk_1_1Lap1D_1a05578b0729f2bb4fe8bb442fc555fa80" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int mtk::Lap1D::laplacian_length_</definition>
        <argsstring></argsstring>
        <name>laplacian_length_</name>
        <briefdescription>
<para>Length of the output array. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/esanchez/Dropbox/MTK/include/mtk_lap_1d.h" line="139" column="1" bodyfile="/home/esanchez/Dropbox/MTK/include/mtk_lap_1d.h" bodystart="139" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmtk_1_1Lap1D_1a64a3977527c00b4ef994d1bd549f82fd" prot="private" static="no" mutable="no">
        <type><ref refid="group__c01-roots_1gac080bbbf5cbb5502c9f00405f894857d" kindref="member">Real</ref> *</type>
        <definition>Real* mtk::Lap1D::laplacian_</definition>
        <argsstring></argsstring>
        <name>laplacian_</name>
        <briefdescription>
<para>Output array containing the operator and weights. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/esanchez/Dropbox/MTK/include/mtk_lap_1d.h" line="141" column="1" bodyfile="/home/esanchez/Dropbox/MTK/include/mtk_lap_1d.h" bodystart="141" bodyend="-1"/>
        <referencedby refid="namespacemtk_1af667c01a388ef1815d549b09b2d76bcc" compoundref="mtk__lap__1d_8cc" startline="73" endline="105">mtk::operator&lt;&lt;</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classmtk_1_1Lap1D_1a0feafd7b78e62be8644503d14c0204d9" prot="private" static="no" mutable="yes">
        <type><ref refid="group__c01-roots_1gac080bbbf5cbb5502c9f00405f894857d" kindref="member">Real</ref></type>
        <definition>Real mtk::Lap1D::delta_</definition>
        <argsstring></argsstring>
        <name>delta_</name>
        <briefdescription>
<para>&lt; If 0.0, then this Laplacian is dimensionless. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/esanchez/Dropbox/MTK/include/mtk_lap_1d.h" line="143" column="1" bodyfile="/home/esanchez/Dropbox/MTK/include/mtk_lap_1d.h" bodystart="143" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmtk_1_1Lap1D_1a20dce13067774c64dff892323d9c586e" prot="private" static="no" mutable="no">
        <type><ref refid="group__c01-roots_1gac080bbbf5cbb5502c9f00405f894857d" kindref="member">Real</ref></type>
        <definition>Real mtk::Lap1D::mimetic_threshold_</definition>
        <argsstring></argsstring>
        <name>mimetic_threshold_</name>
        <briefdescription>
<para>&lt; Mimetic threshold. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/esanchez/Dropbox/MTK/include/mtk_lap_1d.h" line="145" column="1" bodyfile="/home/esanchez/Dropbox/MTK/include/mtk_lap_1d.h" bodystart="145" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classmtk_1_1Lap1D_1a235390479381d4e95163674968a1ca7c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend std::ostream &amp;</type>
        <definition>std::ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;stream, Lap1D &amp;in)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>stream</declname>
        </param>
        <param>
          <type><ref refid="classmtk_1_1Lap1D" kindref="compound">Lap1D</ref> &amp;</type>
          <declname>in</declname>
        </param>
        <briefdescription>
<para>Output stream operator for printing. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para><orderedlist>
<listitem><para>Print order of accuracy.</para></listitem><listitem><para>Print approximating coefficients for the interior.</para></listitem><listitem><para>No weights, thus print the mimetic boundary coefficients. </para></listitem></orderedlist>
</para>        </inbodydescription>
        <location file="/home/esanchez/Dropbox/MTK/include/mtk_lap_1d.h" line="79" column="1" bodyfile="/home/esanchez/Dropbox/MTK/src/mtk_lap_1d.cc" bodystart="73" bodyend="105"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classmtk_1_1Lap1D_1a6fc2aeea35d4dfa49f17e625411f5a70" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>mtk::Lap1D::Lap1D</definition>
        <argsstring>()</argsstring>
        <name>Lap1D</name>
        <briefdescription>
<para>Default constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/esanchez/Dropbox/MTK/include/mtk_lap_1d.h" line="82" column="1" bodyfile="/home/esanchez/Dropbox/MTK/src/mtk_lap_1d.cc" bodystart="108" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="classmtk_1_1Lap1D_1a95c3fdcd0c9e4c56e775a2a20a2fac42" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>mtk::Lap1D::Lap1D</definition>
        <argsstring>(const Lap1D &amp;lap)</argsstring>
        <name>Lap1D</name>
        <param>
          <type>const <ref refid="classmtk_1_1Lap1D" kindref="compound">Lap1D</ref> &amp;</type>
          <declname>lap</declname>
        </param>
        <briefdescription>
<para>Copy constructor. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">lap</parametername>
</parameternamelist>
<parameterdescription>
<para>Given Laplacian. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/esanchez/Dropbox/MTK/include/mtk_lap_1d.h" line="89" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmtk_1_1Lap1D_1ac0cb868243a66658cc46de5b818fa4e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>mtk::Lap1D::~Lap1D</definition>
        <argsstring>()</argsstring>
        <name>~Lap1D</name>
        <briefdescription>
<para>Destructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/esanchez/Dropbox/MTK/include/mtk_lap_1d.h" line="92" column="1" bodyfile="/home/esanchez/Dropbox/MTK/src/mtk_lap_1d.cc" bodystart="114" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="classmtk_1_1Lap1D_1ae3490534a9e950df3f81b3840c31b13a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int mtk::Lap1D::order_accuracy</definition>
        <argsstring>() const </argsstring>
        <name>order_accuracy</name>
        <briefdescription>
<para>Order of accuracy of the operator. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Order of accuracy of the operator. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/esanchez/Dropbox/MTK/include/mtk_lap_1d.h" line="99" column="1" bodyfile="/home/esanchez/Dropbox/MTK/src/mtk_lap_1d.cc" bodystart="120" bodyend="123"/>
        <referencedby refid="classmtk_1_1RobinBCDescriptor1D_1ab8446428df923c27f388a85bd3f2c6d4" compoundref="mtk__robin__bc__descriptor__1d_8cc" startline="166" endline="244">mtk::RobinBCDescriptor1D::ImposeOnLaplacianMatrix</referencedby>
      </memberdef>
      <memberdef kind="function" id="classmtk_1_1Lap1D_1a957ae4ff6053d605ac7b93650ad6f188" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__c01-roots_1gac080bbbf5cbb5502c9f00405f894857d" kindref="member">Real</ref></type>
        <definition>mtk::Real mtk::Lap1D::mimetic_threshold</definition>
        <argsstring>() const </argsstring>
        <name>mimetic_threshold</name>
        <briefdescription>
<para>Mimetic threshold used in the CBS algorithm to construct this operator. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Mimetic threshold used in the CBS algorithm to construct operator. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/esanchez/Dropbox/MTK/include/mtk_lap_1d.h" line="106" column="1" bodyfile="/home/esanchez/Dropbox/MTK/src/mtk_lap_1d.cc" bodystart="125" bodyend="128"/>
        <referencedby refid="classmtk_1_1RobinBCDescriptor1D_1ab8446428df923c27f388a85bd3f2c6d4" compoundref="mtk__robin__bc__descriptor__1d_8cc" startline="166" endline="244">mtk::RobinBCDescriptor1D::ImposeOnLaplacianMatrix</referencedby>
      </memberdef>
      <memberdef kind="function" id="classmtk_1_1Lap1D_1a4e16e80c6dd845ac42bda23385a1c56e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__c01-roots_1gac080bbbf5cbb5502c9f00405f894857d" kindref="member">Real</ref></type>
        <definition>mtk::Real mtk::Lap1D::delta</definition>
        <argsstring>() const </argsstring>
        <name>delta</name>
        <briefdescription>
<para>Value of <formula id="19">$ \Delta x $</formula> used be scaled. If 0, then dimensionless. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Value of <formula id="19">$ \Delta x $</formula> used be scaled. If 0, then dimensionless. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/esanchez/Dropbox/MTK/include/mtk_lap_1d.h" line="113" column="1" bodyfile="/home/esanchez/Dropbox/MTK/src/mtk_lap_1d.cc" bodystart="130" bodyend="133"/>
        <referencedby refid="classmtk_1_1RobinBCDescriptor1D_1ab8446428df923c27f388a85bd3f2c6d4" compoundref="mtk__robin__bc__descriptor__1d_8cc" startline="166" endline="244">mtk::RobinBCDescriptor1D::ImposeOnLaplacianMatrix</referencedby>
      </memberdef>
      <memberdef kind="function" id="classmtk_1_1Lap1D_1a685dcba88c08cf5b7b6c2aa4669a472c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool mtk::Lap1D::ConstructLap1D</definition>
        <argsstring>(int order_accuracy=kDefaultOrderAccuracy, Real mimetic_threshold=kDefaultMimeticThreshold)</argsstring>
        <name>ConstructLap1D</name>
        <param>
          <type>int</type>
          <declname>order_accuracy</declname>
          <defval><ref refid="group__c01-roots_1ga0d95560098eb36420511103637b6952f" kindref="member">kDefaultOrderAccuracy</ref></defval>
        </param>
        <param>
          <type><ref refid="group__c01-roots_1gac080bbbf5cbb5502c9f00405f894857d" kindref="member">Real</ref></type>
          <declname>mimetic_threshold</declname>
          <defval><ref refid="group__c01-roots_1ga35718d949bdc81a08a9cc8ebbe3478a2" kindref="member">kDefaultMimeticThreshold</ref></defval>
        </param>
        <briefdescription>
<para>Factory method implementing the CBS Algorithm to build operator. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Success of the solution. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
<para><orderedlist>
<listitem><para>Create gradient operator using specific values for the Laplacian.</para></listitem><listitem><para>Create gradient operator using specific values for the Laplacian.</para></listitem><listitem><para>Create both operators as matrices.</para></listitem><listitem><para>Multiply both operators: <formula id="28">$ \breve{\mathbf{L}}^k_x = \breve{\mathbf{D}}^k_x\breve{\mathbf{G}}^k_x $</formula></para></listitem><listitem><para>Extract the coefficients from the matrix and store them in the array.</para></listitem></orderedlist>
</para><para><simplesect kind="warning"><para>We do not compute weights for this operator... no need to!</para></simplesect>
<orderedlist>
<listitem><para>The first entry of the array will contain the order of accuracy.</para></listitem><listitem><para>The second entry of the array will contain the collection of approximating coefficients for the interior of the grid.</para></listitem><listitem><para>We DO NOT have weights in this operator. Copy mimetic bndy coeffs. </para></listitem></orderedlist>
</para>        </inbodydescription>
        <location file="/home/esanchez/Dropbox/MTK/include/mtk_lap_1d.h" line="120" column="1" bodyfile="/home/esanchez/Dropbox/MTK/src/mtk_lap_1d.cc" bodystart="135" bodyend="280"/>
        <references refid="classmtk_1_1Tools_1a332324c6f25e66be9dff48c5987a3b9f" compoundref="mtk__tools_8cc" startline="61" endline="81">mtk::Tools::Prevent</references>
        <references refid="group__c01-roots_1ga59a451a5fae30d59649bcda274fea271" compoundref="mtk__roots_8h" startline="116">mtk::kZero</references>
        <references refid="group__c01-roots_1ga0898eef2108473e44a5223932d571c31" compoundref="mtk__roots_8h" startline="167">mtk::kCriticalOrderAccuracyDiv</references>
        <references refid="classmtk_1_1Grad1D_1a74ef5245cfae6fd158bd7f563a0c2e52" compoundref="mtk__grad__1d_8cc" startline="182" endline="319">mtk::Grad1D::ConstructGrad1D</references>
        <references refid="classmtk_1_1Div1D_1a52fcd1542f11e606e36bd188e48bfdf7" compoundref="mtk__div__1d_8cc" startline="176" endline="313">mtk::Div1D::ConstructDiv1D</references>
        <references refid="classmtk_1_1UniStgGrid1D_1a6e7173b01241632cf509496d66b9f74c" compoundref="mtk__uni__stg__grid__1d_8cc" startline="156" endline="159">mtk::UniStgGrid1D::delta_x</references>
        <references refid="classmtk_1_1Grad1D_1a77b2eddbe4ab03f469306c604d505b1a" compoundref="mtk__grad__1d_8cc" startline="356" endline="422">mtk::Grad1D::ReturnAsDenseMatrix</references>
        <references refid="classmtk_1_1Div1D_1a213fddbaaf86e4840c6a9649b69c2d49" compoundref="mtk__div__1d_8cc" startline="351" endline="412">mtk::Div1D::ReturnAsDenseMatrix</references>
        <references refid="classmtk_1_1BLASAdapter_1acebd0e9bfe0bdd609c7fbea98ccfd3b5" compoundref="mtk__blas__adapter_8cc" startline="409" endline="464">mtk::BLASAdapter::RealDenseMM</references>
        <references refid="classmtk_1_1DenseMatrix_1a4b23ecbebd970b5eea915dbb50691024" compoundref="mtk__dense__matrix_8cc" startline="348" endline="358">mtk::DenseMatrix::GetValue</references>
      </memberdef>
      <memberdef kind="function" id="classmtk_1_1Lap1D_1aaea34a17b0879e05eb4109645a2ba8f4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmtk_1_1DenseMatrix" kindref="compound">DenseMatrix</ref></type>
        <definition>mtk::DenseMatrix mtk::Lap1D::ReturnAsDenseMatrix</definition>
        <argsstring>(const UniStgGrid1D &amp;grid) const </argsstring>
        <name>ReturnAsDenseMatrix</name>
        <param>
          <type>const <ref refid="classmtk_1_1UniStgGrid1D" kindref="compound">UniStgGrid1D</ref> &amp;</type>
          <declname>grid</declname>
        </param>
        <briefdescription>
<para>Return the operator as a dense matrix. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The operator as a dense matrix. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
<para><orderedlist>
<listitem><para>Extract mimetic coefficients from the west boundary.</para></listitem><listitem><para>Extract interior coefficients.</para></listitem><listitem><para>Extract mimetic coefficients from the west boundary to go east.</para></listitem></orderedlist>
</para><para><simplesect kind="note"><para>We could create two matrices of the requested size and multiply them, but that would be inefficient, since we already have the computed coefficients stored. We just have to set them in place, in a matrix of an adequate size, and multiply them times the inverse of the square of the step size, in order for the matrix to actually represent a differential operator. </para></simplesect>
</para>        </inbodydescription>
        <location file="/home/esanchez/Dropbox/MTK/include/mtk_lap_1d.h" line="128" column="1" bodyfile="/home/esanchez/Dropbox/MTK/src/mtk_lap_1d.cc" bodystart="282" bodyend="350"/>
        <references refid="classmtk_1_1UniStgGrid1D_1af1b3729d8afa07be5b2775ed68015b80" compoundref="mtk__uni__stg__grid__1d_8cc" startline="171" endline="174">mtk::UniStgGrid1D::num_cells_x</references>
        <references refid="classmtk_1_1Tools_1a332324c6f25e66be9dff48c5987a3b9f" compoundref="mtk__tools_8cc" startline="61" endline="81">mtk::Tools::Prevent</references>
        <references refid="classmtk_1_1UniStgGrid1D_1a6e7173b01241632cf509496d66b9f74c" compoundref="mtk__uni__stg__grid__1d_8cc" startline="156" endline="159">mtk::UniStgGrid1D::delta_x</references>
        <references refid="group__c01-roots_1ga26407c24d43b6b95480943340d285c71" compoundref="mtk__roots_8h" startline="117">mtk::kOne</references>
        <references refid="classmtk_1_1DenseMatrix_1a784ce5784109ac86bfb9d8562b334b13" compoundref="mtk__dense__matrix_8cc" startline="360" endline="371">mtk::DenseMatrix::SetValue</references>
        <references refid="classmtk_1_1DenseMatrix_1a4b23ecbebd970b5eea915dbb50691024" compoundref="mtk__dense__matrix_8cc" startline="348" endline="358">mtk::DenseMatrix::GetValue</references>
      </memberdef>
      <memberdef kind="function" id="classmtk_1_1Lap1D_1ab2652725a8407c79247680c7bbd073b8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="group__c01-roots_1gac080bbbf5cbb5502c9f00405f894857d" kindref="member">mtk::Real</ref> *</type>
        <definition>const mtk::Real * mtk::Lap1D::data</definition>
        <argsstring>(const UniStgGrid1D &amp;grid) const </argsstring>
        <name>data</name>
        <param>
          <type>const <ref refid="classmtk_1_1UniStgGrid1D" kindref="compound">UniStgGrid1D</ref> &amp;</type>
          <declname>grid</declname>
        </param>
        <briefdescription>
<para>Return the operator as a dense array. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The operator as a dense array. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/esanchez/Dropbox/MTK/include/mtk_lap_1d.h" line="135" column="1" bodyfile="/home/esanchez/Dropbox/MTK/src/mtk_lap_1d.cc" bodystart="352" bodyend="359"/>
        <references refid="classmtk_1_1DenseMatrix_1a0c33b8a9e01d157c61ddbdf807c25d84" compoundref="mtk__dense__matrix_8cc" startline="343" endline="346">mtk::DenseMatrix::data</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Implements a 1D mimetic Laplacian operator. </para>    </briefdescription>
    <detaileddescription>
<para>This class implements a 1D Laplacian operator, constructed using the Castillo-Blomgren-Sanchez (CBS) Algorithm (CBSA). </para>    </detaileddescription>
    <collaborationgraph>
      <node id="96">
        <label>mtk::Lap1D</label>
        <link refid="classmtk_1_1Lap1D"/>
      </node>
    </collaborationgraph>
    <location file="/home/esanchez/Dropbox/MTK/include/mtk_lap_1d.h" line="76" column="1" bodyfile="/home/esanchez/Dropbox/MTK/include/mtk_lap_1d.h" bodystart="76" bodyend="146"/>
    <listofallmembers>
      <member refid="classmtk_1_1Lap1D_1a685dcba88c08cf5b7b6c2aa4669a472c" prot="public" virt="non-virtual"><scope>mtk::Lap1D</scope><name>ConstructLap1D</name></member>
      <member refid="classmtk_1_1Lap1D_1ab2652725a8407c79247680c7bbd073b8" prot="public" virt="non-virtual"><scope>mtk::Lap1D</scope><name>data</name></member>
      <member refid="classmtk_1_1Lap1D_1a4e16e80c6dd845ac42bda23385a1c56e" prot="public" virt="non-virtual"><scope>mtk::Lap1D</scope><name>delta</name></member>
      <member refid="classmtk_1_1Lap1D_1a0feafd7b78e62be8644503d14c0204d9" prot="private" virt="non-virtual"><scope>mtk::Lap1D</scope><name>delta_</name></member>
      <member refid="classmtk_1_1Lap1D_1a6fc2aeea35d4dfa49f17e625411f5a70" prot="public" virt="non-virtual"><scope>mtk::Lap1D</scope><name>Lap1D</name></member>
      <member refid="classmtk_1_1Lap1D_1a95c3fdcd0c9e4c56e775a2a20a2fac42" prot="public" virt="non-virtual"><scope>mtk::Lap1D</scope><name>Lap1D</name></member>
      <member refid="classmtk_1_1Lap1D_1a64a3977527c00b4ef994d1bd549f82fd" prot="private" virt="non-virtual"><scope>mtk::Lap1D</scope><name>laplacian_</name></member>
      <member refid="classmtk_1_1Lap1D_1a05578b0729f2bb4fe8bb442fc555fa80" prot="private" virt="non-virtual"><scope>mtk::Lap1D</scope><name>laplacian_length_</name></member>
      <member refid="classmtk_1_1Lap1D_1a957ae4ff6053d605ac7b93650ad6f188" prot="public" virt="non-virtual"><scope>mtk::Lap1D</scope><name>mimetic_threshold</name></member>
      <member refid="classmtk_1_1Lap1D_1a20dce13067774c64dff892323d9c586e" prot="private" virt="non-virtual"><scope>mtk::Lap1D</scope><name>mimetic_threshold_</name></member>
      <member refid="classmtk_1_1Lap1D_1a235390479381d4e95163674968a1ca7c" prot="public" virt="non-virtual"><scope>mtk::Lap1D</scope><name>operator&lt;&lt;</name></member>
      <member refid="classmtk_1_1Lap1D_1ae3490534a9e950df3f81b3840c31b13a" prot="public" virt="non-virtual"><scope>mtk::Lap1D</scope><name>order_accuracy</name></member>
      <member refid="classmtk_1_1Lap1D_1a35d34c085b9cf6f9961a699dfb02fea6" prot="private" virt="non-virtual"><scope>mtk::Lap1D</scope><name>order_accuracy_</name></member>
      <member refid="classmtk_1_1Lap1D_1aaea34a17b0879e05eb4109645a2ba8f4" prot="public" virt="non-virtual"><scope>mtk::Lap1D</scope><name>ReturnAsDenseMatrix</name></member>
      <member refid="classmtk_1_1Lap1D_1ac0cb868243a66658cc46de5b818fa4e8" prot="public" virt="non-virtual"><scope>mtk::Lap1D</scope><name>~Lap1D</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
