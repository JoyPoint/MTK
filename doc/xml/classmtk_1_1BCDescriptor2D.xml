<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.8">
  <compounddef id="classmtk_1_1BCDescriptor2D" kind="class" prot="public">
    <compoundname>mtk::BCDescriptor2D</compoundname>
    <includes refid="mtk__bc__descriptor__2d_8h" local="no">mtk_bc_descriptor_2d.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classmtk_1_1BCDescriptor2D_1a3ef0bc7e9fbc16669099314dd34b170a" prot="private" static="no" mutable="yes">
        <type>bool</type>
        <definition>bool mtk::BCDescriptor2D::generate_space_</definition>
        <argsstring></argsstring>
        <name>generate_space_</name>
        <briefdescription>
<para>Should I generate coordinates as evaluate? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/esanchez/Dropbox/MTK/include/mtk_bc_descriptor_2d.h" line="285" column="1" bodyfile="/home/esanchez/Dropbox/MTK/include/mtk_bc_descriptor_2d.h" bodystart="285" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmtk_1_1BCDescriptor2D_1aa18ef62f8eda355e47f51bcb5dbe8fe7" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int mtk::BCDescriptor2D::highest_order_diff_west_</definition>
        <argsstring></argsstring>
        <name>highest_order_diff_west_</name>
        <briefdescription>
<para>Highest order of differentiation for west. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/esanchez/Dropbox/MTK/include/mtk_bc_descriptor_2d.h" line="287" column="1" bodyfile="/home/esanchez/Dropbox/MTK/include/mtk_bc_descriptor_2d.h" bodystart="287" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmtk_1_1BCDescriptor2D_1aea5e539a10d5641bd605ebe583c14bc5" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int mtk::BCDescriptor2D::highest_order_diff_east_</definition>
        <argsstring></argsstring>
        <name>highest_order_diff_east_</name>
        <briefdescription>
<para>Highest order of differentiation for east. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/esanchez/Dropbox/MTK/include/mtk_bc_descriptor_2d.h" line="288" column="1" bodyfile="/home/esanchez/Dropbox/MTK/include/mtk_bc_descriptor_2d.h" bodystart="288" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmtk_1_1BCDescriptor2D_1a1fb094e5e53ecfba32fe9fe56c051c47" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int mtk::BCDescriptor2D::highest_order_diff_south_</definition>
        <argsstring></argsstring>
        <name>highest_order_diff_south_</name>
        <briefdescription>
<para>Highest order differentiation for south. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/esanchez/Dropbox/MTK/include/mtk_bc_descriptor_2d.h" line="289" column="1" bodyfile="/home/esanchez/Dropbox/MTK/include/mtk_bc_descriptor_2d.h" bodystart="289" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmtk_1_1BCDescriptor2D_1a6cdeefe70f5bef93196f34ab2949cad2" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int mtk::BCDescriptor2D::highest_order_diff_north_</definition>
        <argsstring></argsstring>
        <name>highest_order_diff_north_</name>
        <briefdescription>
<para>Highest order differentiation for north. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/esanchez/Dropbox/MTK/include/mtk_bc_descriptor_2d.h" line="290" column="1" bodyfile="/home/esanchez/Dropbox/MTK/include/mtk_bc_descriptor_2d.h" bodystart="290" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmtk_1_1BCDescriptor2D_1a7df71b43acc25c468683075cc7790bb2" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="group__c07-mim__ops_1gad9e1c0ace886b0029aefffa5f320e852" kindref="member">CoefficientFunction2D</ref> &gt;</type>
        <definition>std::vector&lt;CoefficientFunction2D&gt; mtk::BCDescriptor2D::west_coefficients_</definition>
        <argsstring></argsstring>
        <name>west_coefficients_</name>
        <briefdescription>
<para>Coeffs. west. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/esanchez/Dropbox/MTK/include/mtk_bc_descriptor_2d.h" line="292" column="1" bodyfile="/home/esanchez/Dropbox/MTK/include/mtk_bc_descriptor_2d.h" bodystart="292" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmtk_1_1BCDescriptor2D_1a1f90fc303984bf18c136a34896bbb7c9" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="group__c07-mim__ops_1gad9e1c0ace886b0029aefffa5f320e852" kindref="member">CoefficientFunction2D</ref> &gt;</type>
        <definition>std::vector&lt;CoefficientFunction2D&gt; mtk::BCDescriptor2D::east_coefficients_</definition>
        <argsstring></argsstring>
        <name>east_coefficients_</name>
        <briefdescription>
<para>Coeffs. east. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/esanchez/Dropbox/MTK/include/mtk_bc_descriptor_2d.h" line="293" column="1" bodyfile="/home/esanchez/Dropbox/MTK/include/mtk_bc_descriptor_2d.h" bodystart="293" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmtk_1_1BCDescriptor2D_1a263309b9ad288dc89826d818d9378d07" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="group__c07-mim__ops_1gad9e1c0ace886b0029aefffa5f320e852" kindref="member">CoefficientFunction2D</ref> &gt;</type>
        <definition>std::vector&lt;CoefficientFunction2D&gt; mtk::BCDescriptor2D::south_coefficients_</definition>
        <argsstring></argsstring>
        <name>south_coefficients_</name>
        <briefdescription>
<para>Coeffs. south. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/esanchez/Dropbox/MTK/include/mtk_bc_descriptor_2d.h" line="294" column="1" bodyfile="/home/esanchez/Dropbox/MTK/include/mtk_bc_descriptor_2d.h" bodystart="294" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmtk_1_1BCDescriptor2D_1a5429c040c034303dd92dcff554f9efad" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="group__c07-mim__ops_1gad9e1c0ace886b0029aefffa5f320e852" kindref="member">CoefficientFunction2D</ref> &gt;</type>
        <definition>std::vector&lt;CoefficientFunction2D&gt; mtk::BCDescriptor2D::north_coefficients_</definition>
        <argsstring></argsstring>
        <name>north_coefficients_</name>
        <briefdescription>
<para>Coeffs. south. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/esanchez/Dropbox/MTK/include/mtk_bc_descriptor_2d.h" line="295" column="1" bodyfile="/home/esanchez/Dropbox/MTK/include/mtk_bc_descriptor_2d.h" bodystart="295" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmtk_1_1BCDescriptor2D_1a2d4af48b3408658c7ace6eeb74464c9f" prot="private" static="no" mutable="no">
        <type><ref refid="group__c01-roots_1gac080bbbf5cbb5502c9f00405f894857d" kindref="member">Real</ref>(*</type>
        <definition>Real(* mtk::BCDescriptor2D::west_condition_)(Real xx, Real yy)</definition>
        <argsstring>)(Real xx, Real yy)</argsstring>
        <name>west_condition_</name>
        <briefdescription>
<para>Condition for west. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/esanchez/Dropbox/MTK/include/mtk_bc_descriptor_2d.h" line="297" column="1" bodyfile="/home/esanchez/Dropbox/MTK/include/mtk_bc_descriptor_2d.h" bodystart="297" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmtk_1_1BCDescriptor2D_1a6cca0c70293203c9d88773e5d5f93418" prot="private" static="no" mutable="no">
        <type><ref refid="group__c01-roots_1gac080bbbf5cbb5502c9f00405f894857d" kindref="member">Real</ref>(*</type>
        <definition>Real(* mtk::BCDescriptor2D::east_condition_)(Real xx, Real yy)</definition>
        <argsstring>)(Real xx, Real yy)</argsstring>
        <name>east_condition_</name>
        <briefdescription>
<para>Condition for east. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/esanchez/Dropbox/MTK/include/mtk_bc_descriptor_2d.h" line="298" column="1" bodyfile="/home/esanchez/Dropbox/MTK/include/mtk_bc_descriptor_2d.h" bodystart="298" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmtk_1_1BCDescriptor2D_1a2a933b473abbe47ad7c79ef7939e7768" prot="private" static="no" mutable="no">
        <type><ref refid="group__c01-roots_1gac080bbbf5cbb5502c9f00405f894857d" kindref="member">Real</ref>(*</type>
        <definition>Real(* mtk::BCDescriptor2D::south_condition_)(Real xx, Real yy)</definition>
        <argsstring>)(Real xx, Real yy)</argsstring>
        <name>south_condition_</name>
        <briefdescription>
<para>Condition for south. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/esanchez/Dropbox/MTK/include/mtk_bc_descriptor_2d.h" line="299" column="1" bodyfile="/home/esanchez/Dropbox/MTK/include/mtk_bc_descriptor_2d.h" bodystart="299" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmtk_1_1BCDescriptor2D_1a23e0b9ae755dcf81841aa24ddaf0b090" prot="private" static="no" mutable="no">
        <type><ref refid="group__c01-roots_1gac080bbbf5cbb5502c9f00405f894857d" kindref="member">Real</ref>(*</type>
        <definition>Real(* mtk::BCDescriptor2D::north_condition_)(Real xx, Real yy)</definition>
        <argsstring>)(Real xx, Real yy)</argsstring>
        <name>north_condition_</name>
        <briefdescription>
<para>Condition for north. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/esanchez/Dropbox/MTK/include/mtk_bc_descriptor_2d.h" line="300" column="1" bodyfile="/home/esanchez/Dropbox/MTK/include/mtk_bc_descriptor_2d.h" bodystart="300" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classmtk_1_1BCDescriptor2D_1abbc3af29202dbfef203f4cafd9566fd0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>mtk::BCDescriptor2D::BCDescriptor2D</definition>
        <argsstring>()</argsstring>
        <name>BCDescriptor2D</name>
        <briefdescription>
<para>Default constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/esanchez/Dropbox/MTK/include/mtk_bc_descriptor_2d.h" line="126" column="1" bodyfile="/home/esanchez/Dropbox/MTK/src/mtk_bc_descriptor_2d.cc" bodystart="80" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="classmtk_1_1BCDescriptor2D_1ae8a93352a94efed52747b710e6ff7893" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>mtk::BCDescriptor2D::BCDescriptor2D</definition>
        <argsstring>(const BCDescriptor2D &amp;desc)</argsstring>
        <name>BCDescriptor2D</name>
        <param>
          <type>const <ref refid="classmtk_1_1BCDescriptor2D" kindref="compound">BCDescriptor2D</ref> &amp;</type>
          <declname>desc</declname>
        </param>
        <briefdescription>
<para>Copy constructor. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">desc</parametername>
</parameternamelist>
<parameterdescription>
<para>Given 2D descriptor. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/esanchez/Dropbox/MTK/include/mtk_bc_descriptor_2d.h" line="133" column="1" bodyfile="/home/esanchez/Dropbox/MTK/src/mtk_bc_descriptor_2d.cc" bodystart="91" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="classmtk_1_1BCDescriptor2D_1ae14e62548a8bc080d576fff6937c546b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>mtk::BCDescriptor2D::~BCDescriptor2D</definition>
        <argsstring>() noexcept</argsstring>
        <name>~BCDescriptor2D</name>
        <briefdescription>
<para>Destructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/esanchez/Dropbox/MTK/include/mtk_bc_descriptor_2d.h" line="136" column="1" bodyfile="/home/esanchez/Dropbox/MTK/src/mtk_bc_descriptor_2d.cc" bodystart="93" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="classmtk_1_1BCDescriptor2D_1a0fa469ddf6ff76e2858d6d3b76cc8b6f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int mtk::BCDescriptor2D::highest_order_diff_west</definition>
        <argsstring>() const noexcept</argsstring>
        <name>highest_order_diff_west</name>
        <briefdescription>
<para>Getter for the highest order of differentiation in the west boundary. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Integer highest order of differentiation in the west boundary. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/esanchez/Dropbox/MTK/include/mtk_bc_descriptor_2d.h" line="143" column="1" bodyfile="/home/esanchez/Dropbox/MTK/src/mtk_bc_descriptor_2d.cc" bodystart="95" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="classmtk_1_1BCDescriptor2D_1a5a9b80a2e9e579b05d9f3589d80448b6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int mtk::BCDescriptor2D::highest_order_diff_east</definition>
        <argsstring>() const noexcept</argsstring>
        <name>highest_order_diff_east</name>
        <briefdescription>
<para>Getter for the highest order of differentiation in the east boundary. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Integer highest order of differentiation in the east boundary. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/esanchez/Dropbox/MTK/include/mtk_bc_descriptor_2d.h" line="150" column="1" bodyfile="/home/esanchez/Dropbox/MTK/src/mtk_bc_descriptor_2d.cc" bodystart="100" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="classmtk_1_1BCDescriptor2D_1a463d909f6014e7f01b33171a06d7b400" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int mtk::BCDescriptor2D::highest_order_diff_south</definition>
        <argsstring>() const noexcept</argsstring>
        <name>highest_order_diff_south</name>
        <briefdescription>
<para>Getter for the highest order of differentiation in the south boundary. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Integer highest order of differentiation in the south boundary. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/esanchez/Dropbox/MTK/include/mtk_bc_descriptor_2d.h" line="157" column="1" bodyfile="/home/esanchez/Dropbox/MTK/src/mtk_bc_descriptor_2d.cc" bodystart="105" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="classmtk_1_1BCDescriptor2D_1a87c5f2449247d65ea07784ba2ec61bc7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int mtk::BCDescriptor2D::highest_order_diff_north</definition>
        <argsstring>() const noexcept</argsstring>
        <name>highest_order_diff_north</name>
        <briefdescription>
<para>Getter for the highest order of differentiation in the north boundary. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Integer highest order of differentiation in the north boundary. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/esanchez/Dropbox/MTK/include/mtk_bc_descriptor_2d.h" line="164" column="1" bodyfile="/home/esanchez/Dropbox/MTK/src/mtk_bc_descriptor_2d.cc" bodystart="110" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="classmtk_1_1BCDescriptor2D_1a3da32ba89cfb15032bb1156394bad98c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mtk::BCDescriptor2D::PushBackWestCoeff</definition>
        <argsstring>(CoefficientFunction2D cw)</argsstring>
        <name>PushBackWestCoeff</name>
        <param>
          <type><ref refid="group__c07-mim__ops_1gad9e1c0ace886b0029aefffa5f320e852" kindref="member">CoefficientFunction2D</ref></type>
          <declname>cw</declname>
        </param>
        <briefdescription>
<para>Push back coefficient function at west of lowest order diff. available. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cw</parametername>
</parameternamelist>
<parameterdescription>
<para>Function <formula id="45">$ c_w(x,y):\Omega\mapsto\mathbb{R} $</formula>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/esanchez/Dropbox/MTK/include/mtk_bc_descriptor_2d.h" line="171" column="1" bodyfile="/home/esanchez/Dropbox/MTK/src/mtk_bc_descriptor_2d.cc" bodystart="115" bodyend="126"/>
        <references refid="classmtk_1_1Tools_1a332324c6f25e66be9dff48c5987a3b9f" compoundref="mtk__tools_8cc" startline="61" endline="81">mtk::Tools::Prevent</references>
      </memberdef>
      <memberdef kind="function" id="classmtk_1_1BCDescriptor2D_1a27635428a6c36d1e305cafdc68271063" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mtk::BCDescriptor2D::PushBackEastCoeff</definition>
        <argsstring>(CoefficientFunction2D ce)</argsstring>
        <name>PushBackEastCoeff</name>
        <param>
          <type><ref refid="group__c07-mim__ops_1gad9e1c0ace886b0029aefffa5f320e852" kindref="member">CoefficientFunction2D</ref></type>
          <declname>ce</declname>
        </param>
        <briefdescription>
<para>Push back coefficient function at east of lowest order diff. available. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ce</parametername>
</parameternamelist>
<parameterdescription>
<para>Function <formula id="46">$ c_e(x,y):\Omega\mapsto\mathbb{R} $</formula>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/esanchez/Dropbox/MTK/include/mtk_bc_descriptor_2d.h" line="178" column="1" bodyfile="/home/esanchez/Dropbox/MTK/src/mtk_bc_descriptor_2d.cc" bodystart="128" bodyend="139"/>
        <references refid="classmtk_1_1Tools_1a332324c6f25e66be9dff48c5987a3b9f" compoundref="mtk__tools_8cc" startline="61" endline="81">mtk::Tools::Prevent</references>
      </memberdef>
      <memberdef kind="function" id="classmtk_1_1BCDescriptor2D_1a9eb891f14c68968a0113632fa5fea630" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mtk::BCDescriptor2D::PushBackSouthCoeff</definition>
        <argsstring>(CoefficientFunction2D cs)</argsstring>
        <name>PushBackSouthCoeff</name>
        <param>
          <type><ref refid="group__c07-mim__ops_1gad9e1c0ace886b0029aefffa5f320e852" kindref="member">CoefficientFunction2D</ref></type>
          <declname>cs</declname>
        </param>
        <briefdescription>
<para>Push back coefficient function south of lowest order diff. available. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cs</parametername>
</parameternamelist>
<parameterdescription>
<para>Function <formula id="47">$ c_s(x,y):\Omega\mapsto\mathbb{R} $</formula>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/esanchez/Dropbox/MTK/include/mtk_bc_descriptor_2d.h" line="185" column="1" bodyfile="/home/esanchez/Dropbox/MTK/src/mtk_bc_descriptor_2d.cc" bodystart="141" bodyend="152"/>
        <references refid="classmtk_1_1Tools_1a332324c6f25e66be9dff48c5987a3b9f" compoundref="mtk__tools_8cc" startline="61" endline="81">mtk::Tools::Prevent</references>
      </memberdef>
      <memberdef kind="function" id="classmtk_1_1BCDescriptor2D_1a0fed58bd058d699a572888fe4b9934a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mtk::BCDescriptor2D::PushBackNorthCoeff</definition>
        <argsstring>(CoefficientFunction2D cn)</argsstring>
        <name>PushBackNorthCoeff</name>
        <param>
          <type><ref refid="group__c07-mim__ops_1gad9e1c0ace886b0029aefffa5f320e852" kindref="member">CoefficientFunction2D</ref></type>
          <declname>cn</declname>
        </param>
        <briefdescription>
<para>Push back coefficient function north of lowest order diff. available. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cn</parametername>
</parameternamelist>
<parameterdescription>
<para>Function <formula id="52">$ c_n(x,y):\Omega\mapsto\mathbb{R} $</formula>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/esanchez/Dropbox/MTK/include/mtk_bc_descriptor_2d.h" line="192" column="1" bodyfile="/home/esanchez/Dropbox/MTK/src/mtk_bc_descriptor_2d.cc" bodystart="154" bodyend="165"/>
        <references refid="classmtk_1_1Tools_1a332324c6f25e66be9dff48c5987a3b9f" compoundref="mtk__tools_8cc" startline="61" endline="81">mtk::Tools::Prevent</references>
      </memberdef>
      <memberdef kind="function" id="classmtk_1_1BCDescriptor2D_1a006050efe15b1be75b36a74a23051392" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mtk::BCDescriptor2D::set_west_condition</definition>
        <argsstring>(Real(*west_condition)(Real xx, Real yy)) noexcept</argsstring>
        <name>set_west_condition</name>
        <param>
          <type><ref refid="group__c01-roots_1gac080bbbf5cbb5502c9f00405f894857d" kindref="member">Real</ref>(*)(<ref refid="group__c01-roots_1gac080bbbf5cbb5502c9f00405f894857d" kindref="member">Real</ref> xx, <ref refid="group__c01-roots_1gac080bbbf5cbb5502c9f00405f894857d" kindref="member">Real</ref> yy)</type>
          <declname>west_condition</declname>
        </param>
        <briefdescription>
<para>Set boundary condition at west. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">west_condition</parametername>
</parameternamelist>
<parameterdescription>
<para><formula id="48">$ \beta_w(x,y):\Omega\mapsto\mathbb{R} $</formula>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/esanchez/Dropbox/MTK/include/mtk_bc_descriptor_2d.h" line="199" column="1" bodyfile="/home/esanchez/Dropbox/MTK/src/mtk_bc_descriptor_2d.cc" bodystart="167" bodyend="175"/>
        <references refid="classmtk_1_1Tools_1a332324c6f25e66be9dff48c5987a3b9f" compoundref="mtk__tools_8cc" startline="61" endline="81">mtk::Tools::Prevent</references>
      </memberdef>
      <memberdef kind="function" id="classmtk_1_1BCDescriptor2D_1a4ba8690e845f59a1507b056f3fc8061e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mtk::BCDescriptor2D::set_east_condition</definition>
        <argsstring>(Real(*east_condition)(Real xx, Real yy)) noexcept</argsstring>
        <name>set_east_condition</name>
        <param>
          <type><ref refid="group__c01-roots_1gac080bbbf5cbb5502c9f00405f894857d" kindref="member">Real</ref>(*)(<ref refid="group__c01-roots_1gac080bbbf5cbb5502c9f00405f894857d" kindref="member">Real</ref> xx, <ref refid="group__c01-roots_1gac080bbbf5cbb5502c9f00405f894857d" kindref="member">Real</ref> yy)</type>
          <declname>east_condition</declname>
        </param>
        <briefdescription>
<para>Set boundary condition at east. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">east_condition</parametername>
</parameternamelist>
<parameterdescription>
<para><formula id="49">$ \beta_e(x,y):\Omega\mapsto\mathbb{R} $</formula>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/esanchez/Dropbox/MTK/include/mtk_bc_descriptor_2d.h" line="206" column="1" bodyfile="/home/esanchez/Dropbox/MTK/src/mtk_bc_descriptor_2d.cc" bodystart="177" bodyend="185"/>
        <references refid="classmtk_1_1Tools_1a332324c6f25e66be9dff48c5987a3b9f" compoundref="mtk__tools_8cc" startline="61" endline="81">mtk::Tools::Prevent</references>
      </memberdef>
      <memberdef kind="function" id="classmtk_1_1BCDescriptor2D_1a408f159cc44d7ee610191efb8ed48b2a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mtk::BCDescriptor2D::set_south_condition</definition>
        <argsstring>(Real(*south_condition)(Real xx, Real yy)) noexcept</argsstring>
        <name>set_south_condition</name>
        <param>
          <type><ref refid="group__c01-roots_1gac080bbbf5cbb5502c9f00405f894857d" kindref="member">Real</ref>(*)(<ref refid="group__c01-roots_1gac080bbbf5cbb5502c9f00405f894857d" kindref="member">Real</ref> xx, <ref refid="group__c01-roots_1gac080bbbf5cbb5502c9f00405f894857d" kindref="member">Real</ref> yy)</type>
          <declname>south_condition</declname>
        </param>
        <briefdescription>
<para>Set boundary condition at south. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">south_condition</parametername>
</parameternamelist>
<parameterdescription>
<para><formula id="50">$ \beta_s(x,y):\Omega\mapsto\mathbb{R} $</formula>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/esanchez/Dropbox/MTK/include/mtk_bc_descriptor_2d.h" line="213" column="1" bodyfile="/home/esanchez/Dropbox/MTK/src/mtk_bc_descriptor_2d.cc" bodystart="187" bodyend="196"/>
        <references refid="classmtk_1_1Tools_1a332324c6f25e66be9dff48c5987a3b9f" compoundref="mtk__tools_8cc" startline="61" endline="81">mtk::Tools::Prevent</references>
      </memberdef>
      <memberdef kind="function" id="classmtk_1_1BCDescriptor2D_1a690f6881a88b202c074d9f90f2a7ddb0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mtk::BCDescriptor2D::set_north_condition</definition>
        <argsstring>(Real(*north_condition)(Real xx, Real yy)) noexcept</argsstring>
        <name>set_north_condition</name>
        <param>
          <type><ref refid="group__c01-roots_1gac080bbbf5cbb5502c9f00405f894857d" kindref="member">Real</ref>(*)(<ref refid="group__c01-roots_1gac080bbbf5cbb5502c9f00405f894857d" kindref="member">Real</ref> xx, <ref refid="group__c01-roots_1gac080bbbf5cbb5502c9f00405f894857d" kindref="member">Real</ref> yy)</type>
          <declname>north_condition</declname>
        </param>
        <briefdescription>
<para>Set boundary condition at north. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">north_condition</parametername>
</parameternamelist>
<parameterdescription>
<para><formula id="51">$ \beta_n(x,y):\Omega\mapsto\mathbb{R} $</formula>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/esanchez/Dropbox/MTK/include/mtk_bc_descriptor_2d.h" line="220" column="1" bodyfile="/home/esanchez/Dropbox/MTK/src/mtk_bc_descriptor_2d.cc" bodystart="198" bodyend="207"/>
        <references refid="classmtk_1_1Tools_1a332324c6f25e66be9dff48c5987a3b9f" compoundref="mtk__tools_8cc" startline="61" endline="81">mtk::Tools::Prevent</references>
      </memberdef>
      <memberdef kind="function" id="classmtk_1_1BCDescriptor2D_1a35592617dda3b965b680b2a1355122f4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mtk::BCDescriptor2D::ImposeOnLaplacianMatrix</definition>
        <argsstring>(const UniStgGrid2D &amp;grid, DenseMatrix &amp;matrix, const int &amp;order_accuracy=2) const </argsstring>
        <name>ImposeOnLaplacianMatrix</name>
        <param>
          <type>const <ref refid="classmtk_1_1UniStgGrid2D" kindref="compound">UniStgGrid2D</ref> &amp;</type>
          <declname>grid</declname>
        </param>
        <param>
          <type><ref refid="classmtk_1_1DenseMatrix" kindref="compound">DenseMatrix</ref> &amp;</type>
          <declname>matrix</declname>
        </param>
        <param>
          <type>const int &amp;</type>
          <declname>order_accuracy</declname>
          <defval>2</defval>
        </param>
        <briefdescription>
<para>Imposes the condition on the operator represented as matrix. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">grid</parametername>
</parameternamelist>
<parameterdescription>
<para>Grid upon which impose the desired boundary condition. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">matrix</parametername>
</parameternamelist>
<parameterdescription>
<para>Input Laplacian operator. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">order_accuracy</parametername>
</parameternamelist>
<parameterdescription>
<para>Order of accuracy of the operator in the <ref refid="classmtk_1_1Matrix" kindref="compound">Matrix</ref>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
<para><orderedlist>
<listitem><para>If we have not bound anything to the grid, then we have to generate our collection of spatial coordinates, as we evaluate the coefficients.</para></listitem><listitem><para>Assign values to implement south boundary condition.</para></listitem><listitem><para>Assign values to implement north boundary condition.</para></listitem><listitem><para>Assign values to implement west boundary condition.</para></listitem><listitem><para>Assign values to implement east boundary condition. </para></listitem></orderedlist>
</para>        </inbodydescription>
        <location file="/home/esanchez/Dropbox/MTK/include/mtk_bc_descriptor_2d.h" line="229" column="1" bodyfile="/home/esanchez/Dropbox/MTK/src/mtk_bc_descriptor_2d.cc" bodystart="536" bodyend="578"/>
        <references refid="classmtk_1_1Tools_1a332324c6f25e66be9dff48c5987a3b9f" compoundref="mtk__tools_8cc" startline="61" endline="81">mtk::Tools::Prevent</references>
        <references refid="classmtk_1_1UniStgGrid2D_1a99a3a9cdb05b7306be99bde935509e30" compoundref="mtk__uni__stg__grid__2d_8cc" startline="205" endline="208">mtk::UniStgGrid2D::nature</references>
        <references refid="namespacemtk_1ga4c54f2a329cfb4e56213b02a259d19e2af481d45bd70d41381c7d72e200889205" compoundref="mtk__enums_8h" startline="114">mtk::SCALAR</references>
        <references refid="classmtk_1_1UniStgGrid2D_1a2d182866a398aba8e4829590e85bf939" compoundref="mtk__uni__stg__grid__2d_8cc" startline="220" endline="223">mtk::UniStgGrid2D::num_cells_x</references>
        <references refid="classmtk_1_1UniStgGrid2D_1aed05a801cc9a76dba0ff203cea58a61a" compoundref="mtk__uni__stg__grid__2d_8cc" startline="245" endline="248">mtk::UniStgGrid2D::num_cells_y</references>
        <references refid="classmtk_1_1DenseMatrix_1a53f3afb3b6a8d21854458aaa9663cc74" compoundref="mtk__dense__matrix_8cc" startline="333" endline="336">mtk::DenseMatrix::num_rows</references>
        <references refid="classmtk_1_1DenseMatrix_1a41747502d468c6728a4be31501b16e0e" compoundref="mtk__dense__matrix_8cc" startline="338" endline="341">mtk::DenseMatrix::num_cols</references>
        <references refid="classmtk_1_1UniStgGrid2D_1aa651194ccd0321a7c61a8f56fa5e8455" compoundref="mtk__uni__stg__grid__2d_8cc" startline="255" endline="258">mtk::UniStgGrid2D::Bound</references>
      </memberdef>
      <memberdef kind="function" id="classmtk_1_1BCDescriptor2D_1a5f0ff1fda1b5266dcd77ba2301c8ba2c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mtk::BCDescriptor2D::ImposeOnGrid</definition>
        <argsstring>(UniStgGrid2D &amp;grid) const </argsstring>
        <name>ImposeOnGrid</name>
        <param>
          <type><ref refid="classmtk_1_1UniStgGrid2D" kindref="compound">UniStgGrid2D</ref> &amp;</type>
          <declname>grid</declname>
        </param>
        <briefdescription>
<para>Imposes the condition on the grid. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">grid</parametername>
</parameternamelist>
<parameterdescription>
<para>Grid upon which impose the desired boundary condition. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/esanchez/Dropbox/MTK/include/mtk_bc_descriptor_2d.h" line="238" column="1" bodyfile="/home/esanchez/Dropbox/MTK/src/mtk_bc_descriptor_2d.cc" bodystart="580" bodyend="588"/>
        <references refid="classmtk_1_1Tools_1a332324c6f25e66be9dff48c5987a3b9f" compoundref="mtk__tools_8cc" startline="61" endline="81">mtk::Tools::Prevent</references>
        <references refid="classmtk_1_1UniStgGrid2D_1a2d182866a398aba8e4829590e85bf939" compoundref="mtk__uni__stg__grid__2d_8cc" startline="220" endline="223">mtk::UniStgGrid2D::num_cells_x</references>
        <references refid="classmtk_1_1UniStgGrid2D_1aed05a801cc9a76dba0ff203cea58a61a" compoundref="mtk__uni__stg__grid__2d_8cc" startline="245" endline="248">mtk::UniStgGrid2D::num_cells_y</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classmtk_1_1BCDescriptor2D_1acba15639218e80fd93aff482b185201e" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mtk::BCDescriptor2D::ImposeOnSouthBoundary</definition>
        <argsstring>(const mtk::UniStgGrid2D &amp;grid, mtk::DenseMatrix &amp;matrix, const int &amp;order_accuracy) const </argsstring>
        <name>ImposeOnSouthBoundary</name>
        <param>
          <type>const <ref refid="classmtk_1_1UniStgGrid2D" kindref="compound">mtk::UniStgGrid2D</ref> &amp;</type>
          <declname>grid</declname>
        </param>
        <param>
          <type><ref refid="classmtk_1_1DenseMatrix" kindref="compound">mtk::DenseMatrix</ref> &amp;</type>
          <declname>matrix</declname>
        </param>
        <param>
          <type>const int &amp;</type>
          <declname>order_accuracy</declname>
        </param>
        <briefdescription>
<para>Imposes the condition on the south boundary. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">grid</parametername>
</parameternamelist>
<parameterdescription>
<para>Grid upon which impose the desired boundary condition. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">matrix</parametername>
</parameternamelist>
<parameterdescription>
<para>Input Laplacian operator. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">order_accuracy</parametername>
</parameternamelist>
<parameterdescription>
<para>Order of accuracy of the operator in the <ref refid="classmtk_1_1Matrix" kindref="compound">Matrix</ref>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
<para><orderedlist>
<listitem><para>Impose the Dirichlet condition first.</para></listitem><listitem><para>Impose the Neumann condition second.</para></listitem></orderedlist>
</para><para><xrefsect id="todo_1_todo000012"><xreftitle>Todo</xreftitle><xrefdescription><para>Impose the Neumann conditions on every pole, for every scenario. </para></xrefdescription></xrefsect></para><para><orderedlist>
<listitem><para>Impose the Dirichlet condition first.</para></listitem><listitem><para>Impose the Neumann condition second. </para></listitem></orderedlist>
</para>        </inbodydescription>
        <location file="/home/esanchez/Dropbox/MTK/include/mtk_bc_descriptor_2d.h" line="248" column="1" bodyfile="/home/esanchez/Dropbox/MTK/src/mtk_bc_descriptor_2d.cc" bodystart="209" bodyend="284"/>
        <references refid="classmtk_1_1UniStgGrid2D_1af2b1712387ded85edaf2b64617d3fc13" compoundref="mtk__uni__stg__grid__2d_8cc" startline="210" endline="213">mtk::UniStgGrid2D::west_bndy</references>
        <references refid="classmtk_1_1UniStgGrid2D_1a1442eaf219f099d0ebf46a170fdebf92" compoundref="mtk__uni__stg__grid__2d_8cc" startline="235" endline="238">mtk::UniStgGrid2D::south_bndy</references>
        <references refid="classmtk_1_1DenseMatrix_1a53f3afb3b6a8d21854458aaa9663cc74" compoundref="mtk__dense__matrix_8cc" startline="333" endline="336">mtk::DenseMatrix::num_rows</references>
        <references refid="classmtk_1_1DenseMatrix_1a41747502d468c6728a4be31501b16e0e" compoundref="mtk__dense__matrix_8cc" startline="338" endline="341">mtk::DenseMatrix::num_cols</references>
        <references refid="classmtk_1_1DenseMatrix_1a784ce5784109ac86bfb9d8562b334b13" compoundref="mtk__dense__matrix_8cc" startline="360" endline="371">mtk::DenseMatrix::SetValue</references>
        <references refid="classmtk_1_1UniStgGrid2D_1aca4710004c4a7da6a9e8fd6ab32a691f" compoundref="mtk__uni__stg__grid__2d_8cc" startline="225" endline="228">mtk::UniStgGrid2D::delta_x</references>
        <references refid="group__c01-roots_1gaf39c2d851a2db744f4feb1c5ab3ec2cf" compoundref="mtk__roots_8h" startline="118">mtk::kTwo</references>
        <references refid="classmtk_1_1UniStgGrid2D_1a2d182866a398aba8e4829590e85bf939" compoundref="mtk__uni__stg__grid__2d_8cc" startline="220" endline="223">mtk::UniStgGrid2D::num_cells_x</references>
        <references refid="classmtk_1_1UniStgGrid2D_1a03f689eb29a6369b82ce1207c655d5ff" compoundref="mtk__uni__stg__grid__2d_8cc" startline="215" endline="218">mtk::UniStgGrid2D::east_bndy</references>
        <references refid="classmtk_1_1UniStgGrid2D_1ab2f70cf5cd0a2d5486992d9f2f8baa4a" compoundref="mtk__uni__stg__grid__2d_8cc" startline="230" endline="233">mtk::UniStgGrid2D::discrete_domain_x</references>
      </memberdef>
      <memberdef kind="function" id="classmtk_1_1BCDescriptor2D_1a6062894dbe7c6f42a3bbcc54f2f8973d" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mtk::BCDescriptor2D::ImposeOnNorthBoundary</definition>
        <argsstring>(const mtk::UniStgGrid2D &amp;grid, mtk::DenseMatrix &amp;matrix, const int &amp;order_accuracy) const </argsstring>
        <name>ImposeOnNorthBoundary</name>
        <param>
          <type>const <ref refid="classmtk_1_1UniStgGrid2D" kindref="compound">mtk::UniStgGrid2D</ref> &amp;</type>
          <declname>grid</declname>
        </param>
        <param>
          <type><ref refid="classmtk_1_1DenseMatrix" kindref="compound">mtk::DenseMatrix</ref> &amp;</type>
          <declname>matrix</declname>
        </param>
        <param>
          <type>const int &amp;</type>
          <declname>order_accuracy</declname>
        </param>
        <briefdescription>
<para>Imposes the condition on the north boundary. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">grid</parametername>
</parameternamelist>
<parameterdescription>
<para>Grid upon which impose the desired boundary condition. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">matrix</parametername>
</parameternamelist>
<parameterdescription>
<para>Input Laplacian operator. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">order_accuracy</parametername>
</parameternamelist>
<parameterdescription>
<para>Order of accuracy of the operator in the <ref refid="classmtk_1_1Matrix" kindref="compound">Matrix</ref>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
<para><orderedlist>
<listitem><para>Impose the Dirichlet condition first.</para></listitem><listitem><para>Impose the Neumann condition second.</para></listitem></orderedlist>
<orderedlist>
<listitem><para>Impose the Dirichlet condition first.</para></listitem><listitem><para>Impose the Neumann condition second. </para></listitem></orderedlist>
</para>        </inbodydescription>
        <location file="/home/esanchez/Dropbox/MTK/include/mtk_bc_descriptor_2d.h" line="259" column="1" bodyfile="/home/esanchez/Dropbox/MTK/src/mtk_bc_descriptor_2d.cc" bodystart="286" bodyend="365"/>
        <references refid="classmtk_1_1UniStgGrid2D_1aed05a801cc9a76dba0ff203cea58a61a" compoundref="mtk__uni__stg__grid__2d_8cc" startline="245" endline="248">mtk::UniStgGrid2D::num_cells_y</references>
        <references refid="classmtk_1_1UniStgGrid2D_1a2d182866a398aba8e4829590e85bf939" compoundref="mtk__uni__stg__grid__2d_8cc" startline="220" endline="223">mtk::UniStgGrid2D::num_cells_x</references>
        <references refid="classmtk_1_1UniStgGrid2D_1af2b1712387ded85edaf2b64617d3fc13" compoundref="mtk__uni__stg__grid__2d_8cc" startline="210" endline="213">mtk::UniStgGrid2D::west_bndy</references>
        <references refid="classmtk_1_1UniStgGrid2D_1afe1ead253cdeb5503e0489eba8fd84e2" compoundref="mtk__uni__stg__grid__2d_8cc" startline="240" endline="243">mtk::UniStgGrid2D::north_bndy</references>
        <references refid="classmtk_1_1DenseMatrix_1a53f3afb3b6a8d21854458aaa9663cc74" compoundref="mtk__dense__matrix_8cc" startline="333" endline="336">mtk::DenseMatrix::num_rows</references>
        <references refid="classmtk_1_1DenseMatrix_1a41747502d468c6728a4be31501b16e0e" compoundref="mtk__dense__matrix_8cc" startline="338" endline="341">mtk::DenseMatrix::num_cols</references>
        <references refid="classmtk_1_1DenseMatrix_1a784ce5784109ac86bfb9d8562b334b13" compoundref="mtk__dense__matrix_8cc" startline="360" endline="371">mtk::DenseMatrix::SetValue</references>
        <references refid="classmtk_1_1UniStgGrid2D_1aca4710004c4a7da6a9e8fd6ab32a691f" compoundref="mtk__uni__stg__grid__2d_8cc" startline="225" endline="228">mtk::UniStgGrid2D::delta_x</references>
        <references refid="group__c01-roots_1gaf39c2d851a2db744f4feb1c5ab3ec2cf" compoundref="mtk__roots_8h" startline="118">mtk::kTwo</references>
        <references refid="classmtk_1_1UniStgGrid2D_1a03f689eb29a6369b82ce1207c655d5ff" compoundref="mtk__uni__stg__grid__2d_8cc" startline="215" endline="218">mtk::UniStgGrid2D::east_bndy</references>
        <references refid="classmtk_1_1UniStgGrid2D_1ab2f70cf5cd0a2d5486992d9f2f8baa4a" compoundref="mtk__uni__stg__grid__2d_8cc" startline="230" endline="233">mtk::UniStgGrid2D::discrete_domain_x</references>
      </memberdef>
      <memberdef kind="function" id="classmtk_1_1BCDescriptor2D_1a0e7bc4d22fa8c9b9a29dd71669b35744" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mtk::BCDescriptor2D::ImposeOnWestBoundary</definition>
        <argsstring>(const mtk::UniStgGrid2D &amp;grid, mtk::DenseMatrix &amp;matrix, const int &amp;order_accuracy) const </argsstring>
        <name>ImposeOnWestBoundary</name>
        <param>
          <type>const <ref refid="classmtk_1_1UniStgGrid2D" kindref="compound">mtk::UniStgGrid2D</ref> &amp;</type>
          <declname>grid</declname>
        </param>
        <param>
          <type><ref refid="classmtk_1_1DenseMatrix" kindref="compound">mtk::DenseMatrix</ref> &amp;</type>
          <declname>matrix</declname>
        </param>
        <param>
          <type>const int &amp;</type>
          <declname>order_accuracy</declname>
        </param>
        <briefdescription>
<para>Imposes the condition on the west boundary. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">grid</parametername>
</parameternamelist>
<parameterdescription>
<para>Grid upon which impose the desired boundary condition. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">matrix</parametername>
</parameternamelist>
<parameterdescription>
<para>Input Laplacian operator. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">order_accuracy</parametername>
</parameternamelist>
<parameterdescription>
<para>Order of accuracy of the operator in the <ref refid="classmtk_1_1Matrix" kindref="compound">Matrix</ref>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
<para><orderedlist>
<listitem><para>Impose the Dirichlet condition first.</para></listitem></orderedlist>
</para><para><simplesect kind="note"><para>As it can be seen, we must adopt a convention about how to treat the corners. Based on a reasoning with Otilio, we will take the arithmetic mean.</para></simplesect>
<orderedlist>
<listitem><para>Impose the Neumann condition second.</para></listitem></orderedlist>
<orderedlist>
<listitem><para>Impose the Dirichlet condition first.</para></listitem><listitem><para>Impose the Neumann condition second. </para></listitem></orderedlist>
</para>        </inbodydescription>
        <location file="/home/esanchez/Dropbox/MTK/include/mtk_bc_descriptor_2d.h" line="270" column="1" bodyfile="/home/esanchez/Dropbox/MTK/src/mtk_bc_descriptor_2d.cc" bodystart="367" bodyend="448"/>
        <references refid="classmtk_1_1UniStgGrid2D_1af2b1712387ded85edaf2b64617d3fc13" compoundref="mtk__uni__stg__grid__2d_8cc" startline="210" endline="213">mtk::UniStgGrid2D::west_bndy</references>
        <references refid="classmtk_1_1UniStgGrid2D_1a1442eaf219f099d0ebf46a170fdebf92" compoundref="mtk__uni__stg__grid__2d_8cc" startline="235" endline="238">mtk::UniStgGrid2D::south_bndy</references>
        <references refid="classmtk_1_1DenseMatrix_1a53f3afb3b6a8d21854458aaa9663cc74" compoundref="mtk__dense__matrix_8cc" startline="333" endline="336">mtk::DenseMatrix::num_rows</references>
        <references refid="classmtk_1_1DenseMatrix_1a41747502d468c6728a4be31501b16e0e" compoundref="mtk__dense__matrix_8cc" startline="338" endline="341">mtk::DenseMatrix::num_cols</references>
        <references refid="classmtk_1_1DenseMatrix_1a784ce5784109ac86bfb9d8562b334b13" compoundref="mtk__dense__matrix_8cc" startline="360" endline="371">mtk::DenseMatrix::SetValue</references>
        <references refid="classmtk_1_1DenseMatrix_1a4b23ecbebd970b5eea915dbb50691024" compoundref="mtk__dense__matrix_8cc" startline="348" endline="358">mtk::DenseMatrix::GetValue</references>
        <references refid="group__c01-roots_1gaf39c2d851a2db744f4feb1c5ab3ec2cf" compoundref="mtk__roots_8h" startline="118">mtk::kTwo</references>
        <references refid="classmtk_1_1UniStgGrid2D_1a2d182866a398aba8e4829590e85bf939" compoundref="mtk__uni__stg__grid__2d_8cc" startline="220" endline="223">mtk::UniStgGrid2D::num_cells_x</references>
        <references refid="classmtk_1_1UniStgGrid2D_1a65a78cfc80ffdbeb282ed57af4dc5cb4" compoundref="mtk__uni__stg__grid__2d_8cc" startline="250" endline="253">mtk::UniStgGrid2D::delta_y</references>
        <references refid="classmtk_1_1UniStgGrid2D_1aed05a801cc9a76dba0ff203cea58a61a" compoundref="mtk__uni__stg__grid__2d_8cc" startline="245" endline="248">mtk::UniStgGrid2D::num_cells_y</references>
        <references refid="classmtk_1_1UniStgGrid2D_1afe1ead253cdeb5503e0489eba8fd84e2" compoundref="mtk__uni__stg__grid__2d_8cc" startline="240" endline="243">mtk::UniStgGrid2D::north_bndy</references>
        <references refid="classmtk_1_1UniStgGrid2D_1ac33a58d65105550dcf6f6b92b48b5105" compoundref="mtk__uni__stg__grid__2d_8cc" startline="260" endline="263">mtk::UniStgGrid2D::discrete_domain_y</references>
      </memberdef>
      <memberdef kind="function" id="classmtk_1_1BCDescriptor2D_1a3cf921884f08bf2eb87af6db7cc1ecba" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mtk::BCDescriptor2D::ImposeOnEastBoundary</definition>
        <argsstring>(const mtk::UniStgGrid2D &amp;grid, mtk::DenseMatrix &amp;matrix, const int &amp;order_accuracy) const </argsstring>
        <name>ImposeOnEastBoundary</name>
        <param>
          <type>const <ref refid="classmtk_1_1UniStgGrid2D" kindref="compound">mtk::UniStgGrid2D</ref> &amp;</type>
          <declname>grid</declname>
        </param>
        <param>
          <type><ref refid="classmtk_1_1DenseMatrix" kindref="compound">mtk::DenseMatrix</ref> &amp;</type>
          <declname>matrix</declname>
        </param>
        <param>
          <type>const int &amp;</type>
          <declname>order_accuracy</declname>
        </param>
        <briefdescription>
<para>Imposes the condition on the east boundary. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">grid</parametername>
</parameternamelist>
<parameterdescription>
<para>Grid upon which impose the desired boundary condition. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">matrix</parametername>
</parameternamelist>
<parameterdescription>
<para>Input Laplacian operator. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">order_accuracy</parametername>
</parameternamelist>
<parameterdescription>
<para>Order of accuracy of the operator in the <ref refid="classmtk_1_1Matrix" kindref="compound">Matrix</ref>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
<para><orderedlist>
<listitem><para>Impose the Dirichlet condition first.</para></listitem><listitem><para>Impose the Neumann condition second.</para></listitem></orderedlist>
<orderedlist>
<listitem><para>Impose the Dirichlet condition first.</para></listitem><listitem><para>Impose the Neumann condition second. </para></listitem></orderedlist>
</para>        </inbodydescription>
        <location file="/home/esanchez/Dropbox/MTK/include/mtk_bc_descriptor_2d.h" line="281" column="1" bodyfile="/home/esanchez/Dropbox/MTK/src/mtk_bc_descriptor_2d.cc" bodystart="450" bodyend="534"/>
        <references refid="classmtk_1_1UniStgGrid2D_1a03f689eb29a6369b82ce1207c655d5ff" compoundref="mtk__uni__stg__grid__2d_8cc" startline="215" endline="218">mtk::UniStgGrid2D::east_bndy</references>
        <references refid="classmtk_1_1UniStgGrid2D_1a1442eaf219f099d0ebf46a170fdebf92" compoundref="mtk__uni__stg__grid__2d_8cc" startline="235" endline="238">mtk::UniStgGrid2D::south_bndy</references>
        <references refid="classmtk_1_1UniStgGrid2D_1a2d182866a398aba8e4829590e85bf939" compoundref="mtk__uni__stg__grid__2d_8cc" startline="220" endline="223">mtk::UniStgGrid2D::num_cells_x</references>
        <references refid="classmtk_1_1DenseMatrix_1a53f3afb3b6a8d21854458aaa9663cc74" compoundref="mtk__dense__matrix_8cc" startline="333" endline="336">mtk::DenseMatrix::num_rows</references>
        <references refid="classmtk_1_1DenseMatrix_1a41747502d468c6728a4be31501b16e0e" compoundref="mtk__dense__matrix_8cc" startline="338" endline="341">mtk::DenseMatrix::num_cols</references>
        <references refid="classmtk_1_1DenseMatrix_1a784ce5784109ac86bfb9d8562b334b13" compoundref="mtk__dense__matrix_8cc" startline="360" endline="371">mtk::DenseMatrix::SetValue</references>
        <references refid="classmtk_1_1DenseMatrix_1a4b23ecbebd970b5eea915dbb50691024" compoundref="mtk__dense__matrix_8cc" startline="348" endline="358">mtk::DenseMatrix::GetValue</references>
        <references refid="group__c01-roots_1gaf39c2d851a2db744f4feb1c5ab3ec2cf" compoundref="mtk__roots_8h" startline="118">mtk::kTwo</references>
        <references refid="classmtk_1_1UniStgGrid2D_1a65a78cfc80ffdbeb282ed57af4dc5cb4" compoundref="mtk__uni__stg__grid__2d_8cc" startline="250" endline="253">mtk::UniStgGrid2D::delta_y</references>
        <references refid="classmtk_1_1UniStgGrid2D_1aed05a801cc9a76dba0ff203cea58a61a" compoundref="mtk__uni__stg__grid__2d_8cc" startline="245" endline="248">mtk::UniStgGrid2D::num_cells_y</references>
        <references refid="classmtk_1_1UniStgGrid2D_1afe1ead253cdeb5503e0489eba8fd84e2" compoundref="mtk__uni__stg__grid__2d_8cc" startline="240" endline="243">mtk::UniStgGrid2D::north_bndy</references>
        <references refid="classmtk_1_1UniStgGrid2D_1ac33a58d65105550dcf6f6b92b48b5105" compoundref="mtk__uni__stg__grid__2d_8cc" startline="260" endline="263">mtk::UniStgGrid2D::discrete_domain_y</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Enforces boundary conditions in either the operator or the grid. </para>    </briefdescription>
    <detaileddescription>
<para>This class presents an interface for the user to specify boundary conditions on 2D mimetic operators and the grids they are acting on.</para><para><bold>Def.</bold> Let <formula id="32">$ f $</formula> be any scalar or vector field defined over a domain <formula id="33">$ \Omega $</formula>. We can specify any linear combination of <formula id="32">$ f $</formula> and its <formula id="34">$ n $</formula> derivatives to fulfill a condition, which we define as a <bold>boundary condition</bold>:</para><para><formula id="56">\[ \forall \mathbf{x} \in \partial\Omega: \sum_{i = 0}^{n} c_i(\mathbf{x}) &lt;\hat{\mathbf{n}}, \frac{\partial^i f}{\partial x^i}(\mathbf{x})&gt; = \beta(\mathbf{x}). \]</formula></para><para>This class receives information about the highest-order of differentiation, <formula id="34">$ n $</formula>, all possible coefficient functions, <formula id="42">$ c_i(\mathbf{x}) $</formula> for any subset of the boundary (south, north, west and east), and each condition for any subset of the boundary, and takes care of assigning them to both, the differentiation matrices and the grids. </para>    </detaileddescription>
    <collaborationgraph>
      <node id="69">
        <label>T</label>
      </node>
      <node id="68">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="69" relation="usage">
          <edgelabel>+elements</edgelabel>
        </childnode>
      </node>
      <node id="66">
        <label>mtk::BCDescriptor2D</label>
        <link refid="classmtk_1_1BCDescriptor2D"/>
        <childnode refid="67" relation="usage">
          <edgelabel>-east_coefficients_</edgelabel>
          <edgelabel>-west_coefficients_</edgelabel>
          <edgelabel>-south_coefficients_</edgelabel>
          <edgelabel>-north_coefficients_</edgelabel>
        </childnode>
      </node>
      <node id="67">
        <label>std::vector&lt; CoefficientFunction2D &gt;</label>
        <childnode refid="68" relation="template-instance">
          <edgelabel>&lt; CoefficientFunction2D &gt;</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/esanchez/Dropbox/MTK/include/mtk_bc_descriptor_2d.h" line="123" column="1" bodyfile="/home/esanchez/Dropbox/MTK/include/mtk_bc_descriptor_2d.h" bodystart="123" bodyend="301"/>
    <listofallmembers>
      <member refid="classmtk_1_1BCDescriptor2D_1abbc3af29202dbfef203f4cafd9566fd0" prot="public" virt="non-virtual"><scope>mtk::BCDescriptor2D</scope><name>BCDescriptor2D</name></member>
      <member refid="classmtk_1_1BCDescriptor2D_1ae8a93352a94efed52747b710e6ff7893" prot="public" virt="non-virtual"><scope>mtk::BCDescriptor2D</scope><name>BCDescriptor2D</name></member>
      <member refid="classmtk_1_1BCDescriptor2D_1a1f90fc303984bf18c136a34896bbb7c9" prot="private" virt="non-virtual"><scope>mtk::BCDescriptor2D</scope><name>east_coefficients_</name></member>
      <member refid="classmtk_1_1BCDescriptor2D_1a6cca0c70293203c9d88773e5d5f93418" prot="private" virt="non-virtual"><scope>mtk::BCDescriptor2D</scope><name>east_condition_</name></member>
      <member refid="classmtk_1_1BCDescriptor2D_1a3ef0bc7e9fbc16669099314dd34b170a" prot="private" virt="non-virtual"><scope>mtk::BCDescriptor2D</scope><name>generate_space_</name></member>
      <member refid="classmtk_1_1BCDescriptor2D_1a5a9b80a2e9e579b05d9f3589d80448b6" prot="public" virt="non-virtual"><scope>mtk::BCDescriptor2D</scope><name>highest_order_diff_east</name></member>
      <member refid="classmtk_1_1BCDescriptor2D_1aea5e539a10d5641bd605ebe583c14bc5" prot="private" virt="non-virtual"><scope>mtk::BCDescriptor2D</scope><name>highest_order_diff_east_</name></member>
      <member refid="classmtk_1_1BCDescriptor2D_1a87c5f2449247d65ea07784ba2ec61bc7" prot="public" virt="non-virtual"><scope>mtk::BCDescriptor2D</scope><name>highest_order_diff_north</name></member>
      <member refid="classmtk_1_1BCDescriptor2D_1a6cdeefe70f5bef93196f34ab2949cad2" prot="private" virt="non-virtual"><scope>mtk::BCDescriptor2D</scope><name>highest_order_diff_north_</name></member>
      <member refid="classmtk_1_1BCDescriptor2D_1a463d909f6014e7f01b33171a06d7b400" prot="public" virt="non-virtual"><scope>mtk::BCDescriptor2D</scope><name>highest_order_diff_south</name></member>
      <member refid="classmtk_1_1BCDescriptor2D_1a1fb094e5e53ecfba32fe9fe56c051c47" prot="private" virt="non-virtual"><scope>mtk::BCDescriptor2D</scope><name>highest_order_diff_south_</name></member>
      <member refid="classmtk_1_1BCDescriptor2D_1a0fa469ddf6ff76e2858d6d3b76cc8b6f" prot="public" virt="non-virtual"><scope>mtk::BCDescriptor2D</scope><name>highest_order_diff_west</name></member>
      <member refid="classmtk_1_1BCDescriptor2D_1aa18ef62f8eda355e47f51bcb5dbe8fe7" prot="private" virt="non-virtual"><scope>mtk::BCDescriptor2D</scope><name>highest_order_diff_west_</name></member>
      <member refid="classmtk_1_1BCDescriptor2D_1a3cf921884f08bf2eb87af6db7cc1ecba" prot="private" virt="non-virtual"><scope>mtk::BCDescriptor2D</scope><name>ImposeOnEastBoundary</name></member>
      <member refid="classmtk_1_1BCDescriptor2D_1a5f0ff1fda1b5266dcd77ba2301c8ba2c" prot="public" virt="non-virtual"><scope>mtk::BCDescriptor2D</scope><name>ImposeOnGrid</name></member>
      <member refid="classmtk_1_1BCDescriptor2D_1a35592617dda3b965b680b2a1355122f4" prot="public" virt="non-virtual"><scope>mtk::BCDescriptor2D</scope><name>ImposeOnLaplacianMatrix</name></member>
      <member refid="classmtk_1_1BCDescriptor2D_1a6062894dbe7c6f42a3bbcc54f2f8973d" prot="private" virt="non-virtual"><scope>mtk::BCDescriptor2D</scope><name>ImposeOnNorthBoundary</name></member>
      <member refid="classmtk_1_1BCDescriptor2D_1acba15639218e80fd93aff482b185201e" prot="private" virt="non-virtual"><scope>mtk::BCDescriptor2D</scope><name>ImposeOnSouthBoundary</name></member>
      <member refid="classmtk_1_1BCDescriptor2D_1a0e7bc4d22fa8c9b9a29dd71669b35744" prot="private" virt="non-virtual"><scope>mtk::BCDescriptor2D</scope><name>ImposeOnWestBoundary</name></member>
      <member refid="classmtk_1_1BCDescriptor2D_1a5429c040c034303dd92dcff554f9efad" prot="private" virt="non-virtual"><scope>mtk::BCDescriptor2D</scope><name>north_coefficients_</name></member>
      <member refid="classmtk_1_1BCDescriptor2D_1a23e0b9ae755dcf81841aa24ddaf0b090" prot="private" virt="non-virtual"><scope>mtk::BCDescriptor2D</scope><name>north_condition_</name></member>
      <member refid="classmtk_1_1BCDescriptor2D_1a27635428a6c36d1e305cafdc68271063" prot="public" virt="non-virtual"><scope>mtk::BCDescriptor2D</scope><name>PushBackEastCoeff</name></member>
      <member refid="classmtk_1_1BCDescriptor2D_1a0fed58bd058d699a572888fe4b9934a4" prot="public" virt="non-virtual"><scope>mtk::BCDescriptor2D</scope><name>PushBackNorthCoeff</name></member>
      <member refid="classmtk_1_1BCDescriptor2D_1a9eb891f14c68968a0113632fa5fea630" prot="public" virt="non-virtual"><scope>mtk::BCDescriptor2D</scope><name>PushBackSouthCoeff</name></member>
      <member refid="classmtk_1_1BCDescriptor2D_1a3da32ba89cfb15032bb1156394bad98c" prot="public" virt="non-virtual"><scope>mtk::BCDescriptor2D</scope><name>PushBackWestCoeff</name></member>
      <member refid="classmtk_1_1BCDescriptor2D_1a4ba8690e845f59a1507b056f3fc8061e" prot="public" virt="non-virtual"><scope>mtk::BCDescriptor2D</scope><name>set_east_condition</name></member>
      <member refid="classmtk_1_1BCDescriptor2D_1a690f6881a88b202c074d9f90f2a7ddb0" prot="public" virt="non-virtual"><scope>mtk::BCDescriptor2D</scope><name>set_north_condition</name></member>
      <member refid="classmtk_1_1BCDescriptor2D_1a408f159cc44d7ee610191efb8ed48b2a" prot="public" virt="non-virtual"><scope>mtk::BCDescriptor2D</scope><name>set_south_condition</name></member>
      <member refid="classmtk_1_1BCDescriptor2D_1a006050efe15b1be75b36a74a23051392" prot="public" virt="non-virtual"><scope>mtk::BCDescriptor2D</scope><name>set_west_condition</name></member>
      <member refid="classmtk_1_1BCDescriptor2D_1a263309b9ad288dc89826d818d9378d07" prot="private" virt="non-virtual"><scope>mtk::BCDescriptor2D</scope><name>south_coefficients_</name></member>
      <member refid="classmtk_1_1BCDescriptor2D_1a2a933b473abbe47ad7c79ef7939e7768" prot="private" virt="non-virtual"><scope>mtk::BCDescriptor2D</scope><name>south_condition_</name></member>
      <member refid="classmtk_1_1BCDescriptor2D_1a7df71b43acc25c468683075cc7790bb2" prot="private" virt="non-virtual"><scope>mtk::BCDescriptor2D</scope><name>west_coefficients_</name></member>
      <member refid="classmtk_1_1BCDescriptor2D_1a2d4af48b3408658c7ace6eeb74464c9f" prot="private" virt="non-virtual"><scope>mtk::BCDescriptor2D</scope><name>west_condition_</name></member>
      <member refid="classmtk_1_1BCDescriptor2D_1ae14e62548a8bc080d576fff6937c546b" prot="public" virt="non-virtual"><scope>mtk::BCDescriptor2D</scope><name>~BCDescriptor2D</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
