<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.8">
  <compounddef id="todo" kind="page">
    <compoundname>todo</compoundname>
    <title>Todo List</title>
    <detaileddescription>
<para><variablelist>
<varlistentry><term><anchor id="todo_1_todo000012"/>Member <ref refid="classmtk_1_1BCDescriptor2D_1acba15639218e80fd93aff482b185201e" kindref="member">mtk::BCDescriptor2D::ImposeOnSouthBoundary</ref>  (const <ref refid="classmtk_1_1UniStgGrid2D" kindref="compound">mtk::UniStgGrid2D</ref> &amp;grid, <ref refid="classmtk_1_1DenseMatrix" kindref="compound">mtk::DenseMatrix</ref> &amp;matrix, const int &amp;order_accuracy) const </term></varlistentry>
<listitem><para>Impose the Neumann conditions on every pole, for every scenario.  </para></listitem>
<varlistentry><term><anchor id="todo_1_todo000001"/>Member <ref refid="classmtk_1_1DenseMatrix_1a01d3d8bd502870f93bf3a88a0cc5fb49" kindref="member">mtk::DenseMatrix::Kron</ref>  (const DenseMatrix &amp;aa, const DenseMatrix &amp;bb)</term></varlistentry>
<listitem><para>Implement Kronecker product using the BLAS.  </para></listitem>
<varlistentry><term><anchor id="todo_1_todo000015"/>Member <ref refid="classmtk_1_1DenseMatrix_1a59b9bea24acf39dca64e8549b3527463" kindref="member">mtk::DenseMatrix::OrderColMajor</ref>  ()</term></varlistentry>
<listitem><para>Improve this so that no new arrays have to be created.  </para></listitem>
<varlistentry><term><anchor id="todo_1_todo000014"/>Member <ref refid="classmtk_1_1DenseMatrix_1ac2949efba3e8278335d45418c85433e4" kindref="member">mtk::DenseMatrix::OrderRowMajor</ref>  ()</term></varlistentry>
<listitem><para>Improve this so that no new arrays have to be created.  </para></listitem>
<varlistentry><term><anchor id="todo_1_todo000013"/>Member <ref refid="classmtk_1_1DenseMatrix_1a71d9c07ca66e88d97d1fd5012f43138b" kindref="member">mtk::DenseMatrix::Transpose</ref>  ()</term></varlistentry>
<listitem><para>Improve this so that no extra arrays have to be created.  </para></listitem>
<varlistentry><term><anchor id="todo_1_todo000002"/>Class <ref refid="classmtk_1_1GLPKAdapter" kindref="compound">mtk::GLPKAdapter</ref>  </term></varlistentry>
<listitem><para>Rescind from the GLPK as the numerical core for CLO problems.  </para></listitem>
<varlistentry><term><anchor id="todo_1_todo000022"/>Member <ref refid="classmtk_1_1Matrix_1af4bba5c43d1f09f5059a04298ba24568" kindref="member">mtk::Matrix::IncreaseNumNull</ref>  () noexcept</term></varlistentry>
<listitem><para>Review the definition of sparse matrices properties.  </para></listitem>
<varlistentry><term><anchor id="todo_1_todo000021"/>Member <ref refid="classmtk_1_1Matrix_1ace7cb5c31d0de66b8f9c63cd542c9e63" kindref="member">mtk::Matrix::IncreaseNumZero</ref>  () noexcept</term></varlistentry>
<listitem><para>Review the definition of sparse matrices properties.  </para></listitem>
<varlistentry><term><anchor id="todo_1_todo000023"/>Member <ref refid="classmtk_1_1Tools_1a332324c6f25e66be9dff48c5987a3b9f" kindref="member">mtk::Tools::Prevent</ref>  (const bool complement, const char *const fname, int lineno, const char *const fxname) noexcept</term></varlistentry>
<listitem><para>Check if this is the best way of stalling execution.  </para></listitem>
<varlistentry><term><anchor id="todo_1_todo000024"/>Member <ref refid="classmtk_1_1Tools_1a04a60458594336ee1badff79b8a9a77f" kindref="member">mtk::Tools::test_number_</ref>  </term></varlistentry>
<listitem><para>Check usage of static methods and private members.  </para></listitem>
<varlistentry><term><anchor id="todo_1_todo000007"/>Member <ref refid="classmtk_1_1UniStgGrid1D_1aa1999580cb98c19950e951510871cc90" kindref="member">mtk::UniStgGrid1D::discrete_domain_x</ref>  () const </term></varlistentry>
<listitem><para>Review const-correctness of the pointer we return.  </para></listitem>
<varlistentry><term><anchor id="todo_1_todo000008"/>Member <ref refid="classmtk_1_1UniStgGrid1D_1acf28d702f6e702599986afcb253bbfc1" kindref="member">mtk::UniStgGrid1D::discrete_field_u</ref>  ()</term></varlistentry>
<listitem><para>Review const-correctness of the pointer we return. Look at the STL!  </para></listitem>
<varlistentry><term><anchor id="todo_1_todo000010"/>Member <ref refid="classmtk_1_1UniStgGrid2D_1ab2f70cf5cd0a2d5486992d9f2f8baa4a" kindref="member">mtk::UniStgGrid2D::discrete_domain_x</ref>  () const </term></varlistentry>
<listitem><para>Review const-correctness of the pointer we return.  </para></listitem>
<varlistentry><term><anchor id="todo_1_todo000011"/>Member <ref refid="classmtk_1_1UniStgGrid2D_1ac33a58d65105550dcf6f6b92b48b5105" kindref="member">mtk::UniStgGrid2D::discrete_domain_y</ref>  () const </term></varlistentry>
<listitem><para>Review const-correctness of the pointer we return.  </para></listitem>
<varlistentry><term><anchor id="todo_1_todo000016"/>File <ref refid="mtk__div__1d_8cc" kindref="compound">mtk_div_1d.cc</ref>  </term></varlistentry>
<listitem><para>Overload ostream operator as in <ref refid="classmtk_1_1Lap1D" kindref="compound">mtk::Lap1D</ref>.</para><para>Implement creation of <formula id="21">$ \mathbf{\Lambda}$</formula> w. <ref refid="classmtk_1_1BLASAdapter" kindref="compound">mtk::BLASAdapter</ref>.  </para></listitem>
<varlistentry><term><anchor id="todo_1_todo000025"/>File <ref refid="mtk__glpk__adapter__test_8cc" kindref="compound">mtk_glpk_adapter_test.cc</ref>  </term></varlistentry>
<listitem><para>Test the <ref refid="classmtk_1_1GLPKAdapter" kindref="compound">mtk::GLPKAdapter</ref> class.  </para></listitem>
<varlistentry><term><anchor id="todo_1_todo000018"/>File <ref refid="mtk__grad__1d_8cc" kindref="compound">mtk_grad_1d.cc</ref>  </term></varlistentry>
<listitem><para>Overload ostream operator as in <ref refid="classmtk_1_1Lap1D" kindref="compound">mtk::Lap1D</ref>.</para><para>Implement creation of <formula id="21">$ \mathbf{\Lambda}$</formula> w. <ref refid="classmtk_1_1BLASAdapter" kindref="compound">mtk::BLASAdapter</ref>.  </para></listitem>
<varlistentry><term><anchor id="todo_1_todo000020"/>File <ref refid="mtk__lapack__adapter_8cc" kindref="compound">mtk_lapack_adapter.cc</ref>  </term></varlistentry>
<listitem><para>Write documentation using LaTeX. </para></listitem>
<varlistentry><term><anchor id="todo_1_todo000026"/>File <ref refid="mtk__lapack__adapter__test_8cc" kindref="compound">mtk_lapack_adapter_test.cc</ref>  </term></varlistentry>
<listitem><para>Test the <ref refid="classmtk_1_1LAPACKAdapter" kindref="compound">mtk::LAPACKAdapter</ref> class.  </para></listitem>
<varlistentry><term><anchor id="todo_1_todo000003"/>File <ref refid="mtk__quad__1d_8h" kindref="compound">mtk_quad_1d.h</ref>  </term></varlistentry>
<listitem><para>Implement this class.  </para></listitem>
<varlistentry><term><anchor id="todo_1_todo000004"/>File <ref refid="mtk__roots_8h" kindref="compound">mtk_roots.h</ref>  </term></varlistentry>
<listitem><para>Documentation should (better?) capture effects from selective compilation.</para><para>Test selective precision mechanisms.  </para></listitem>
<varlistentry><term><anchor id="todo_1_todo000006"/>File <ref refid="mtk__uni__stg__grid__1d_8h" kindref="compound">mtk_uni_stg_grid_1d.h</ref>  </term></varlistentry>
<listitem><para>Create overloaded binding routines that read data from files.  </para></listitem>
<varlistentry><term><anchor id="todo_1_todo000009"/>File <ref refid="mtk__uni__stg__grid__2d_8h" kindref="compound">mtk_uni_stg_grid_2d.h</ref>  </term></varlistentry>
<listitem><para>Create overloaded binding routines that read data from files. </para></listitem>
</variablelist>
</para>    </detaileddescription>
  </compounddef>
</doxygen>
