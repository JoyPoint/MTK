<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="mtk__dense__matrix_8cc" kind="file">
    <compoundname>mtk_dense_matrix.cc</compoundname>
    <includes local="no">cstdlib</includes>
    <includes local="no">cstring</includes>
    <includes local="no">cmath</includes>
    <includes local="no">iostream</includes>
    <includes local="no">iomanip</includes>
    <includes local="no">typeinfo</includes>
    <includes local="no">algorithm</includes>
    <includes refid="mtk__roots_8h" local="yes">mtk_roots.h</includes>
    <includes refid="mtk__dense__matrix_8h" local="yes">mtk_dense_matrix.h</includes>
    <includes refid="mtk__tools_8h" local="yes">mtk_tools.h</includes>
    <incdepgraph>
      <node id="629">
        <label>iomanip</label>
      </node>
      <node id="635">
        <label>mtk_matrix.h</label>
        <link refid="mtk__matrix_8h"/>
        <childnode refid="628" relation="include">
        </childnode>
        <childnode refid="632" relation="include">
        </childnode>
        <childnode refid="634" relation="include">
        </childnode>
      </node>
      <node id="624">
        <label>src/mtk_dense_matrix.cc</label>
        <link refid="mtk_dense_matrix.cc"/>
        <childnode refid="625" relation="include">
        </childnode>
        <childnode refid="626" relation="include">
        </childnode>
        <childnode refid="627" relation="include">
        </childnode>
        <childnode refid="628" relation="include">
        </childnode>
        <childnode refid="629" relation="include">
        </childnode>
        <childnode refid="630" relation="include">
        </childnode>
        <childnode refid="631" relation="include">
        </childnode>
        <childnode refid="632" relation="include">
        </childnode>
        <childnode refid="633" relation="include">
        </childnode>
        <childnode refid="636" relation="include">
        </childnode>
      </node>
      <node id="627">
        <label>cmath</label>
      </node>
      <node id="632">
        <label>mtk_roots.h</label>
        <link refid="mtk__roots_8h"/>
      </node>
      <node id="630">
        <label>typeinfo</label>
      </node>
      <node id="637">
        <label>ctime</label>
      </node>
      <node id="634">
        <label>mtk_enums.h</label>
        <link refid="mtk__enums_8h"/>
      </node>
      <node id="625">
        <label>cstdlib</label>
      </node>
      <node id="628">
        <label>iostream</label>
      </node>
      <node id="636">
        <label>mtk_tools.h</label>
        <link refid="mtk__tools_8h"/>
        <childnode refid="637" relation="include">
        </childnode>
      </node>
      <node id="633">
        <label>mtk_dense_matrix.h</label>
        <link refid="mtk__dense__matrix_8h"/>
        <childnode refid="628" relation="include">
        </childnode>
        <childnode refid="632" relation="include">
        </childnode>
        <childnode refid="634" relation="include">
        </childnode>
        <childnode refid="635" relation="include">
        </childnode>
      </node>
      <node id="631">
        <label>algorithm</label>
      </node>
      <node id="626">
        <label>cstring</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacemtk">mtk</innernamespace>
    <briefdescription>
<para>Implements a common dense matrix, using a 1D array. </para>    </briefdescription>
    <detaileddescription>
<para>For developing purposes, it is better to have a not-so-intrincated data structure implementing matrices. This is the purpose of this class: to be used for prototypes of new code for small test cases. In every other instance, this should be replaced by the most appropriate sparse matrix.</para><para><simplesect kind="author"><para>: Eduardo J. Sanchez (ejspeiro) - esanchez at mail dot sdsu dot edu </para></simplesect>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="13"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="14"><highlight class="comment">Copyright<sp/>(C)<sp/>2015,<sp/>Computational<sp/>Science<sp/>Research<sp/>Center,<sp/>San<sp/>Diego<sp/>State</highlight></codeline>
<codeline lineno="15"><highlight class="comment">University.<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"></highlight></codeline>
<codeline lineno="17"><highlight class="comment">Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without<sp/>modification,</highlight></codeline>
<codeline lineno="18"><highlight class="comment">are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="19"><highlight class="comment"></highlight></codeline>
<codeline lineno="20"><highlight class="comment">1.<sp/>Modifications<sp/>to<sp/>source<sp/>code<sp/>should<sp/>be<sp/>reported<sp/>to:<sp/>esanchez@mail.sdsu.edu</highlight></codeline>
<codeline lineno="21"><highlight class="comment">and<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>modified<sp/>files<sp/>should<sp/>be<sp/>reported<sp/>once<sp/>modifications<sp/>are</highlight></codeline>
<codeline lineno="22"><highlight class="comment">completed.<sp/>Documentation<sp/>related<sp/>to<sp/>said<sp/>modifications<sp/>should<sp/>be<sp/>included.</highlight></codeline>
<codeline lineno="23"><highlight class="comment"></highlight></codeline>
<codeline lineno="24"><highlight class="comment">2.<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>be<sp/>done<sp/>through<sp/>direct</highlight></codeline>
<codeline lineno="25"><highlight class="comment">downloads<sp/>from<sp/>the<sp/>project&apos;s<sp/>GitHub<sp/>page:<sp/>http://www.csrc.sdsu.edu/mtk</highlight></codeline>
<codeline lineno="26"><highlight class="comment"></highlight></codeline>
<codeline lineno="27"><highlight class="comment">3.<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright<sp/>notice,<sp/>this</highlight></codeline>
<codeline lineno="28"><highlight class="comment">list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="29"><highlight class="comment"></highlight></codeline>
<codeline lineno="30"><highlight class="comment">4.<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright<sp/>notice,</highlight></codeline>
<codeline lineno="31"><highlight class="comment">this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the<sp/>documentation<sp/>and/or</highlight></codeline>
<codeline lineno="32"><highlight class="comment">other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="33"><highlight class="comment"></highlight></codeline>
<codeline lineno="34"><highlight class="comment">5.<sp/>Usage<sp/>of<sp/>the<sp/>binary<sp/>form<sp/>on<sp/>proprietary<sp/>applications<sp/>shall<sp/>require<sp/>explicit</highlight></codeline>
<codeline lineno="35"><highlight class="comment">prior<sp/>written<sp/>permission<sp/>from<sp/>the<sp/>the<sp/>copyright<sp/>holders.</highlight></codeline>
<codeline lineno="36"><highlight class="comment"></highlight></codeline>
<codeline lineno="37"><highlight class="comment">6.<sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>the<sp/>copyright<sp/>holder<sp/>nor<sp/>the<sp/>names<sp/>of<sp/>its<sp/>contributors</highlight></codeline>
<codeline lineno="38"><highlight class="comment">may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived<sp/>from<sp/>this<sp/>software<sp/>without</highlight></codeline>
<codeline lineno="39"><highlight class="comment">specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline lineno="40"><highlight class="comment"></highlight></codeline>
<codeline lineno="41"><highlight class="comment">The<sp/>copyright<sp/>holders<sp/>provide<sp/>no<sp/>reassurances<sp/>that<sp/>the<sp/>source<sp/>code<sp/>provided<sp/>does</highlight></codeline>
<codeline lineno="42"><highlight class="comment">not<sp/>infringe<sp/>any<sp/>patent,<sp/>copyright,<sp/>or<sp/>any<sp/>other<sp/>intellectual<sp/>property<sp/>rights<sp/>of</highlight></codeline>
<codeline lineno="43"><highlight class="comment">third<sp/>parties.<sp/>The<sp/>copyright<sp/>holders<sp/>disclaim<sp/>any<sp/>liability<sp/>to<sp/>any<sp/>recipient<sp/>for</highlight></codeline>
<codeline lineno="44"><highlight class="comment">claims<sp/>brought<sp/>against<sp/>recipient<sp/>by<sp/>any<sp/>third<sp/>party<sp/>for<sp/>infringement<sp/>of<sp/>that</highlight></codeline>
<codeline lineno="45"><highlight class="comment">parties<sp/>intellectual<sp/>property<sp/>rights.</highlight></codeline>
<codeline lineno="46"><highlight class="comment"></highlight></codeline>
<codeline lineno="47"><highlight class="comment">THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS<sp/>&quot;AS<sp/>IS&quot;<sp/>AND</highlight></codeline>
<codeline lineno="48"><highlight class="comment">ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>THE<sp/>IMPLIED</highlight></codeline>
<codeline lineno="49"><highlight class="comment">WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>ARE</highlight></codeline>
<codeline lineno="50"><highlight class="comment">DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT<sp/>HOLDER<sp/>OR<sp/>CONTRIBUTORS<sp/>BE<sp/>LIABLE<sp/>FOR</highlight></codeline>
<codeline lineno="51"><highlight class="comment">ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES</highlight></codeline>
<codeline lineno="52"><highlight class="comment">(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;</highlight></codeline>
<codeline lineno="53"><highlight class="comment">LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON</highlight></codeline>
<codeline lineno="54"><highlight class="comment">ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT</highlight></codeline>
<codeline lineno="55"><highlight class="comment">(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS</highlight></codeline>
<codeline lineno="56"><highlight class="comment">SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="57"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdlib&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstring&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cmath&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iomanip&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;typeinfo&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="mtk__roots_8h" kindref="compound">mtk_roots.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="mtk__dense__matrix_8h" kindref="compound">mtk_dense_matrix.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="mtk__tools_8h" kindref="compound">mtk_tools.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">mtk<sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75" refid="namespacemtk_1ad3bcf52cda59ddb5fc7b4bdce76c46dc" refkind="member"><highlight class="normal">std::ostream&amp;<sp/><ref refid="namespacemtk_1ad3bcf52cda59ddb5fc7b4bdce76c46dc" kindref="member">operator &lt;&lt;</ref>(std::ostream<sp/>&amp;stream,<sp/><ref refid="classmtk_1_1DenseMatrix" kindref="compound">mtk::DenseMatrix</ref><sp/>&amp;in)<sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mm{in.<ref refid="classmtk_1_1DenseMatrix_1a481c8d09af685a5ba67acefdcaa810cc" kindref="member">matrix_properties_</ref>.<ref refid="classmtk_1_1Matrix_1a69feb30fc0018faee65fe9f7cb43e0ed" kindref="member">num_rows</ref>()};<sp/><sp/></highlight><highlight class="comment">//<sp/>Auxiliary.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nn{in.<ref refid="classmtk_1_1DenseMatrix_1a481c8d09af685a5ba67acefdcaa810cc" kindref="member">matrix_properties_</ref>.<ref refid="classmtk_1_1Matrix_1a1e52243fa290de6ee4bcc48cd1776a9a" kindref="member">num_cols</ref>()};<sp/><sp/></highlight><highlight class="comment">//<sp/>Auxiliary.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(in.<ref refid="classmtk_1_1DenseMatrix_1a481c8d09af685a5ba67acefdcaa810cc" kindref="member">matrix_properties_</ref>.<ref refid="classmtk_1_1Matrix_1af675e480c7b94f194aadad316e53b002" kindref="member">ordering</ref>()<sp/>==<sp/><ref refid="namespacemtk_1ga622801bd9f912d0f976c3e383f5f581ca7c11989c132253fb76b8f6b1314f7e13" kindref="member">mtk::COL_MAJOR</ref>)<sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>std::swap(mm,<sp/>nn);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ii<sp/>=<sp/>0;<sp/>ii<sp/>&lt;<sp/>mm;<sp/>ii++)<sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>jj<sp/>=<sp/>0;<sp/>jj<sp/>&lt;<sp/>nn;<sp/>jj++)<sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__c01-roots_1gac080bbbf5cbb5502c9f00405f894857d" kindref="member">mtk::Real</ref><sp/>value<sp/>=<sp/>in.<ref refid="classmtk_1_1DenseMatrix_1a7893e4e5c8d2e2de32b156177e78cb6f" kindref="member">data_</ref>[ii*nn<sp/>+<sp/>jj];</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stream<sp/>&lt;&lt;<sp/>std::setw(13)<sp/>&lt;&lt;<sp/>value;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>stream<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(in.<ref refid="classmtk_1_1DenseMatrix_1a481c8d09af685a5ba67acefdcaa810cc" kindref="member">matrix_properties_</ref>.<ref refid="classmtk_1_1Matrix_1af675e480c7b94f194aadad316e53b002" kindref="member">ordering</ref>()<sp/>==<sp/><ref refid="namespacemtk_1ga622801bd9f912d0f976c3e383f5f581ca7c11989c132253fb76b8f6b1314f7e13" kindref="member">mtk::COL_MAJOR</ref>)<sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>std::swap(mm,<sp/>nn);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stream;</highlight></codeline>
<codeline lineno="94"><highlight class="normal">}</highlight></codeline>
<codeline lineno="95"><highlight class="normal">}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97" refid="classmtk_1_1DenseMatrix_1a0d27dc7c4d2c49f391017e392345ced0" refkind="member"><highlight class="normal"><ref refid="classmtk_1_1DenseMatrix" kindref="compound">mtk::DenseMatrix</ref>&amp;<sp/><ref refid="classmtk_1_1DenseMatrix_1a0d27dc7c4d2c49f391017e392345ced0" kindref="member">mtk::DenseMatrix::operator =</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classmtk_1_1DenseMatrix" kindref="compound">mtk::DenseMatrix</ref><sp/>&amp;in)<sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>==<sp/>&amp;in)<sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><ref refid="classmtk_1_1DenseMatrix_1a481c8d09af685a5ba67acefdcaa810cc" kindref="member">matrix_properties_</ref>.<ref refid="classmtk_1_1Matrix_1ac0edd0ee07853d0ef6dea9b08d15e132" kindref="member">set_storage</ref>(in.<ref refid="classmtk_1_1DenseMatrix_1a481c8d09af685a5ba67acefdcaa810cc" kindref="member">matrix_properties_</ref>.<ref refid="classmtk_1_1Matrix_1a21893fc643eebadd9757c8995cf44dd3" kindref="member">storage</ref>());</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><ref refid="classmtk_1_1DenseMatrix_1a481c8d09af685a5ba67acefdcaa810cc" kindref="member">matrix_properties_</ref>.<ref refid="classmtk_1_1Matrix_1aa390fa8883e58e8f1df9416e5b5b7a83" kindref="member">set_ordering</ref>(in.<ref refid="classmtk_1_1DenseMatrix_1a481c8d09af685a5ba67acefdcaa810cc" kindref="member">matrix_properties_</ref>.<ref refid="classmtk_1_1Matrix_1af675e480c7b94f194aadad316e53b002" kindref="member">ordering</ref>());</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>aux<sp/>=<sp/>in.<ref refid="classmtk_1_1DenseMatrix_1a481c8d09af685a5ba67acefdcaa810cc" kindref="member">matrix_properties_</ref>.<ref refid="classmtk_1_1Matrix_1a69feb30fc0018faee65fe9f7cb43e0ed" kindref="member">num_rows</ref>();</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><ref refid="classmtk_1_1DenseMatrix_1a481c8d09af685a5ba67acefdcaa810cc" kindref="member">matrix_properties_</ref>.<ref refid="classmtk_1_1Matrix_1a242fedf2da10a3e5c14f63c2bc60beae" kindref="member">set_num_rows</ref>(aux);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/>aux<sp/>=<sp/>in.<ref refid="classmtk_1_1DenseMatrix_1abb5e4db5688743c6f9fd9ec6e38ed4ca" kindref="member">matrix_properties</ref>().<ref refid="classmtk_1_1Matrix_1a1e52243fa290de6ee4bcc48cd1776a9a" kindref="member">num_cols</ref>();</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><ref refid="classmtk_1_1DenseMatrix_1a481c8d09af685a5ba67acefdcaa810cc" kindref="member">matrix_properties_</ref>.<ref refid="classmtk_1_1Matrix_1a312883d34f2e0daf5db7432ee2c4ed51" kindref="member">set_num_cols</ref>(aux);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/>aux<sp/>=<sp/>in.<ref refid="classmtk_1_1DenseMatrix_1abb5e4db5688743c6f9fd9ec6e38ed4ca" kindref="member">matrix_properties</ref>().<ref refid="classmtk_1_1Matrix_1a78e1f8449a21db53750e083c6802a993" kindref="member">num_zero</ref>();</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><ref refid="classmtk_1_1DenseMatrix_1a481c8d09af685a5ba67acefdcaa810cc" kindref="member">matrix_properties_</ref>.<ref refid="classmtk_1_1Matrix_1ae529100c5c280088e9acf8e8f7994f73" kindref="member">set_num_zero</ref>(aux);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/>aux<sp/>=<sp/>in.<ref refid="classmtk_1_1DenseMatrix_1abb5e4db5688743c6f9fd9ec6e38ed4ca" kindref="member">matrix_properties</ref>().<ref refid="classmtk_1_1Matrix_1a5bf58512ee91d6ab80eb94541072a9cf" kindref="member">num_null</ref>();</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><ref refid="classmtk_1_1DenseMatrix_1a481c8d09af685a5ba67acefdcaa810cc" kindref="member">matrix_properties_</ref>.<ref refid="classmtk_1_1Matrix_1a66c2c1c127f4efefc4a407e9552e928d" kindref="member">set_num_null</ref>(aux);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="classmtk_1_1DenseMatrix_1a17d8d3b9cc0926044b6972dd190a5c21" kindref="member">num_rows</ref><sp/>=<sp/><ref refid="classmtk_1_1DenseMatrix_1a481c8d09af685a5ba67acefdcaa810cc" kindref="member">matrix_properties_</ref>.<ref refid="classmtk_1_1Matrix_1a69feb30fc0018faee65fe9f7cb43e0ed" kindref="member">num_rows</ref>();</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="classmtk_1_1DenseMatrix_1af6f78373aaf2136f0c78974d7c8de0a8" kindref="member">num_cols</ref><sp/>=<sp/><ref refid="classmtk_1_1DenseMatrix_1a481c8d09af685a5ba67acefdcaa810cc" kindref="member">matrix_properties_</ref>.<ref refid="classmtk_1_1Matrix_1a1e52243fa290de6ee4bcc48cd1776a9a" kindref="member">num_cols</ref>();</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/><ref refid="classmtk_1_1DenseMatrix_1a7893e4e5c8d2e2de32b156177e78cb6f" kindref="member">data_</ref>;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmtk_1_1DenseMatrix_1a7893e4e5c8d2e2de32b156177e78cb6f" kindref="member">data_</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="group__c01-roots_1gac080bbbf5cbb5502c9f00405f894857d" kindref="member">mtk::Real</ref>[<ref refid="classmtk_1_1DenseMatrix_1a17d8d3b9cc0926044b6972dd190a5c21" kindref="member">num_rows</ref>*<ref refid="classmtk_1_1DenseMatrix_1af6f78373aaf2136f0c78974d7c8de0a8" kindref="member">num_cols</ref>];</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(std::bad_alloc<sp/>&amp;memory_allocation_exception)<sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Memory<sp/>allocation<sp/>exception<sp/>on<sp/>line<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>__LINE__<sp/>-<sp/>3<sp/>&lt;&lt;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::endl;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/>memory_allocation_exception.what()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/>memset(<ref refid="classmtk_1_1DenseMatrix_1a7893e4e5c8d2e2de32b156177e78cb6f" kindref="member">data_</ref>,<sp/><ref refid="group__c01-roots_1ga59a451a5fae30d59649bcda274fea271" kindref="member">mtk::kZero</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="classmtk_1_1DenseMatrix_1a7893e4e5c8d2e2de32b156177e78cb6f" kindref="member">data_</ref>[0])*<ref refid="classmtk_1_1DenseMatrix_1a17d8d3b9cc0926044b6972dd190a5c21" kindref="member">num_rows</ref>*<ref refid="classmtk_1_1DenseMatrix_1af6f78373aaf2136f0c78974d7c8de0a8" kindref="member">num_cols</ref>);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/>std::copy(in.<ref refid="classmtk_1_1DenseMatrix_1a7893e4e5c8d2e2de32b156177e78cb6f" kindref="member">data_</ref>,<sp/>in.<ref refid="classmtk_1_1DenseMatrix_1a7893e4e5c8d2e2de32b156177e78cb6f" kindref="member">data_</ref><sp/>+<sp/><ref refid="classmtk_1_1DenseMatrix_1a17d8d3b9cc0926044b6972dd190a5c21" kindref="member">num_rows</ref>*num_cols,<sp/><ref refid="classmtk_1_1DenseMatrix_1a7893e4e5c8d2e2de32b156177e78cb6f" kindref="member">data_</ref>);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="136"><highlight class="normal">}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138" refid="classmtk_1_1DenseMatrix_1a0c75ee704707983f935b02835eab0933" refkind="member"><highlight class="normal"><ref refid="classmtk_1_1DenseMatrix_1a0c75ee704707983f935b02835eab0933" kindref="member">mtk::DenseMatrix::DenseMatrix</ref>():<sp/>data_(nullptr)<sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><ref refid="classmtk_1_1DenseMatrix_1a481c8d09af685a5ba67acefdcaa810cc" kindref="member">matrix_properties_</ref>.<ref refid="classmtk_1_1Matrix_1ac0edd0ee07853d0ef6dea9b08d15e132" kindref="member">set_storage</ref>(<ref refid="namespacemtk_1ga25b67ec6a2afeee69f9bb196a9c66619a00a806d43a7d74e9ccca47a2134e9c87" kindref="member">mtk::DENSE</ref>);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><ref refid="classmtk_1_1DenseMatrix_1a481c8d09af685a5ba67acefdcaa810cc" kindref="member">matrix_properties_</ref>.<ref refid="classmtk_1_1Matrix_1aa390fa8883e58e8f1df9416e5b5b7a83" kindref="member">set_ordering</ref>(<ref refid="namespacemtk_1ga622801bd9f912d0f976c3e383f5f581cabc55178ac16eb1ce89b5f3ab915a91f3" kindref="member">mtk::ROW_MAJOR</ref>);</highlight></codeline>
<codeline lineno="142"><highlight class="normal">}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144" refid="classmtk_1_1DenseMatrix_1a90102d605a668bf7ecf0d766cc4c10db" refkind="member"><highlight class="normal"><ref refid="classmtk_1_1DenseMatrix_1a0c75ee704707983f935b02835eab0933" kindref="member">mtk::DenseMatrix::DenseMatrix</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classmtk_1_1DenseMatrix" kindref="compound">mtk::DenseMatrix</ref><sp/>&amp;in)<sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/>matrix_properties_.set_storage(in.<ref refid="classmtk_1_1DenseMatrix_1a481c8d09af685a5ba67acefdcaa810cc" kindref="member">matrix_properties_</ref>.<ref refid="classmtk_1_1Matrix_1a21893fc643eebadd9757c8995cf44dd3" kindref="member">storage</ref>());</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/>matrix_properties_.set_ordering(in.<ref refid="classmtk_1_1DenseMatrix_1a481c8d09af685a5ba67acefdcaa810cc" kindref="member">matrix_properties_</ref>.<ref refid="classmtk_1_1Matrix_1af675e480c7b94f194aadad316e53b002" kindref="member">ordering</ref>());</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>aux<sp/>=<sp/>in.<ref refid="classmtk_1_1DenseMatrix_1a481c8d09af685a5ba67acefdcaa810cc" kindref="member">matrix_properties_</ref>.<ref refid="classmtk_1_1Matrix_1a69feb30fc0018faee65fe9f7cb43e0ed" kindref="member">num_rows</ref>();</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/>matrix_properties_.set_num_rows(aux);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/>aux<sp/>=<sp/>in.<ref refid="classmtk_1_1DenseMatrix_1abb5e4db5688743c6f9fd9ec6e38ed4ca" kindref="member">matrix_properties</ref>().<ref refid="classmtk_1_1Matrix_1a1e52243fa290de6ee4bcc48cd1776a9a" kindref="member">num_cols</ref>();</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/>matrix_properties_.set_num_cols(aux);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/>aux<sp/>=<sp/>in.<ref refid="classmtk_1_1DenseMatrix_1abb5e4db5688743c6f9fd9ec6e38ed4ca" kindref="member">matrix_properties</ref>().<ref refid="classmtk_1_1Matrix_1a78e1f8449a21db53750e083c6802a993" kindref="member">num_zero</ref>();</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/>matrix_properties_.set_num_zero(aux);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/>aux<sp/>=<sp/>in.<ref refid="classmtk_1_1DenseMatrix_1abb5e4db5688743c6f9fd9ec6e38ed4ca" kindref="member">matrix_properties</ref>().<ref refid="classmtk_1_1Matrix_1a5bf58512ee91d6ab80eb94541072a9cf" kindref="member">num_null</ref>();</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/>matrix_properties_.set_num_null(aux);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>num_rows<sp/>=<sp/>in.<ref refid="classmtk_1_1DenseMatrix_1a481c8d09af685a5ba67acefdcaa810cc" kindref="member">matrix_properties_</ref>.<ref refid="classmtk_1_1Matrix_1a69feb30fc0018faee65fe9f7cb43e0ed" kindref="member">num_rows</ref>();</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>num_cols<sp/>=<sp/>in.<ref refid="classmtk_1_1DenseMatrix_1a481c8d09af685a5ba67acefdcaa810cc" kindref="member">matrix_properties_</ref>.<ref refid="classmtk_1_1Matrix_1a1e52243fa290de6ee4bcc48cd1776a9a" kindref="member">num_cols</ref>();</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>data_<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="group__c01-roots_1gac080bbbf5cbb5502c9f00405f894857d" kindref="member">mtk::Real</ref>[num_rows*num_cols];</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(std::bad_alloc<sp/>&amp;memory_allocation_exception)<sp/>{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Memory<sp/>allocation<sp/>exception<sp/>on<sp/>line<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>__LINE__<sp/>-<sp/>3<sp/>&lt;&lt;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::endl;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/>memory_allocation_exception.what()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/>memset(data_,<sp/><ref refid="group__c01-roots_1ga59a451a5fae30d59649bcda274fea271" kindref="member">mtk::kZero</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(data_[0])*num_rows*num_cols);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/>std::copy(in.<ref refid="classmtk_1_1DenseMatrix_1a7893e4e5c8d2e2de32b156177e78cb6f" kindref="member">data_</ref>,in.<ref refid="classmtk_1_1DenseMatrix_1a7893e4e5c8d2e2de32b156177e78cb6f" kindref="member">data_</ref><sp/>+<sp/>num_rows*num_cols,data_);</highlight></codeline>
<codeline lineno="175"><highlight class="normal">}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177" refid="classmtk_1_1DenseMatrix_1abe26c623467fc1b293cf4f22a3a47cc8" refkind="member"><highlight class="normal"><ref refid="classmtk_1_1DenseMatrix_1a0c75ee704707983f935b02835eab0933" kindref="member">mtk::DenseMatrix::DenseMatrix</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;num_rows,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;num_cols)<sp/>{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>MTK_DEBUG_LEVEL<sp/>&gt;<sp/>0</highlight></codeline>
<codeline lineno="180"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><ref refid="classmtk_1_1Tools_1acbcff02946d3db565d53ecbcc459f0b5" kindref="member">mtk::Tools::Prevent</ref>(num_rows<sp/>&lt;<sp/>1,<sp/>__FILE__,<sp/>__LINE__,<sp/>__func__);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><ref refid="classmtk_1_1Tools_1acbcff02946d3db565d53ecbcc459f0b5" kindref="member">mtk::Tools::Prevent</ref>(num_cols<sp/>&lt;<sp/>1,<sp/>__FILE__,<sp/>__LINE__,<sp/>__func__);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="183"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/>matrix_properties_.set_storage(<ref refid="namespacemtk_1ga25b67ec6a2afeee69f9bb196a9c66619a00a806d43a7d74e9ccca47a2134e9c87" kindref="member">mtk::DENSE</ref>);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/>matrix_properties_.set_ordering(<ref refid="namespacemtk_1ga622801bd9f912d0f976c3e383f5f581cabc55178ac16eb1ce89b5f3ab915a91f3" kindref="member">mtk::ROW_MAJOR</ref>);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/>matrix_properties_.set_num_rows(num_rows);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/>matrix_properties_.set_num_cols(num_cols);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>data_<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="group__c01-roots_1gac080bbbf5cbb5502c9f00405f894857d" kindref="member">mtk::Real</ref>[num_rows*num_cols];</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(std::bad_alloc<sp/>&amp;memory_allocation_exception)<sp/>{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Memory<sp/>allocation<sp/>exception<sp/>on<sp/>line<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>__LINE__<sp/>-<sp/>3<sp/>&lt;&lt;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::endl;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/>memory_allocation_exception.what()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/>memset(data_,<sp/><ref refid="group__c01-roots_1ga59a451a5fae30d59649bcda274fea271" kindref="member">mtk::kZero</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(data_[0])*num_rows*num_cols);</highlight></codeline>
<codeline lineno="197"><highlight class="normal">}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199" refid="classmtk_1_1DenseMatrix_1a4ef0dec1b5558fcf00719bfac059ec68" refkind="member"><highlight class="normal"><ref refid="classmtk_1_1DenseMatrix_1a0c75ee704707983f935b02835eab0933" kindref="member">mtk::DenseMatrix::DenseMatrix</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;rank,</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>&amp;padded,</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>&amp;transpose)<sp/>{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>MTK_DEBUG_LEVEL<sp/>&gt;<sp/>0</highlight></codeline>
<codeline lineno="204"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><ref refid="classmtk_1_1Tools_1acbcff02946d3db565d53ecbcc459f0b5" kindref="member">mtk::Tools::Prevent</ref>(rank<sp/>&lt;<sp/>1,<sp/>__FILE__,<sp/>__LINE__,<sp/>__func__);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="206"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>aux{};<sp/><sp/></highlight><highlight class="comment">//<sp/>Used<sp/>to<sp/>control<sp/>the<sp/>padding.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(padded)<sp/>{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>aux<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/>matrix_properties_.set_storage(<ref refid="namespacemtk_1ga25b67ec6a2afeee69f9bb196a9c66619a00a806d43a7d74e9ccca47a2134e9c87" kindref="member">mtk::DENSE</ref>);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/>matrix_properties_.set_ordering(<ref refid="namespacemtk_1ga622801bd9f912d0f976c3e383f5f581cabc55178ac16eb1ce89b5f3ab915a91f3" kindref="member">mtk::ROW_MAJOR</ref>);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/>matrix_properties_.set_num_rows(aux<sp/>+<sp/>rank<sp/>+<sp/>aux);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/>matrix_properties_.set_num_cols(rank);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>data_<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="group__c01-roots_1gac080bbbf5cbb5502c9f00405f894857d" kindref="member">mtk::Real</ref>[matrix_properties_.num_values()];</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(std::bad_alloc<sp/>&amp;memory_allocation_exception)<sp/>{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Memory<sp/>allocation<sp/>exception<sp/>on<sp/>line<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>__LINE__<sp/>-<sp/>3<sp/>&lt;&lt;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::endl;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/>memory_allocation_exception.what()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/>memset(data_,</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__c01-roots_1ga59a451a5fae30d59649bcda274fea271" kindref="member">mtk::kZero</ref>,</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(data_[0])*(matrix_properties_.num_values()));</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ii<sp/>=0<sp/>;<sp/>ii<sp/>&lt;<sp/>matrix_properties_.num_rows();<sp/>++ii)<sp/>{</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>jj<sp/>=<sp/>0;<sp/>jj<sp/>&lt;<sp/>matrix_properties_.num_cols();<sp/>++jj)<sp/>{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>data_[ii*matrix_properties_.num_cols()<sp/>+<sp/>jj]<sp/>=</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(ii<sp/>==<sp/>jj<sp/>+<sp/>aux)?<sp/><ref refid="group__c01-roots_1ga26407c24d43b6b95480943340d285c71" kindref="member">mtk::kOne</ref>:<sp/><ref refid="group__c01-roots_1ga59a451a5fae30d59649bcda274fea271" kindref="member">mtk::kZero</ref>;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="235"><highlight class="normal">}</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237" refid="classmtk_1_1DenseMatrix_1a4a85c10adb8a1d695c992eb5fd3e3dac" refkind="member"><highlight class="normal"><ref refid="classmtk_1_1DenseMatrix_1a0c75ee704707983f935b02835eab0933" kindref="member">mtk::DenseMatrix::DenseMatrix</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group__c01-roots_1gac080bbbf5cbb5502c9f00405f894857d" kindref="member">mtk::Real</ref><sp/>*gen,</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;gen_length,</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;pro_length,</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>&amp;transpose)<sp/>{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>MTK_DEBUG_LEVEL<sp/>&gt;<sp/>0</highlight></codeline>
<codeline lineno="243"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><ref refid="classmtk_1_1Tools_1acbcff02946d3db565d53ecbcc459f0b5" kindref="member">mtk::Tools::Prevent</ref>(gen<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>__FILE__,<sp/>__LINE__,<sp/>__func__);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><ref refid="classmtk_1_1Tools_1acbcff02946d3db565d53ecbcc459f0b5" kindref="member">mtk::Tools::Prevent</ref>(gen_length<sp/>&lt;<sp/>1,<sp/>__FILE__,<sp/>__LINE__,<sp/>__func__);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><ref refid="classmtk_1_1Tools_1acbcff02946d3db565d53ecbcc459f0b5" kindref="member">mtk::Tools::Prevent</ref>(pro_length<sp/>&lt;<sp/>1,<sp/>__FILE__,<sp/>__LINE__,<sp/>__func__);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="247"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/>matrix_properties_.set_storage(<ref refid="namespacemtk_1ga25b67ec6a2afeee69f9bb196a9c66619a00a806d43a7d74e9ccca47a2134e9c87" kindref="member">mtk::DENSE</ref>);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/>matrix_properties_.set_ordering(<ref refid="namespacemtk_1ga622801bd9f912d0f976c3e383f5f581cabc55178ac16eb1ce89b5f3ab915a91f3" kindref="member">mtk::ROW_MAJOR</ref>);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!transpose)<sp/>{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>matrix_properties_.set_num_rows(gen_length);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>matrix_properties_.set_num_cols(pro_length);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>matrix_properties_.set_num_rows(pro_length);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>matrix_properties_.set_num_cols(gen_length);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rr<sp/>=<sp/>matrix_properties_.num_rows();<sp/></highlight><highlight class="comment">//<sp/>Used<sp/>to<sp/>construct<sp/>this<sp/>matrix.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cc<sp/>=<sp/>matrix_properties_.num_cols();<sp/></highlight><highlight class="comment">//<sp/>Used<sp/>to<sp/>construct<sp/>this<sp/>matrix.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>data_<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="group__c01-roots_1gac080bbbf5cbb5502c9f00405f894857d" kindref="member">mtk::Real</ref>[rr*cc];</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(std::bad_alloc<sp/>&amp;memory_allocation_exception)<sp/>{</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Memory<sp/>allocation<sp/>exception<sp/>on<sp/>line<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>__LINE__<sp/>-<sp/>3<sp/>&lt;&lt;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::endl;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/>memory_allocation_exception.what()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/>memset(data_,<sp/><ref refid="group__c01-roots_1ga59a451a5fae30d59649bcda274fea271" kindref="member">mtk::kZero</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(data_[0])*rr*cc);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!transpose)<sp/>{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ii<sp/>=<sp/>0;<sp/>ii<sp/>&lt;<sp/>rr;<sp/>ii++)<sp/>{</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>jj<sp/>=<sp/>0;<sp/>jj<sp/>&lt;<sp/>cc;<sp/>jj++)<sp/>{</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data_[ii*cc<sp/>+<sp/>jj]<sp/>=<sp/>pow(gen[ii],<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)<sp/>jj);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ii<sp/>=<sp/>0;<sp/>ii<sp/>&lt;<sp/>rr;<sp/>ii++)<sp/>{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>jj<sp/>=<sp/>0;<sp/>jj<sp/>&lt;<sp/>cc;<sp/>jj++)<sp/>{</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data_[ii*cc<sp/>+<sp/>jj]<sp/>=<sp/>pow(gen[jj],<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)<sp/>ii);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="283"><highlight class="normal">}</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285" refid="classmtk_1_1DenseMatrix_1a8d4a0df33bd4e4edf5d2fe5539885b85" refkind="member"><highlight class="normal"><ref refid="classmtk_1_1DenseMatrix_1a8d4a0df33bd4e4edf5d2fe5539885b85" kindref="member">mtk::DenseMatrix::~DenseMatrix</ref>()<sp/>{</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>data_;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/>data_<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="289"><highlight class="normal">}</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291" refid="classmtk_1_1DenseMatrix_1abb5e4db5688743c6f9fd9ec6e38ed4ca" refkind="member"><highlight class="normal"><ref refid="classmtk_1_1Matrix" kindref="compound">mtk::Matrix</ref><sp/><ref refid="classmtk_1_1DenseMatrix_1abb5e4db5688743c6f9fd9ec6e38ed4ca" kindref="member">mtk::DenseMatrix::matrix_properties</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>matrix_properties_;</highlight></codeline>
<codeline lineno="294"><highlight class="normal">}</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296" refid="classmtk_1_1DenseMatrix_1aacae136ae446cad8f0d81476e83efb39" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmtk_1_1DenseMatrix_1aacae136ae446cad8f0d81476e83efb39" kindref="member">mtk::DenseMatrix::SetOrdering</ref>(<ref refid="group__c02-enums_1ga622801bd9f912d0f976c3e383f5f581c" kindref="member">mtk::MatrixOrdering</ref><sp/>oo)<sp/>{</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>MTK_DEBUG_LEVEL<sp/>&gt;<sp/>0</highlight></codeline>
<codeline lineno="299"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><ref refid="classmtk_1_1Tools_1acbcff02946d3db565d53ecbcc459f0b5" kindref="member">mtk::Tools::Prevent</ref>(!(oo<sp/>==<sp/><ref refid="namespacemtk_1ga622801bd9f912d0f976c3e383f5f581cabc55178ac16eb1ce89b5f3ab915a91f3" kindref="member">mtk::ROW_MAJOR</ref><sp/>||<sp/>oo<sp/>==<sp/><ref refid="namespacemtk_1ga622801bd9f912d0f976c3e383f5f581ca7c11989c132253fb76b8f6b1314f7e13" kindref="member">mtk::COL_MAJOR</ref>),</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__FILE__,<sp/>__LINE__,<sp/>__func__);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="302"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/>matrix_properties_.set_ordering(oo);</highlight></codeline>
<codeline lineno="304"><highlight class="normal">}</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306" refid="classmtk_1_1DenseMatrix_1a17d8d3b9cc0926044b6972dd190a5c21" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classmtk_1_1DenseMatrix_1a17d8d3b9cc0926044b6972dd190a5c21" kindref="member">mtk::DenseMatrix::num_rows</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>matrix_properties_.num_rows();</highlight></codeline>
<codeline lineno="309"><highlight class="normal">}</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311" refid="classmtk_1_1DenseMatrix_1af6f78373aaf2136f0c78974d7c8de0a8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classmtk_1_1DenseMatrix_1af6f78373aaf2136f0c78974d7c8de0a8" kindref="member">mtk::DenseMatrix::num_cols</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>matrix_properties_.num_cols();</highlight></codeline>
<codeline lineno="314"><highlight class="normal">}</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316" refid="classmtk_1_1DenseMatrix_1a16b3ff56feb2658b9fc7147d1de4d8e7" refkind="member"><highlight class="normal"><ref refid="group__c01-roots_1gac080bbbf5cbb5502c9f00405f894857d" kindref="member">mtk::Real</ref>*<sp/><ref refid="classmtk_1_1DenseMatrix_1a16b3ff56feb2658b9fc7147d1de4d8e7" kindref="member">mtk::DenseMatrix::data</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data_;</highlight></codeline>
<codeline lineno="319"><highlight class="normal">}</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321" refid="classmtk_1_1DenseMatrix_1a87fb785713c04b13767947cc3325ce7c" refkind="member"><highlight class="normal"><ref refid="group__c01-roots_1gac080bbbf5cbb5502c9f00405f894857d" kindref="member">mtk::Real</ref><sp/><ref refid="classmtk_1_1DenseMatrix_1a87fb785713c04b13767947cc3325ce7c" kindref="member">mtk::DenseMatrix::GetValue</ref>(</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;rr,</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;cc)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>MTK_DEBUG_LEVEL<sp/>&gt;<sp/>0</highlight></codeline>
<codeline lineno="326"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><ref refid="classmtk_1_1Tools_1acbcff02946d3db565d53ecbcc459f0b5" kindref="member">mtk::Tools::Prevent</ref>(rr<sp/>&lt;<sp/>0,<sp/>__FILE__,<sp/>__LINE__,<sp/>__func__);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><ref refid="classmtk_1_1Tools_1acbcff02946d3db565d53ecbcc459f0b5" kindref="member">mtk::Tools::Prevent</ref>(cc<sp/>&lt;<sp/>0,<sp/>__FILE__,<sp/>__LINE__,<sp/>__func__);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="329"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data_[rr*matrix_properties_.num_cols()<sp/>+<sp/>cc];</highlight></codeline>
<codeline lineno="331"><highlight class="normal">}</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333" refid="classmtk_1_1DenseMatrix_1ae0f873a6d3a734da467cafb817da64ae" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><ref refid="classmtk_1_1DenseMatrix_1ae0f873a6d3a734da467cafb817da64ae" kindref="member">mtk::DenseMatrix::SetValue</ref>(</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;rr,</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;cc,</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group__c01-roots_1gac080bbbf5cbb5502c9f00405f894857d" kindref="member">mtk::Real</ref><sp/>&amp;val)<sp/>{</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>MTK_DEBUG_LEVEL<sp/>&gt;<sp/>0</highlight></codeline>
<codeline lineno="339"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><ref refid="classmtk_1_1Tools_1acbcff02946d3db565d53ecbcc459f0b5" kindref="member">mtk::Tools::Prevent</ref>(rr<sp/>&lt;<sp/>0,<sp/>__FILE__,<sp/>__LINE__,<sp/>__func__);</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><ref refid="classmtk_1_1Tools_1acbcff02946d3db565d53ecbcc459f0b5" kindref="member">mtk::Tools::Prevent</ref>(cc<sp/>&lt;<sp/>0,<sp/>__FILE__,<sp/>__LINE__,<sp/>__func__);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="342"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/>data_[rr*matrix_properties_.num_cols()<sp/>+<sp/>cc]<sp/>=<sp/>val;</highlight></codeline>
<codeline lineno="344"><highlight class="normal">}</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346" refid="classmtk_1_1DenseMatrix_1a71d9c07ca66e88d97d1fd5012f43138b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmtk_1_1DenseMatrix_1a71d9c07ca66e88d97d1fd5012f43138b" kindref="member">mtk::DenseMatrix::Transpose</ref>()<sp/>{</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><ref refid="group__c01-roots_1gac080bbbf5cbb5502c9f00405f894857d" kindref="member">mtk::Real</ref><sp/>*data_transposed{};<sp/></highlight><highlight class="comment">//<sp/>Buffer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rr<sp/>=<sp/>matrix_properties_.num_rows();<sp/></highlight><highlight class="comment">//<sp/>Used<sp/>to<sp/>construct<sp/>this<sp/>matrix.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cc<sp/>=<sp/>matrix_properties_.num_cols();<sp/></highlight><highlight class="comment">//<sp/>Used<sp/>to<sp/>construct<sp/>this<sp/>matrix.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>data_transposed<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="group__c01-roots_1gac080bbbf5cbb5502c9f00405f894857d" kindref="member">mtk::Real</ref>[rr*cc];</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(std::bad_alloc<sp/>&amp;memory_allocation_exception)<sp/>{</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Memory<sp/>allocation<sp/>exception<sp/>on<sp/>line<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>__LINE__<sp/>-<sp/>3<sp/>&lt;&lt;</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::endl;</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/>memory_allocation_exception.what()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/>memset(data_transposed,</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__c01-roots_1ga59a451a5fae30d59649bcda274fea271" kindref="member">mtk::kZero</ref>,</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(data_transposed[0])*rr*cc);</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Assign<sp/>the<sp/>values<sp/>to<sp/>their<sp/>transposed<sp/>position.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ii<sp/>=<sp/>0;<sp/>ii<sp/>&lt;<sp/>rr;<sp/>++ii)<sp/>{</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>jj<sp/>=<sp/>0;<sp/>jj<sp/>&lt;<sp/>cc;<sp/>++jj)<sp/>{</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>data_transposed[jj*rr<sp/>+<sp/>ii]<sp/>=<sp/>data_[ii*cc<sp/>+<sp/>jj];</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Swap<sp/>pointers.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>tmp<sp/>=<sp/>data_;<sp/></highlight><highlight class="comment">//<sp/>Temporal<sp/>holder.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/>data_<sp/>=<sp/>data_transposed;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>tmp;</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/>tmp<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/>matrix_properties_.set_num_rows(cc);</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/>matrix_properties_.set_num_cols(rr);</highlight></codeline>
<codeline lineno="381"><highlight class="normal">}</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383" refid="classmtk_1_1DenseMatrix_1ac2949efba3e8278335d45418c85433e4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmtk_1_1DenseMatrix_1ac2949efba3e8278335d45418c85433e4" kindref="member">mtk::DenseMatrix::OrderRowMajor</ref>()<sp/>{</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(matrix_properties_.ordering()<sp/>==<sp/><ref refid="namespacemtk_1ga622801bd9f912d0f976c3e383f5f581ca7c11989c132253fb76b8f6b1314f7e13" kindref="member">mtk::COL_MAJOR</ref>)<sp/>{</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__c01-roots_1gac080bbbf5cbb5502c9f00405f894857d" kindref="member">mtk::Real</ref><sp/>*data_transposed{};<sp/></highlight><highlight class="comment">//<sp/>Buffer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rr<sp/>=<sp/>matrix_properties_.num_rows();<sp/></highlight><highlight class="comment">//<sp/>Used<sp/>to<sp/>construct<sp/>this<sp/>matrix.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cc<sp/>=<sp/>matrix_properties_.num_cols();<sp/></highlight><highlight class="comment">//<sp/>Used<sp/>to<sp/>construct<sp/>this<sp/>matrix.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>data_transposed<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="group__c01-roots_1gac080bbbf5cbb5502c9f00405f894857d" kindref="member">mtk::Real</ref>[rr*cc];</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(std::bad_alloc<sp/>&amp;memory_allocation_exception)<sp/>{</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Memory<sp/>allocation<sp/>exception<sp/>on<sp/>line<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>__LINE__<sp/>-<sp/>3<sp/>&lt;&lt;</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::endl;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/>memory_allocation_exception.what()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(data_transposed,</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__c01-roots_1ga59a451a5fae30d59649bcda274fea271" kindref="member">mtk::kZero</ref>,</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(data_transposed[0])*rr*cc);</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Assign<sp/>the<sp/>values<sp/>to<sp/>their<sp/>transposed<sp/>position.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/>std::swap(rr,<sp/>cc);</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ii<sp/>=<sp/>0;<sp/>ii<sp/>&lt;<sp/>rr;<sp/>++ii)<sp/>{</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>jj<sp/>=<sp/>0;<sp/>jj<sp/>&lt;<sp/>cc;<sp/>++jj)<sp/>{</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data_transposed[jj*rr<sp/>+<sp/>ii]<sp/>=<sp/>data_[ii*cc<sp/>+<sp/>jj];</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/>std::swap(rr,<sp/>cc);</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Swap<sp/>pointers.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>tmp<sp/>=<sp/>data_;<sp/></highlight><highlight class="comment">//<sp/>Temporal<sp/>holder.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/>data_<sp/>=<sp/>data_transposed;</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>tmp;</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/>matrix_properties_.set_ordering(<ref refid="namespacemtk_1ga622801bd9f912d0f976c3e383f5f581cabc55178ac16eb1ce89b5f3ab915a91f3" kindref="member">mtk::ROW_MAJOR</ref>);</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="422"><highlight class="normal">}</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="424" refid="classmtk_1_1DenseMatrix_1a59b9bea24acf39dca64e8549b3527463" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmtk_1_1DenseMatrix_1a59b9bea24acf39dca64e8549b3527463" kindref="member">mtk::DenseMatrix::OrderColMajor</ref>()<sp/>{</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(matrix_properties_.ordering()<sp/>==<sp/><ref refid="namespacemtk_1ga622801bd9f912d0f976c3e383f5f581cabc55178ac16eb1ce89b5f3ab915a91f3" kindref="member">ROW_MAJOR</ref>)<sp/>{</highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__c01-roots_1gac080bbbf5cbb5502c9f00405f894857d" kindref="member">mtk::Real</ref><sp/>*data_transposed{};<sp/></highlight><highlight class="comment">//<sp/>Buffer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rr<sp/>=<sp/>matrix_properties_.num_rows();<sp/></highlight><highlight class="comment">//<sp/>Used<sp/>to<sp/>construct<sp/>this<sp/>matrix.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cc<sp/>=<sp/>matrix_properties_.num_cols();<sp/></highlight><highlight class="comment">//<sp/>Used<sp/>to<sp/>construct<sp/>this<sp/>matrix.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>data_transposed<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="group__c01-roots_1gac080bbbf5cbb5502c9f00405f894857d" kindref="member">mtk::Real</ref>[rr*cc];</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(std::bad_alloc<sp/>&amp;memory_allocation_exception)<sp/>{</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Memory<sp/>allocation<sp/>exception<sp/>on<sp/>line<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>__LINE__<sp/>-<sp/>3<sp/>&lt;&lt;</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::endl;</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/>memory_allocation_exception.what()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(data_transposed,</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__c01-roots_1ga59a451a5fae30d59649bcda274fea271" kindref="member">mtk::kZero</ref>,</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(data_transposed[0])*rr*cc);</highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Assign<sp/>the<sp/>values<sp/>to<sp/>their<sp/>transposed<sp/>position.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ii<sp/>=<sp/>0;<sp/>ii<sp/>&lt;<sp/>rr;<sp/>++ii)<sp/>{</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>jj<sp/>=<sp/>0;<sp/>jj<sp/>&lt;<sp/>cc;<sp/>++jj)<sp/>{</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data_transposed[jj*rr<sp/>+<sp/>ii]<sp/>=<sp/>data_[ii*cc<sp/>+<sp/>jj];</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Swap<sp/>pointers.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>tmp<sp/>=<sp/>data_;<sp/></highlight><highlight class="comment">//<sp/>Temporal<sp/>holder.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/>data_<sp/>=<sp/>data_transposed;</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>tmp;</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/>matrix_properties_.set_ordering(<ref refid="namespacemtk_1ga622801bd9f912d0f976c3e383f5f581ca7c11989c132253fb76b8f6b1314f7e13" kindref="member">mtk::COL_MAJOR</ref>);</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="461"><highlight class="normal">}</highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight></codeline>
<codeline lineno="463" refid="classmtk_1_1DenseMatrix_1a01d3d8bd502870f93bf3a88a0cc5fb49" refkind="member"><highlight class="normal"><ref refid="classmtk_1_1DenseMatrix" kindref="compound">mtk::DenseMatrix</ref><sp/><ref refid="classmtk_1_1DenseMatrix_1a01d3d8bd502870f93bf3a88a0cc5fb49" kindref="member">mtk::DenseMatrix::Kron</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classmtk_1_1DenseMatrix" kindref="compound">mtk::DenseMatrix</ref><sp/>&amp;aa,</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classmtk_1_1DenseMatrix" kindref="compound">mtk::DenseMatrix</ref><sp/>&amp;bb)<sp/>{</highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>aa_factor{};<sp/><sp/></highlight><highlight class="comment">//<sp/>Used<sp/>in<sp/>computation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>row_offset{};<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Offset<sp/>for<sp/>rows.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col_offset{};<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Offset<sp/>for<sp/>rows.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Auxiliary<sp/>variables:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>aux1<sp/>=<sp/>aa.<ref refid="classmtk_1_1DenseMatrix_1a481c8d09af685a5ba67acefdcaa810cc" kindref="member">matrix_properties_</ref>.<ref refid="classmtk_1_1Matrix_1a69feb30fc0018faee65fe9f7cb43e0ed" kindref="member">num_rows</ref>()*bb.<ref refid="classmtk_1_1DenseMatrix_1a481c8d09af685a5ba67acefdcaa810cc" kindref="member">matrix_properties_</ref>.<ref refid="classmtk_1_1Matrix_1a69feb30fc0018faee65fe9f7cb43e0ed" kindref="member">num_rows</ref>();</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>aux2<sp/>=<sp/>aa.<ref refid="classmtk_1_1DenseMatrix_1a481c8d09af685a5ba67acefdcaa810cc" kindref="member">matrix_properties_</ref>.<ref refid="classmtk_1_1Matrix_1a1e52243fa290de6ee4bcc48cd1776a9a" kindref="member">num_cols</ref>()*bb.<ref refid="classmtk_1_1DenseMatrix_1a481c8d09af685a5ba67acefdcaa810cc" kindref="member">matrix_properties_</ref>.<ref refid="classmtk_1_1Matrix_1a1e52243fa290de6ee4bcc48cd1776a9a" kindref="member">num_cols</ref>();</highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><ref refid="classmtk_1_1DenseMatrix" kindref="compound">mtk::DenseMatrix</ref><sp/>output(aux1,aux2);<sp/></highlight><highlight class="comment">//<sp/>Output<sp/>matrix.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>kk_num_cols{output.<ref refid="classmtk_1_1DenseMatrix_1a481c8d09af685a5ba67acefdcaa810cc" kindref="member">matrix_properties_</ref>.<ref refid="classmtk_1_1Matrix_1a1e52243fa290de6ee4bcc48cd1776a9a" kindref="member">num_cols</ref>()};<sp/></highlight><highlight class="comment">//<sp/>Aux.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>mm<sp/>=<sp/>aa.<ref refid="classmtk_1_1DenseMatrix_1a481c8d09af685a5ba67acefdcaa810cc" kindref="member">matrix_properties_</ref>.<ref refid="classmtk_1_1Matrix_1a69feb30fc0018faee65fe9f7cb43e0ed" kindref="member">num_rows</ref>();<sp/></highlight><highlight class="comment">//<sp/>Rows<sp/>of<sp/>aa.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>nn<sp/>=<sp/>aa.<ref refid="classmtk_1_1DenseMatrix_1a481c8d09af685a5ba67acefdcaa810cc" kindref="member">matrix_properties_</ref>.<ref refid="classmtk_1_1Matrix_1a1e52243fa290de6ee4bcc48cd1776a9a" kindref="member">num_cols</ref>();<sp/></highlight><highlight class="comment">//<sp/>Cols<sp/>of<sp/>aa.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>pp<sp/>=<sp/>bb.<ref refid="classmtk_1_1DenseMatrix_1a481c8d09af685a5ba67acefdcaa810cc" kindref="member">matrix_properties_</ref>.<ref refid="classmtk_1_1Matrix_1a69feb30fc0018faee65fe9f7cb43e0ed" kindref="member">num_rows</ref>();<sp/></highlight><highlight class="comment">//<sp/>Rows<sp/>of<sp/>bb.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>qq<sp/>=<sp/>bb.<ref refid="classmtk_1_1DenseMatrix_1a481c8d09af685a5ba67acefdcaa810cc" kindref="member">matrix_properties_</ref>.<ref refid="classmtk_1_1Matrix_1a1e52243fa290de6ee4bcc48cd1776a9a" kindref="member">num_cols</ref>();<sp/></highlight><highlight class="comment">//<sp/>Cols<sp/>of<sp/>bb.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ii<sp/>=<sp/>0;<sp/>ii<sp/>&lt;<sp/>mm;<sp/>++ii)<sp/>{</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/>row_offset<sp/>=<sp/>ii*pp;</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>jj<sp/>=<sp/>0;<sp/>jj<sp/>&lt;<sp/>nn;<sp/>++jj)<sp/>{</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>col_offset<sp/>=<sp/>jj*qq;</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>aa_factor<sp/>=<sp/>aa.<ref refid="classmtk_1_1DenseMatrix_1a7893e4e5c8d2e2de32b156177e78cb6f" kindref="member">data_</ref>[ii*nn<sp/>+<sp/>jj];</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ll<sp/>=<sp/>0;<sp/>ll<sp/>&lt;<sp/>pp;<sp/>++ll)<sp/>{</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>oo<sp/>=<sp/>0;<sp/>oo<sp/>&lt;<sp/>qq;<sp/>++oo)<sp/>{</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>(ll<sp/>+<sp/>row_offset)*kk_num_cols<sp/>+<sp/>(oo<sp/>+<sp/>col_offset);</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.<ref refid="classmtk_1_1DenseMatrix_1a7893e4e5c8d2e2de32b156177e78cb6f" kindref="member">data_</ref>[index]<sp/>=<sp/>aa_factor*bb.<ref refid="classmtk_1_1DenseMatrix_1a7893e4e5c8d2e2de32b156177e78cb6f" kindref="member">data_</ref>[ll*qq<sp/>+<sp/>oo];</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/>output.<ref refid="classmtk_1_1DenseMatrix_1a481c8d09af685a5ba67acefdcaa810cc" kindref="member">matrix_properties_</ref>.<ref refid="classmtk_1_1Matrix_1ac0edd0ee07853d0ef6dea9b08d15e132" kindref="member">set_storage</ref>(<ref refid="namespacemtk_1ga25b67ec6a2afeee69f9bb196a9c66619a00a806d43a7d74e9ccca47a2134e9c87" kindref="member">mtk::DENSE</ref>);</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/>output.<ref refid="classmtk_1_1DenseMatrix_1a481c8d09af685a5ba67acefdcaa810cc" kindref="member">matrix_properties_</ref>.<ref refid="classmtk_1_1Matrix_1aa390fa8883e58e8f1df9416e5b5b7a83" kindref="member">set_ordering</ref>(<ref refid="namespacemtk_1ga622801bd9f912d0f976c3e383f5f581cabc55178ac16eb1ce89b5f3ab915a91f3" kindref="member">mtk::ROW_MAJOR</ref>);</highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>output;</highlight></codeline>
<codeline lineno="501"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/ejspeiro/Dropbox/MTK/src/mtk_dense_matrix.cc"/>
  </compounddef>
</doxygen>
