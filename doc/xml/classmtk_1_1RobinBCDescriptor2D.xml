<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.8">
  <compounddef id="classmtk_1_1RobinBCDescriptor2D" kind="class" prot="public">
    <compoundname>mtk::RobinBCDescriptor2D</compoundname>
    <includes refid="mtk__robin__bc__descriptor__2d_8h" local="no">mtk_robin_bc_descriptor_2d.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classmtk_1_1RobinBCDescriptor2D_1a5d4d25e65ae74dbde678270933e2fa84" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int mtk::RobinBCDescriptor2D::highest_order_diff_west_</definition>
        <argsstring></argsstring>
        <name>highest_order_diff_west_</name>
        <briefdescription>
<para>Highest order of differentiation west. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/esanchez/Dropbox/MTK/include/mtk_robin_bc_descriptor_2d.h" line="361" column="1" bodyfile="/home/esanchez/Dropbox/MTK/include/mtk_robin_bc_descriptor_2d.h" bodystart="361" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmtk_1_1RobinBCDescriptor2D_1aedb5c01c28158beb1689e1d70e10d8e5" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int mtk::RobinBCDescriptor2D::highest_order_diff_east_</definition>
        <argsstring></argsstring>
        <name>highest_order_diff_east_</name>
        <briefdescription>
<para>Highest order of differentiation east. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/esanchez/Dropbox/MTK/include/mtk_robin_bc_descriptor_2d.h" line="362" column="1" bodyfile="/home/esanchez/Dropbox/MTK/include/mtk_robin_bc_descriptor_2d.h" bodystart="362" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmtk_1_1RobinBCDescriptor2D_1a9a408620e32bcdbd80fa83a0d1063872" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int mtk::RobinBCDescriptor2D::highest_order_diff_south_</definition>
        <argsstring></argsstring>
        <name>highest_order_diff_south_</name>
        <briefdescription>
<para>Highest order differentiation for south. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/esanchez/Dropbox/MTK/include/mtk_robin_bc_descriptor_2d.h" line="363" column="1" bodyfile="/home/esanchez/Dropbox/MTK/include/mtk_robin_bc_descriptor_2d.h" bodystart="363" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmtk_1_1RobinBCDescriptor2D_1a7c715341c17da7e75fd8b3e54e2417c5" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int mtk::RobinBCDescriptor2D::highest_order_diff_north_</definition>
        <argsstring></argsstring>
        <name>highest_order_diff_north_</name>
        <briefdescription>
<para>Highest order differentiation for north. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/esanchez/Dropbox/MTK/include/mtk_robin_bc_descriptor_2d.h" line="364" column="1" bodyfile="/home/esanchez/Dropbox/MTK/include/mtk_robin_bc_descriptor_2d.h" bodystart="364" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmtk_1_1RobinBCDescriptor2D_1a1f341dc6485b78acf5408d22c87a6dd1" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="group__c07-mim__ops_1gaa79593eeb6676d6011db339e01983909" kindref="member">CoefficientFunction1D</ref> &gt;</type>
        <definition>std::vector&lt;CoefficientFunction1D&gt; mtk::RobinBCDescriptor2D::west_coefficients_</definition>
        <argsstring></argsstring>
        <name>west_coefficients_</name>
        <briefdescription>
<para>Coeffs. west. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/esanchez/Dropbox/MTK/include/mtk_robin_bc_descriptor_2d.h" line="366" column="1" bodyfile="/home/esanchez/Dropbox/MTK/include/mtk_robin_bc_descriptor_2d.h" bodystart="366" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmtk_1_1RobinBCDescriptor2D_1aacf640e8d310f53fc9b0a10b66e04ab6" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="group__c07-mim__ops_1gaa79593eeb6676d6011db339e01983909" kindref="member">CoefficientFunction1D</ref> &gt;</type>
        <definition>std::vector&lt;CoefficientFunction1D&gt; mtk::RobinBCDescriptor2D::east_coefficients_</definition>
        <argsstring></argsstring>
        <name>east_coefficients_</name>
        <briefdescription>
<para>Coeffs. east. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/esanchez/Dropbox/MTK/include/mtk_robin_bc_descriptor_2d.h" line="367" column="1" bodyfile="/home/esanchez/Dropbox/MTK/include/mtk_robin_bc_descriptor_2d.h" bodystart="367" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmtk_1_1RobinBCDescriptor2D_1a97335ce1103cb89ab0696d5ae2fc6d37" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="group__c07-mim__ops_1gaa79593eeb6676d6011db339e01983909" kindref="member">CoefficientFunction1D</ref> &gt;</type>
        <definition>std::vector&lt;CoefficientFunction1D&gt; mtk::RobinBCDescriptor2D::south_coefficients_</definition>
        <argsstring></argsstring>
        <name>south_coefficients_</name>
        <briefdescription>
<para>Coeffs. south. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/esanchez/Dropbox/MTK/include/mtk_robin_bc_descriptor_2d.h" line="368" column="1" bodyfile="/home/esanchez/Dropbox/MTK/include/mtk_robin_bc_descriptor_2d.h" bodystart="368" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmtk_1_1RobinBCDescriptor2D_1a91fc1a7322ceda8f5409e1fe6490861c" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="group__c07-mim__ops_1gaa79593eeb6676d6011db339e01983909" kindref="member">CoefficientFunction1D</ref> &gt;</type>
        <definition>std::vector&lt;CoefficientFunction1D&gt; mtk::RobinBCDescriptor2D::north_coefficients_</definition>
        <argsstring></argsstring>
        <name>north_coefficients_</name>
        <briefdescription>
<para>Coeffs. north. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/esanchez/Dropbox/MTK/include/mtk_robin_bc_descriptor_2d.h" line="369" column="1" bodyfile="/home/esanchez/Dropbox/MTK/include/mtk_robin_bc_descriptor_2d.h" bodystart="369" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmtk_1_1RobinBCDescriptor2D_1a3d04c776a3fa34cf4fea7c484e2056d6" prot="private" static="no" mutable="no">
        <type><ref refid="group__c01-roots_1gac080bbbf5cbb5502c9f00405f894857d" kindref="member">Real</ref>(*</type>
        <definition>Real(* mtk::RobinBCDescriptor2D::west_condition_)(const Real &amp;xx, const Real &amp;tt)</definition>
        <argsstring>)(const Real &amp;xx, const Real &amp;tt)</argsstring>
        <name>west_condition_</name>
        <briefdescription>
<para>Condition west. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/esanchez/Dropbox/MTK/include/mtk_robin_bc_descriptor_2d.h" line="371" column="1" bodyfile="/home/esanchez/Dropbox/MTK/include/mtk_robin_bc_descriptor_2d.h" bodystart="371" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmtk_1_1RobinBCDescriptor2D_1a9b2b901adfa258a8e05788857de31c8a" prot="private" static="no" mutable="no">
        <type><ref refid="group__c01-roots_1gac080bbbf5cbb5502c9f00405f894857d" kindref="member">Real</ref>(*</type>
        <definition>Real(* mtk::RobinBCDescriptor2D::east_condition_)(const Real &amp;xx, const Real &amp;tt)</definition>
        <argsstring>)(const Real &amp;xx, const Real &amp;tt)</argsstring>
        <name>east_condition_</name>
        <briefdescription>
<para>Condition east. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/esanchez/Dropbox/MTK/include/mtk_robin_bc_descriptor_2d.h" line="372" column="1" bodyfile="/home/esanchez/Dropbox/MTK/include/mtk_robin_bc_descriptor_2d.h" bodystart="372" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmtk_1_1RobinBCDescriptor2D_1aa45a1867ab80b81966f4221bbdb576ff" prot="private" static="no" mutable="no">
        <type><ref refid="group__c01-roots_1gac080bbbf5cbb5502c9f00405f894857d" kindref="member">Real</ref>(*</type>
        <definition>Real(* mtk::RobinBCDescriptor2D::south_condition_)(const Real &amp;yy, const Real &amp;tt)</definition>
        <argsstring>)(const Real &amp;yy, const Real &amp;tt)</argsstring>
        <name>south_condition_</name>
        <briefdescription>
<para>Cond. south. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/esanchez/Dropbox/MTK/include/mtk_robin_bc_descriptor_2d.h" line="373" column="1" bodyfile="/home/esanchez/Dropbox/MTK/include/mtk_robin_bc_descriptor_2d.h" bodystart="373" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmtk_1_1RobinBCDescriptor2D_1ad2a1e821b0c6d226a8b884baadcf1f1b" prot="private" static="no" mutable="no">
        <type><ref refid="group__c01-roots_1gac080bbbf5cbb5502c9f00405f894857d" kindref="member">Real</ref>(*</type>
        <definition>Real(* mtk::RobinBCDescriptor2D::north_condition_)(const Real &amp;yy, const Real &amp;tt)</definition>
        <argsstring>)(const Real &amp;yy, const Real &amp;tt)</argsstring>
        <name>north_condition_</name>
        <briefdescription>
<para>Cond. north. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/esanchez/Dropbox/MTK/include/mtk_robin_bc_descriptor_2d.h" line="374" column="1" bodyfile="/home/esanchez/Dropbox/MTK/include/mtk_robin_bc_descriptor_2d.h" bodystart="374" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classmtk_1_1RobinBCDescriptor2D_1a00589475c84facde18949150bd6df961" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>mtk::RobinBCDescriptor2D::RobinBCDescriptor2D</definition>
        <argsstring>()</argsstring>
        <name>RobinBCDescriptor2D</name>
        <briefdescription>
<para>Default constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/esanchez/Dropbox/MTK/include/mtk_robin_bc_descriptor_2d.h" line="135" column="1" bodyfile="/home/esanchez/Dropbox/MTK/src/mtk_robin_bc_descriptor_2d.cc" bodystart="84" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="classmtk_1_1RobinBCDescriptor2D_1a996e5ddee3a6f76cb5fa813bfff905d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>mtk::RobinBCDescriptor2D::RobinBCDescriptor2D</definition>
        <argsstring>(const RobinBCDescriptor2D &amp;desc)</argsstring>
        <name>RobinBCDescriptor2D</name>
        <param>
          <type>const <ref refid="classmtk_1_1RobinBCDescriptor2D" kindref="compound">RobinBCDescriptor2D</ref> &amp;</type>
          <declname>desc</declname>
        </param>
        <briefdescription>
<para>Copy constructor. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">desc</parametername>
</parameternamelist>
<parameterdescription>
<para>Given 2D descriptor. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/esanchez/Dropbox/MTK/include/mtk_robin_bc_descriptor_2d.h" line="142" column="1" bodyfile="/home/esanchez/Dropbox/MTK/src/mtk_robin_bc_descriptor_2d.cc" bodystart="94" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="classmtk_1_1RobinBCDescriptor2D_1a75351b00a9e306f468d1733ce38dff5f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>mtk::RobinBCDescriptor2D::~RobinBCDescriptor2D</definition>
        <argsstring>() noexcept</argsstring>
        <name>~RobinBCDescriptor2D</name>
        <briefdescription>
<para>Destructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/esanchez/Dropbox/MTK/include/mtk_robin_bc_descriptor_2d.h" line="145" column="1" bodyfile="/home/esanchez/Dropbox/MTK/src/mtk_robin_bc_descriptor_2d.cc" bodystart="105" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="classmtk_1_1RobinBCDescriptor2D_1ac75fc5f402e3f6e6d4f1e253f8ada98c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int mtk::RobinBCDescriptor2D::highest_order_diff_west</definition>
        <argsstring>() const noexcept</argsstring>
        <name>highest_order_diff_west</name>
        <briefdescription>
<para>Getter for the highest order of differentiation in the west boundary. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Integer highest order of differentiation in the west boundary. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/esanchez/Dropbox/MTK/include/mtk_robin_bc_descriptor_2d.h" line="152" column="1" bodyfile="/home/esanchez/Dropbox/MTK/src/mtk_robin_bc_descriptor_2d.cc" bodystart="107" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="classmtk_1_1RobinBCDescriptor2D_1aebe62f9ae39b02f9c029257d6e6381af" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int mtk::RobinBCDescriptor2D::highest_order_diff_east</definition>
        <argsstring>() const noexcept</argsstring>
        <name>highest_order_diff_east</name>
        <briefdescription>
<para>Getter for the highest order of differentiation in the east boundary. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Integer highest order of differentiation in the east boundary. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/esanchez/Dropbox/MTK/include/mtk_robin_bc_descriptor_2d.h" line="159" column="1" bodyfile="/home/esanchez/Dropbox/MTK/src/mtk_robin_bc_descriptor_2d.cc" bodystart="112" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="classmtk_1_1RobinBCDescriptor2D_1a6aaa1f5a3dc46446acd66209f1519410" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int mtk::RobinBCDescriptor2D::highest_order_diff_south</definition>
        <argsstring>() const noexcept</argsstring>
        <name>highest_order_diff_south</name>
        <briefdescription>
<para>Getter for the highest order of differentiation in the south boundary. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Integer highest order of differentiation in the south boundary. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/esanchez/Dropbox/MTK/include/mtk_robin_bc_descriptor_2d.h" line="166" column="1" bodyfile="/home/esanchez/Dropbox/MTK/src/mtk_robin_bc_descriptor_2d.cc" bodystart="117" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="classmtk_1_1RobinBCDescriptor2D_1a77d5d6b65f39bc74072fbc1d638eb899" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int mtk::RobinBCDescriptor2D::highest_order_diff_north</definition>
        <argsstring>() const noexcept</argsstring>
        <name>highest_order_diff_north</name>
        <briefdescription>
<para>Getter for the highest order of differentiation in the north boundary. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Integer highest order of differentiation in the north boundary. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/esanchez/Dropbox/MTK/include/mtk_robin_bc_descriptor_2d.h" line="173" column="1" bodyfile="/home/esanchez/Dropbox/MTK/src/mtk_robin_bc_descriptor_2d.cc" bodystart="122" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="classmtk_1_1RobinBCDescriptor2D_1a671a38d5ea78be8f0a88ccf034d09987" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mtk::RobinBCDescriptor2D::PushBackWestCoeff</definition>
        <argsstring>(CoefficientFunction1D cw)</argsstring>
        <name>PushBackWestCoeff</name>
        <param>
          <type><ref refid="group__c07-mim__ops_1gaa79593eeb6676d6011db339e01983909" kindref="member">CoefficientFunction1D</ref></type>
          <declname>cw</declname>
        </param>
        <briefdescription>
<para>Push back coefficient function at west of lowest order diff. available. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cw</parametername>
</parameternamelist>
<parameterdescription>
<para>Coeff. <formula id="97">$ c_w(y,t):\partial\Omega\times[t_0,t_n]\mapsto\mathbb{R} $</formula>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/esanchez/Dropbox/MTK/include/mtk_robin_bc_descriptor_2d.h" line="181" column="1" bodyfile="/home/esanchez/Dropbox/MTK/src/mtk_robin_bc_descriptor_2d.cc" bodystart="127" bodyend="139"/>
        <references refid="classmtk_1_1Tools_1a332324c6f25e66be9dff48c5987a3b9f" compoundref="mtk__tools_8cc" startline="62" endline="79">mtk::Tools::Prevent</references>
      </memberdef>
      <memberdef kind="function" id="classmtk_1_1RobinBCDescriptor2D_1a7cc1e6ca729b8b092eb73161eb244160" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mtk::RobinBCDescriptor2D::PushBackEastCoeff</definition>
        <argsstring>(CoefficientFunction1D ce)</argsstring>
        <name>PushBackEastCoeff</name>
        <param>
          <type><ref refid="group__c07-mim__ops_1gaa79593eeb6676d6011db339e01983909" kindref="member">CoefficientFunction1D</ref></type>
          <declname>ce</declname>
        </param>
        <briefdescription>
<para>Push back coefficient function at east of lowest order diff. available. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cw</parametername>
</parameternamelist>
<parameterdescription>
<para>Coeff. <formula id="98">$ c_e(y,t):\partial\Omega\times[t_0,t_n]\mapsto\mathbb{R} $</formula>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/esanchez/Dropbox/MTK/include/mtk_robin_bc_descriptor_2d.h" line="189" column="1" bodyfile="/home/esanchez/Dropbox/MTK/src/mtk_robin_bc_descriptor_2d.cc" bodystart="141" bodyend="153"/>
        <references refid="classmtk_1_1Tools_1a332324c6f25e66be9dff48c5987a3b9f" compoundref="mtk__tools_8cc" startline="62" endline="79">mtk::Tools::Prevent</references>
      </memberdef>
      <memberdef kind="function" id="classmtk_1_1RobinBCDescriptor2D_1ad74c5d9f2c1d0359d350348ac2a7e61e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mtk::RobinBCDescriptor2D::PushBackSouthCoeff</definition>
        <argsstring>(CoefficientFunction1D cs)</argsstring>
        <name>PushBackSouthCoeff</name>
        <param>
          <type><ref refid="group__c07-mim__ops_1gaa79593eeb6676d6011db339e01983909" kindref="member">CoefficientFunction1D</ref></type>
          <declname>cs</declname>
        </param>
        <briefdescription>
<para>Push back coefficient function south of lowest order diff. available. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cw</parametername>
</parameternamelist>
<parameterdescription>
<para>Coeff. <formula id="99">$ c_s(x,t):\partial\Omega\times[t_0,t_n]\mapsto\mathbb{R} $</formula>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/esanchez/Dropbox/MTK/include/mtk_robin_bc_descriptor_2d.h" line="197" column="1" bodyfile="/home/esanchez/Dropbox/MTK/src/mtk_robin_bc_descriptor_2d.cc" bodystart="155" bodyend="167"/>
        <references refid="classmtk_1_1Tools_1a332324c6f25e66be9dff48c5987a3b9f" compoundref="mtk__tools_8cc" startline="62" endline="79">mtk::Tools::Prevent</references>
      </memberdef>
      <memberdef kind="function" id="classmtk_1_1RobinBCDescriptor2D_1abc6e299516af5d1c5c2d04797875b446" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mtk::RobinBCDescriptor2D::PushBackNorthCoeff</definition>
        <argsstring>(CoefficientFunction1D cn)</argsstring>
        <name>PushBackNorthCoeff</name>
        <param>
          <type><ref refid="group__c07-mim__ops_1gaa79593eeb6676d6011db339e01983909" kindref="member">CoefficientFunction1D</ref></type>
          <declname>cn</declname>
        </param>
        <briefdescription>
<para>Push back coefficient function north of lowest order diff. available. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cw</parametername>
</parameternamelist>
<parameterdescription>
<para>Coeff. <formula id="100">$ c_n(x,t):\partial\Omega\times[t_0,t_n]\mapsto\mathbb{R} $</formula>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/esanchez/Dropbox/MTK/include/mtk_robin_bc_descriptor_2d.h" line="205" column="1" bodyfile="/home/esanchez/Dropbox/MTK/src/mtk_robin_bc_descriptor_2d.cc" bodystart="169" bodyend="181"/>
        <references refid="classmtk_1_1Tools_1a332324c6f25e66be9dff48c5987a3b9f" compoundref="mtk__tools_8cc" startline="62" endline="79">mtk::Tools::Prevent</references>
      </memberdef>
      <memberdef kind="function" id="classmtk_1_1RobinBCDescriptor2D_1aeaff87510dc1773effc0b5429579de23" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mtk::RobinBCDescriptor2D::set_west_condition</definition>
        <argsstring>(Real(*west_condition)(const Real &amp;yy, const Real &amp;tt)) noexcept</argsstring>
        <name>set_west_condition</name>
        <param>
          <type><ref refid="group__c01-roots_1gac080bbbf5cbb5502c9f00405f894857d" kindref="member">Real</ref>(*)(const <ref refid="group__c01-roots_1gac080bbbf5cbb5502c9f00405f894857d" kindref="member">Real</ref> &amp;yy, const <ref refid="group__c01-roots_1gac080bbbf5cbb5502c9f00405f894857d" kindref="member">Real</ref> &amp;tt)</type>
          <declname>west_condition</declname>
        </param>
        <briefdescription>
<para>Set boundary condition at west. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">west_condition</parametername>
</parameternamelist>
<parameterdescription>
<para><formula id="101">$ \beta_w(y,t):\partial\Omega\times[t_0,t_n]\mapsto\mathbb{R} $</formula>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/esanchez/Dropbox/MTK/include/mtk_robin_bc_descriptor_2d.h" line="213" column="1" bodyfile="/home/esanchez/Dropbox/MTK/src/mtk_robin_bc_descriptor_2d.cc" bodystart="183" bodyend="192"/>
        <references refid="classmtk_1_1Tools_1a332324c6f25e66be9dff48c5987a3b9f" compoundref="mtk__tools_8cc" startline="62" endline="79">mtk::Tools::Prevent</references>
      </memberdef>
      <memberdef kind="function" id="classmtk_1_1RobinBCDescriptor2D_1a94570f6e741bb00038c4bf81842d226c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mtk::RobinBCDescriptor2D::set_east_condition</definition>
        <argsstring>(Real(*east_condition)(const Real &amp;yy, const Real &amp;tt)) noexcept</argsstring>
        <name>set_east_condition</name>
        <param>
          <type><ref refid="group__c01-roots_1gac080bbbf5cbb5502c9f00405f894857d" kindref="member">Real</ref>(*)(const <ref refid="group__c01-roots_1gac080bbbf5cbb5502c9f00405f894857d" kindref="member">Real</ref> &amp;yy, const <ref refid="group__c01-roots_1gac080bbbf5cbb5502c9f00405f894857d" kindref="member">Real</ref> &amp;tt)</type>
          <declname>east_condition</declname>
        </param>
        <briefdescription>
<para>Set boundary condition at east. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">east_condition</parametername>
</parameternamelist>
<parameterdescription>
<para><formula id="102">$ \beta_e(y,t):\partial\Omega\times[t_0,t_n]\mapsto\mathbb{R} $</formula>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/esanchez/Dropbox/MTK/include/mtk_robin_bc_descriptor_2d.h" line="222" column="1" bodyfile="/home/esanchez/Dropbox/MTK/src/mtk_robin_bc_descriptor_2d.cc" bodystart="194" bodyend="203"/>
        <references refid="classmtk_1_1Tools_1a332324c6f25e66be9dff48c5987a3b9f" compoundref="mtk__tools_8cc" startline="62" endline="79">mtk::Tools::Prevent</references>
      </memberdef>
      <memberdef kind="function" id="classmtk_1_1RobinBCDescriptor2D_1a3fbdf58ba24861011fd852f0c642a4c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mtk::RobinBCDescriptor2D::set_south_condition</definition>
        <argsstring>(Real(*south_condition)(const Real &amp;xx, const Real &amp;tt)) noexcept</argsstring>
        <name>set_south_condition</name>
        <param>
          <type><ref refid="group__c01-roots_1gac080bbbf5cbb5502c9f00405f894857d" kindref="member">Real</ref>(*)(const <ref refid="group__c01-roots_1gac080bbbf5cbb5502c9f00405f894857d" kindref="member">Real</ref> &amp;xx, const <ref refid="group__c01-roots_1gac080bbbf5cbb5502c9f00405f894857d" kindref="member">Real</ref> &amp;tt)</type>
          <declname>south_condition</declname>
        </param>
        <briefdescription>
<para>Set boundary condition at south. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">south_condition</parametername>
</parameternamelist>
<parameterdescription>
<para><formula id="103">$ \beta_s(x,t):\partial\Omega\times[t_0,t_n]\mapsto\mathbb{R} $</formula>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/esanchez/Dropbox/MTK/include/mtk_robin_bc_descriptor_2d.h" line="231" column="1" bodyfile="/home/esanchez/Dropbox/MTK/src/mtk_robin_bc_descriptor_2d.cc" bodystart="205" bodyend="215"/>
        <references refid="classmtk_1_1Tools_1a332324c6f25e66be9dff48c5987a3b9f" compoundref="mtk__tools_8cc" startline="62" endline="79">mtk::Tools::Prevent</references>
      </memberdef>
      <memberdef kind="function" id="classmtk_1_1RobinBCDescriptor2D_1ade17884e6a2636a7c6f989602a0052e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mtk::RobinBCDescriptor2D::set_north_condition</definition>
        <argsstring>(Real(*north_condition)(const Real &amp;xx, const Real &amp;tt)) noexcept</argsstring>
        <name>set_north_condition</name>
        <param>
          <type><ref refid="group__c01-roots_1gac080bbbf5cbb5502c9f00405f894857d" kindref="member">Real</ref>(*)(const <ref refid="group__c01-roots_1gac080bbbf5cbb5502c9f00405f894857d" kindref="member">Real</ref> &amp;xx, const <ref refid="group__c01-roots_1gac080bbbf5cbb5502c9f00405f894857d" kindref="member">Real</ref> &amp;tt)</type>
          <declname>north_condition</declname>
        </param>
        <briefdescription>
<para>Set boundary condition at north. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">north_condition</parametername>
</parameternamelist>
<parameterdescription>
<para><formula id="104">$ \beta_n(x,t):\partial\Omega\times[t_0,t_n]\mapsto\mathbb{R} $</formula>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/esanchez/Dropbox/MTK/include/mtk_robin_bc_descriptor_2d.h" line="240" column="1" bodyfile="/home/esanchez/Dropbox/MTK/src/mtk_robin_bc_descriptor_2d.cc" bodystart="217" bodyend="227"/>
        <references refid="classmtk_1_1Tools_1a332324c6f25e66be9dff48c5987a3b9f" compoundref="mtk__tools_8cc" startline="62" endline="79">mtk::Tools::Prevent</references>
      </memberdef>
      <memberdef kind="function" id="classmtk_1_1RobinBCDescriptor2D_1a0a26693f5265fcad978e7ba84e01ed69" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool mtk::RobinBCDescriptor2D::ImposeOnLaplacianMatrix</definition>
        <argsstring>(const Lap2D &amp;lap, const UniStgGrid2D &amp;grid, DenseMatrix &amp;matrix, const Real &amp;time=kZero) const </argsstring>
        <name>ImposeOnLaplacianMatrix</name>
        <param>
          <type>const <ref refid="classmtk_1_1Lap2D" kindref="compound">Lap2D</ref> &amp;</type>
          <declname>lap</declname>
        </param>
        <param>
          <type>const <ref refid="classmtk_1_1UniStgGrid2D" kindref="compound">UniStgGrid2D</ref> &amp;</type>
          <declname>grid</declname>
        </param>
        <param>
          <type><ref refid="classmtk_1_1DenseMatrix" kindref="compound">DenseMatrix</ref> &amp;</type>
          <declname>matrix</declname>
        </param>
        <param>
          <type>const <ref refid="group__c01-roots_1gac080bbbf5cbb5502c9f00405f894857d" kindref="member">Real</ref> &amp;</type>
          <declname>time</declname>
          <defval><ref refid="group__c01-roots_1ga59a451a5fae30d59649bcda274fea271" kindref="member">kZero</ref></defval>
        </param>
        <briefdescription>
<para>Imposes the condition on the operator represented as matrix. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">lap</parametername>
</parameternamelist>
<parameterdescription>
<para>Laplacian operator on the matrix. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">grid</parametername>
</parameternamelist>
<parameterdescription>
<para>Grid upon which impose the desired boundary condition. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">matrix</parametername>
</parameternamelist>
<parameterdescription>
<para>Input matrix with the Laplacian operator. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">time</parametername>
</parameternamelist>
<parameterdescription>
<para>Current time snapshot. Default is kZero. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
<para>If we have not bound anything to the grid, then we have to generate our collection of spatial coordinates, as we evaluate the coefficients. </para>        </inbodydescription>
        <location file="/home/esanchez/Dropbox/MTK/include/mtk_robin_bc_descriptor_2d.h" line="251" column="1" bodyfile="/home/esanchez/Dropbox/MTK/src/mtk_robin_bc_descriptor_2d.cc" bodystart="591" bodyend="672"/>
        <references refid="classmtk_1_1Tools_1a332324c6f25e66be9dff48c5987a3b9f" compoundref="mtk__tools_8cc" startline="62" endline="79">mtk::Tools::Prevent</references>
        <references refid="classmtk_1_1UniStgGrid2D_1a99a3a9cdb05b7306be99bde935509e30" compoundref="mtk__uni__stg__grid__2d_8cc" startline="205" endline="208">mtk::UniStgGrid2D::nature</references>
        <references refid="classmtk_1_1UniStgGrid2D_1a2d182866a398aba8e4829590e85bf939" compoundref="mtk__uni__stg__grid__2d_8cc" startline="220" endline="223">mtk::UniStgGrid2D::num_cells_x</references>
        <references refid="classmtk_1_1UniStgGrid2D_1aed05a801cc9a76dba0ff203cea58a61a" compoundref="mtk__uni__stg__grid__2d_8cc" startline="245" endline="248">mtk::UniStgGrid2D::num_cells_y</references>
        <references refid="classmtk_1_1DenseMatrix_1a53f3afb3b6a8d21854458aaa9663cc74" compoundref="mtk__dense__matrix_8cc" startline="339" endline="342">mtk::DenseMatrix::num_rows</references>
        <references refid="classmtk_1_1DenseMatrix_1a41747502d468c6728a4be31501b16e0e" compoundref="mtk__dense__matrix_8cc" startline="344" endline="347">mtk::DenseMatrix::num_cols</references>
        <references refid="classmtk_1_1UniStgGrid2D_1aa651194ccd0321a7c61a8f56fa5e8455" compoundref="mtk__uni__stg__grid__2d_8cc" startline="255" endline="258">mtk::UniStgGrid2D::Bound</references>
      </memberdef>
      <memberdef kind="function" id="classmtk_1_1RobinBCDescriptor2D_1ac9564bc46c196cbf4720a0e4b93da8b0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mtk::RobinBCDescriptor2D::ImposeOnGrid</definition>
        <argsstring>(UniStgGrid2D &amp;grid, const Real &amp;time=kZero) const </argsstring>
        <name>ImposeOnGrid</name>
        <param>
          <type><ref refid="classmtk_1_1UniStgGrid2D" kindref="compound">UniStgGrid2D</ref> &amp;</type>
          <declname>grid</declname>
        </param>
        <param>
          <type>const <ref refid="group__c01-roots_1gac080bbbf5cbb5502c9f00405f894857d" kindref="member">Real</ref> &amp;</type>
          <declname>time</declname>
          <defval><ref refid="group__c01-roots_1ga59a451a5fae30d59649bcda274fea271" kindref="member">kZero</ref></defval>
        </param>
        <briefdescription>
<para>Imposes the condition on the grid. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">grid</parametername>
</parameternamelist>
<parameterdescription>
<para>Grid upon which impose the desired boundary condition. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">time</parametername>
</parameternamelist>
<parameterdescription>
<para>Current time snapshot. Default is kZero. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
<para><orderedlist>
<listitem><para>Impose assuming an scalar grid.</para></listitem></orderedlist>
</para><para>1.1. Impose south condition.</para><para>1.1.1. Impose south-west corner.</para><para>1.1.2. Impose south border.</para><para>1.1.3. Impose south-east corner.</para><para>1.2. Impose north condition.</para><para>1.2.1. Impose north-west corner.</para><para>1.2.2. Impose north border.</para><para>1.2.3. Impose north-east corner.</para><para>1.3. Impose west condition.</para><para>1.3.1. Impose south-west corner. <simplesect kind="note"><para>As per discussion with Otilio, we will take the <bold>arithmetic</bold> <bold>mean</bold> of the values of the BCs at the corners.</para></simplesect>
1.3.2. Impose west border.</para><para>1.3.3. Impose north-west corner.</para><para>1.4. Impose east condition.</para><para>1.4.1. Impose south-east corner.</para><para>1.4.2. Impose east border.</para><para>1.4.3. Impose north-east corner.</para><para><orderedlist>
<listitem><para>Impose assuming a vector grid.</para></listitem></orderedlist>
</para><para><xrefsect id="todo_1_todo000029"><xreftitle>Todo</xreftitle><xrefdescription><para>Implement imposition for vector-valued grids. Need research here! </para></xrefdescription></xrefsect></para>        </inbodydescription>
        <location file="/home/esanchez/Dropbox/MTK/include/mtk_robin_bc_descriptor_2d.h" line="261" column="1" bodyfile="/home/esanchez/Dropbox/MTK/src/mtk_robin_bc_descriptor_2d.cc" bodystart="674" bodyend="790"/>
        <references refid="classmtk_1_1Tools_1a332324c6f25e66be9dff48c5987a3b9f" compoundref="mtk__tools_8cc" startline="62" endline="79">mtk::Tools::Prevent</references>
        <references refid="classmtk_1_1UniStgGrid2D_1a2d182866a398aba8e4829590e85bf939" compoundref="mtk__uni__stg__grid__2d_8cc" startline="220" endline="223">mtk::UniStgGrid2D::num_cells_x</references>
        <references refid="classmtk_1_1UniStgGrid2D_1aed05a801cc9a76dba0ff203cea58a61a" compoundref="mtk__uni__stg__grid__2d_8cc" startline="245" endline="248">mtk::UniStgGrid2D::num_cells_y</references>
        <references refid="classmtk_1_1UniStgGrid2D_1a99a3a9cdb05b7306be99bde935509e30" compoundref="mtk__uni__stg__grid__2d_8cc" startline="205" endline="208">mtk::UniStgGrid2D::nature</references>
        <references refid="classmtk_1_1UniStgGrid2D_1af2b1712387ded85edaf2b64617d3fc13" compoundref="mtk__uni__stg__grid__2d_8cc" startline="210" endline="213">mtk::UniStgGrid2D::west_bndy</references>
        <references refid="classmtk_1_1UniStgGrid2D_1a3e72d59843a3f9c5e47da07e5850dfe0" compoundref="mtk__uni__stg__grid__2d_8cc" startline="265" endline="268">mtk::UniStgGrid2D::discrete_field</references>
        <references refid="classmtk_1_1UniStgGrid2D_1aca4710004c4a7da6a9e8fd6ab32a691f" compoundref="mtk__uni__stg__grid__2d_8cc" startline="225" endline="228">mtk::UniStgGrid2D::delta_x</references>
        <references refid="group__c01-roots_1gaf39c2d851a2db744f4feb1c5ab3ec2cf" compoundref="mtk__roots_8h" startline="128">mtk::kTwo</references>
        <references refid="classmtk_1_1UniStgGrid2D_1a03f689eb29a6369b82ce1207c655d5ff" compoundref="mtk__uni__stg__grid__2d_8cc" startline="215" endline="218">mtk::UniStgGrid2D::east_bndy</references>
        <references refid="classmtk_1_1UniStgGrid2D_1a1442eaf219f099d0ebf46a170fdebf92" compoundref="mtk__uni__stg__grid__2d_8cc" startline="235" endline="238">mtk::UniStgGrid2D::south_bndy</references>
        <references refid="classmtk_1_1UniStgGrid2D_1a65a78cfc80ffdbeb282ed57af4dc5cb4" compoundref="mtk__uni__stg__grid__2d_8cc" startline="250" endline="253">mtk::UniStgGrid2D::delta_y</references>
        <references refid="classmtk_1_1UniStgGrid2D_1afe1ead253cdeb5503e0489eba8fd84e2" compoundref="mtk__uni__stg__grid__2d_8cc" startline="240" endline="243">mtk::UniStgGrid2D::north_bndy</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classmtk_1_1RobinBCDescriptor2D_1a82159bcca93555114532c5fa4d0fb3db" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool mtk::RobinBCDescriptor2D::ImposeOnSouthBoundaryNoSpace</definition>
        <argsstring>(const Lap2D &amp;lap, const UniStgGrid2D &amp;grid, DenseMatrix &amp;matrix, const Real &amp;time=kZero) const </argsstring>
        <name>ImposeOnSouthBoundaryNoSpace</name>
        <param>
          <type>const <ref refid="classmtk_1_1Lap2D" kindref="compound">Lap2D</ref> &amp;</type>
          <declname>lap</declname>
        </param>
        <param>
          <type>const <ref refid="classmtk_1_1UniStgGrid2D" kindref="compound">UniStgGrid2D</ref> &amp;</type>
          <declname>grid</declname>
        </param>
        <param>
          <type><ref refid="classmtk_1_1DenseMatrix" kindref="compound">DenseMatrix</ref> &amp;</type>
          <declname>matrix</declname>
        </param>
        <param>
          <type>const <ref refid="group__c01-roots_1gac080bbbf5cbb5502c9f00405f894857d" kindref="member">Real</ref> &amp;</type>
          <declname>time</declname>
          <defval><ref refid="group__c01-roots_1ga59a451a5fae30d59649bcda274fea271" kindref="member">kZero</ref></defval>
        </param>
        <briefdescription>
<para>Imposes the condition on the south boundary. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">lap</parametername>
</parameternamelist>
<parameterdescription>
<para>Laplacian operator on the matrix. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">grid</parametername>
</parameternamelist>
<parameterdescription>
<para>Grid upon which impose the desired boundary condition. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">matrix</parametername>
</parameternamelist>
<parameterdescription>
<para>Input matrix with the Laplacian operator. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">time</parametername>
</parameternamelist>
<parameterdescription>
<para>Current time snapshot. Default is kZero. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
<para><orderedlist>
<listitem><para>Impose the Dirichlet condition first.</para></listitem><listitem><para>Impose the Neumann condition.</para></listitem></orderedlist>
</para><para><xrefsect id="todo_1_todo000027"><xreftitle>Todo</xreftitle><xrefdescription><para>Impose the Neumann conditions on every pole, for every scenario. </para></xrefdescription></xrefsect></para>        </inbodydescription>
        <location file="/home/esanchez/Dropbox/MTK/include/mtk_robin_bc_descriptor_2d.h" line="272" column="1" bodyfile="/home/esanchez/Dropbox/MTK/src/mtk_robin_bc_descriptor_2d.cc" bodystart="229" bodyend="282"/>
        <references refid="classmtk_1_1UniStgGrid2D_1af2b1712387ded85edaf2b64617d3fc13" compoundref="mtk__uni__stg__grid__2d_8cc" startline="210" endline="213">mtk::UniStgGrid2D::west_bndy</references>
        <references refid="classmtk_1_1DenseMatrix_1a53f3afb3b6a8d21854458aaa9663cc74" compoundref="mtk__dense__matrix_8cc" startline="339" endline="342">mtk::DenseMatrix::num_rows</references>
        <references refid="classmtk_1_1DenseMatrix_1a41747502d468c6728a4be31501b16e0e" compoundref="mtk__dense__matrix_8cc" startline="344" endline="347">mtk::DenseMatrix::num_cols</references>
        <references refid="classmtk_1_1DenseMatrix_1a784ce5784109ac86bfb9d8562b334b13" compoundref="mtk__dense__matrix_8cc" startline="366" endline="377">mtk::DenseMatrix::SetValue</references>
        <references refid="classmtk_1_1UniStgGrid2D_1aca4710004c4a7da6a9e8fd6ab32a691f" compoundref="mtk__uni__stg__grid__2d_8cc" startline="225" endline="228">mtk::UniStgGrid2D::delta_x</references>
        <references refid="group__c01-roots_1gaf39c2d851a2db744f4feb1c5ab3ec2cf" compoundref="mtk__roots_8h" startline="128">mtk::kTwo</references>
        <references refid="classmtk_1_1UniStgGrid2D_1a2d182866a398aba8e4829590e85bf939" compoundref="mtk__uni__stg__grid__2d_8cc" startline="220" endline="223">mtk::UniStgGrid2D::num_cells_x</references>
        <references refid="classmtk_1_1UniStgGrid2D_1a03f689eb29a6369b82ce1207c655d5ff" compoundref="mtk__uni__stg__grid__2d_8cc" startline="215" endline="218">mtk::UniStgGrid2D::east_bndy</references>
      </memberdef>
      <memberdef kind="function" id="classmtk_1_1RobinBCDescriptor2D_1a3bc22c1d5a7a4d7c2130351cbfa35135" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool mtk::RobinBCDescriptor2D::ImposeOnNorthBoundaryNoSpace</definition>
        <argsstring>(const Lap2D &amp;lap, const UniStgGrid2D &amp;grid, DenseMatrix &amp;matrix, const Real &amp;time=kZero) const </argsstring>
        <name>ImposeOnNorthBoundaryNoSpace</name>
        <param>
          <type>const <ref refid="classmtk_1_1Lap2D" kindref="compound">Lap2D</ref> &amp;</type>
          <declname>lap</declname>
        </param>
        <param>
          <type>const <ref refid="classmtk_1_1UniStgGrid2D" kindref="compound">UniStgGrid2D</ref> &amp;</type>
          <declname>grid</declname>
        </param>
        <param>
          <type><ref refid="classmtk_1_1DenseMatrix" kindref="compound">DenseMatrix</ref> &amp;</type>
          <declname>matrix</declname>
        </param>
        <param>
          <type>const <ref refid="group__c01-roots_1gac080bbbf5cbb5502c9f00405f894857d" kindref="member">Real</ref> &amp;</type>
          <declname>time</declname>
          <defval><ref refid="group__c01-roots_1ga59a451a5fae30d59649bcda274fea271" kindref="member">kZero</ref></defval>
        </param>
        <briefdescription>
<para>Imposes the condition on the north boundary. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">lap</parametername>
</parameternamelist>
<parameterdescription>
<para>Laplacian operator on the matrix. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">grid</parametername>
</parameternamelist>
<parameterdescription>
<para>Grid upon which impose the desired boundary condition. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">matrix</parametername>
</parameternamelist>
<parameterdescription>
<para>Input matrix with the Laplacian operator. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">time</parametername>
</parameternamelist>
<parameterdescription>
<para>Current time snapshot. Default is kZero. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
<para><orderedlist>
<listitem><para>Impose the Dirichlet condition first.</para></listitem><listitem><para>Impose the Neumann condition. </para></listitem></orderedlist>
</para>        </inbodydescription>
        <location file="/home/esanchez/Dropbox/MTK/include/mtk_robin_bc_descriptor_2d.h" line="284" column="1" bodyfile="/home/esanchez/Dropbox/MTK/src/mtk_robin_bc_descriptor_2d.cc" bodystart="312" bodyend="370"/>
        <references refid="classmtk_1_1UniStgGrid2D_1aed05a801cc9a76dba0ff203cea58a61a" compoundref="mtk__uni__stg__grid__2d_8cc" startline="245" endline="248">mtk::UniStgGrid2D::num_cells_y</references>
        <references refid="classmtk_1_1UniStgGrid2D_1a2d182866a398aba8e4829590e85bf939" compoundref="mtk__uni__stg__grid__2d_8cc" startline="220" endline="223">mtk::UniStgGrid2D::num_cells_x</references>
        <references refid="classmtk_1_1UniStgGrid2D_1af2b1712387ded85edaf2b64617d3fc13" compoundref="mtk__uni__stg__grid__2d_8cc" startline="210" endline="213">mtk::UniStgGrid2D::west_bndy</references>
        <references refid="classmtk_1_1DenseMatrix_1a53f3afb3b6a8d21854458aaa9663cc74" compoundref="mtk__dense__matrix_8cc" startline="339" endline="342">mtk::DenseMatrix::num_rows</references>
        <references refid="classmtk_1_1DenseMatrix_1a41747502d468c6728a4be31501b16e0e" compoundref="mtk__dense__matrix_8cc" startline="344" endline="347">mtk::DenseMatrix::num_cols</references>
        <references refid="classmtk_1_1DenseMatrix_1a784ce5784109ac86bfb9d8562b334b13" compoundref="mtk__dense__matrix_8cc" startline="366" endline="377">mtk::DenseMatrix::SetValue</references>
        <references refid="classmtk_1_1UniStgGrid2D_1aca4710004c4a7da6a9e8fd6ab32a691f" compoundref="mtk__uni__stg__grid__2d_8cc" startline="225" endline="228">mtk::UniStgGrid2D::delta_x</references>
        <references refid="group__c01-roots_1gaf39c2d851a2db744f4feb1c5ab3ec2cf" compoundref="mtk__roots_8h" startline="128">mtk::kTwo</references>
        <references refid="classmtk_1_1UniStgGrid2D_1a03f689eb29a6369b82ce1207c655d5ff" compoundref="mtk__uni__stg__grid__2d_8cc" startline="215" endline="218">mtk::UniStgGrid2D::east_bndy</references>
      </memberdef>
      <memberdef kind="function" id="classmtk_1_1RobinBCDescriptor2D_1af5dd24444e7eb14592a3c3feaf30d561" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool mtk::RobinBCDescriptor2D::ImposeOnWestBoundaryNoSpace</definition>
        <argsstring>(const Lap2D &amp;lap, const UniStgGrid2D &amp;grid, DenseMatrix &amp;matrix, const Real &amp;time=kZero) const </argsstring>
        <name>ImposeOnWestBoundaryNoSpace</name>
        <param>
          <type>const <ref refid="classmtk_1_1Lap2D" kindref="compound">Lap2D</ref> &amp;</type>
          <declname>lap</declname>
        </param>
        <param>
          <type>const <ref refid="classmtk_1_1UniStgGrid2D" kindref="compound">UniStgGrid2D</ref> &amp;</type>
          <declname>grid</declname>
        </param>
        <param>
          <type><ref refid="classmtk_1_1DenseMatrix" kindref="compound">DenseMatrix</ref> &amp;</type>
          <declname>matrix</declname>
        </param>
        <param>
          <type>const <ref refid="group__c01-roots_1gac080bbbf5cbb5502c9f00405f894857d" kindref="member">Real</ref> &amp;</type>
          <declname>time</declname>
          <defval><ref refid="group__c01-roots_1ga59a451a5fae30d59649bcda274fea271" kindref="member">kZero</ref></defval>
        </param>
        <briefdescription>
<para>Imposes the condition on the west boundary. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">lap</parametername>
</parameternamelist>
<parameterdescription>
<para>Laplacian operator on the matrix. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">grid</parametername>
</parameternamelist>
<parameterdescription>
<para>Grid upon which impose the desired boundary condition. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">matrix</parametername>
</parameternamelist>
<parameterdescription>
<para>Input matrix with the Laplacian operator. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">time</parametername>
</parameternamelist>
<parameterdescription>
<para>Current time snapshot. Default is kZero. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
<para><orderedlist>
<listitem><para>Impose the Dirichlet condition first.</para></listitem></orderedlist>
</para><para><simplesect kind="note"><para>As it can be seen, we must adopt a convention about how to treat the corners. Based on a reasoning with Otilio, we will take the <bold>harmonic mean</bold>.</para></simplesect>
<orderedlist>
<listitem><para>Impose the Neumann condition. </para></listitem></orderedlist>
</para>        </inbodydescription>
        <location file="/home/esanchez/Dropbox/MTK/include/mtk_robin_bc_descriptor_2d.h" line="296" column="1" bodyfile="/home/esanchez/Dropbox/MTK/src/mtk_robin_bc_descriptor_2d.cc" bodystart="399" bodyend="466"/>
        <references refid="classmtk_1_1UniStgGrid2D_1a1442eaf219f099d0ebf46a170fdebf92" compoundref="mtk__uni__stg__grid__2d_8cc" startline="235" endline="238">mtk::UniStgGrid2D::south_bndy</references>
        <references refid="classmtk_1_1DenseMatrix_1a53f3afb3b6a8d21854458aaa9663cc74" compoundref="mtk__dense__matrix_8cc" startline="339" endline="342">mtk::DenseMatrix::num_rows</references>
        <references refid="classmtk_1_1DenseMatrix_1a41747502d468c6728a4be31501b16e0e" compoundref="mtk__dense__matrix_8cc" startline="344" endline="347">mtk::DenseMatrix::num_cols</references>
        <references refid="group__c01-roots_1ga26407c24d43b6b95480943340d285c71" compoundref="mtk__roots_8h" startline="127">mtk::kOne</references>
        <references refid="classmtk_1_1DenseMatrix_1a4b23ecbebd970b5eea915dbb50691024" compoundref="mtk__dense__matrix_8cc" startline="354" endline="364">mtk::DenseMatrix::GetValue</references>
        <references refid="group__c01-roots_1gaf39c2d851a2db744f4feb1c5ab3ec2cf" compoundref="mtk__roots_8h" startline="128">mtk::kTwo</references>
        <references refid="classmtk_1_1DenseMatrix_1a784ce5784109ac86bfb9d8562b334b13" compoundref="mtk__dense__matrix_8cc" startline="366" endline="377">mtk::DenseMatrix::SetValue</references>
        <references refid="classmtk_1_1UniStgGrid2D_1a2d182866a398aba8e4829590e85bf939" compoundref="mtk__uni__stg__grid__2d_8cc" startline="220" endline="223">mtk::UniStgGrid2D::num_cells_x</references>
        <references refid="classmtk_1_1UniStgGrid2D_1a65a78cfc80ffdbeb282ed57af4dc5cb4" compoundref="mtk__uni__stg__grid__2d_8cc" startline="250" endline="253">mtk::UniStgGrid2D::delta_y</references>
        <references refid="classmtk_1_1UniStgGrid2D_1aed05a801cc9a76dba0ff203cea58a61a" compoundref="mtk__uni__stg__grid__2d_8cc" startline="245" endline="248">mtk::UniStgGrid2D::num_cells_y</references>
        <references refid="classmtk_1_1UniStgGrid2D_1afe1ead253cdeb5503e0489eba8fd84e2" compoundref="mtk__uni__stg__grid__2d_8cc" startline="240" endline="243">mtk::UniStgGrid2D::north_bndy</references>
      </memberdef>
      <memberdef kind="function" id="classmtk_1_1RobinBCDescriptor2D_1ae1df82802d541d3566f3d2659e4aaf05" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool mtk::RobinBCDescriptor2D::ImposeOnEastBoundaryNoSpace</definition>
        <argsstring>(const Lap2D &amp;lap, const UniStgGrid2D &amp;grid, DenseMatrix &amp;matrix, const Real &amp;time=kZero) const </argsstring>
        <name>ImposeOnEastBoundaryNoSpace</name>
        <param>
          <type>const <ref refid="classmtk_1_1Lap2D" kindref="compound">Lap2D</ref> &amp;</type>
          <declname>lap</declname>
        </param>
        <param>
          <type>const <ref refid="classmtk_1_1UniStgGrid2D" kindref="compound">UniStgGrid2D</ref> &amp;</type>
          <declname>grid</declname>
        </param>
        <param>
          <type><ref refid="classmtk_1_1DenseMatrix" kindref="compound">DenseMatrix</ref> &amp;</type>
          <declname>matrix</declname>
        </param>
        <param>
          <type>const <ref refid="group__c01-roots_1gac080bbbf5cbb5502c9f00405f894857d" kindref="member">Real</ref> &amp;</type>
          <declname>time</declname>
          <defval><ref refid="group__c01-roots_1ga59a451a5fae30d59649bcda274fea271" kindref="member">kZero</ref></defval>
        </param>
        <briefdescription>
<para>Imposes the condition on the east boundary. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">lap</parametername>
</parameternamelist>
<parameterdescription>
<para>Laplacian operator on the matrix. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">grid</parametername>
</parameternamelist>
<parameterdescription>
<para>Grid upon which impose the desired boundary condition. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">matrix</parametername>
</parameternamelist>
<parameterdescription>
<para>Input matrix with the Laplacian operator. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">time</parametername>
</parameternamelist>
<parameterdescription>
<para>Current time snapshot. Default is kZero. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
<para><orderedlist>
<listitem><para>Impose the Dirichlet condition first.</para></listitem><listitem><para>Impose the Neumann condition. </para></listitem></orderedlist>
</para>        </inbodydescription>
        <location file="/home/esanchez/Dropbox/MTK/include/mtk_robin_bc_descriptor_2d.h" line="308" column="1" bodyfile="/home/esanchez/Dropbox/MTK/src/mtk_robin_bc_descriptor_2d.cc" bodystart="495" bodyend="562"/>
        <references refid="classmtk_1_1UniStgGrid2D_1a1442eaf219f099d0ebf46a170fdebf92" compoundref="mtk__uni__stg__grid__2d_8cc" startline="235" endline="238">mtk::UniStgGrid2D::south_bndy</references>
        <references refid="classmtk_1_1UniStgGrid2D_1a2d182866a398aba8e4829590e85bf939" compoundref="mtk__uni__stg__grid__2d_8cc" startline="220" endline="223">mtk::UniStgGrid2D::num_cells_x</references>
        <references refid="classmtk_1_1DenseMatrix_1a53f3afb3b6a8d21854458aaa9663cc74" compoundref="mtk__dense__matrix_8cc" startline="339" endline="342">mtk::DenseMatrix::num_rows</references>
        <references refid="classmtk_1_1DenseMatrix_1a41747502d468c6728a4be31501b16e0e" compoundref="mtk__dense__matrix_8cc" startline="344" endline="347">mtk::DenseMatrix::num_cols</references>
        <references refid="group__c01-roots_1ga26407c24d43b6b95480943340d285c71" compoundref="mtk__roots_8h" startline="127">mtk::kOne</references>
        <references refid="classmtk_1_1DenseMatrix_1a4b23ecbebd970b5eea915dbb50691024" compoundref="mtk__dense__matrix_8cc" startline="354" endline="364">mtk::DenseMatrix::GetValue</references>
        <references refid="group__c01-roots_1gaf39c2d851a2db744f4feb1c5ab3ec2cf" compoundref="mtk__roots_8h" startline="128">mtk::kTwo</references>
        <references refid="classmtk_1_1DenseMatrix_1a784ce5784109ac86bfb9d8562b334b13" compoundref="mtk__dense__matrix_8cc" startline="366" endline="377">mtk::DenseMatrix::SetValue</references>
        <references refid="classmtk_1_1UniStgGrid2D_1a65a78cfc80ffdbeb282ed57af4dc5cb4" compoundref="mtk__uni__stg__grid__2d_8cc" startline="250" endline="253">mtk::UniStgGrid2D::delta_y</references>
        <references refid="classmtk_1_1UniStgGrid2D_1aed05a801cc9a76dba0ff203cea58a61a" compoundref="mtk__uni__stg__grid__2d_8cc" startline="245" endline="248">mtk::UniStgGrid2D::num_cells_y</references>
        <references refid="classmtk_1_1UniStgGrid2D_1afe1ead253cdeb5503e0489eba8fd84e2" compoundref="mtk__uni__stg__grid__2d_8cc" startline="240" endline="243">mtk::UniStgGrid2D::north_bndy</references>
      </memberdef>
      <memberdef kind="function" id="classmtk_1_1RobinBCDescriptor2D_1a2f99cdd8bda2bc46cf259bb96ef4bd49" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool mtk::RobinBCDescriptor2D::ImposeOnSouthBoundaryWithSpace</definition>
        <argsstring>(const Lap2D &amp;lap, const UniStgGrid2D &amp;grid, DenseMatrix &amp;matrix, const Real &amp;time=kZero) const </argsstring>
        <name>ImposeOnSouthBoundaryWithSpace</name>
        <param>
          <type>const <ref refid="classmtk_1_1Lap2D" kindref="compound">Lap2D</ref> &amp;</type>
          <declname>lap</declname>
        </param>
        <param>
          <type>const <ref refid="classmtk_1_1UniStgGrid2D" kindref="compound">UniStgGrid2D</ref> &amp;</type>
          <declname>grid</declname>
        </param>
        <param>
          <type><ref refid="classmtk_1_1DenseMatrix" kindref="compound">DenseMatrix</ref> &amp;</type>
          <declname>matrix</declname>
        </param>
        <param>
          <type>const <ref refid="group__c01-roots_1gac080bbbf5cbb5502c9f00405f894857d" kindref="member">Real</ref> &amp;</type>
          <declname>time</declname>
          <defval><ref refid="group__c01-roots_1ga59a451a5fae30d59649bcda274fea271" kindref="member">kZero</ref></defval>
        </param>
        <briefdescription>
<para>Imposes the condition on the south boundary. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">lap</parametername>
</parameternamelist>
<parameterdescription>
<para>Laplacian operator on the matrix. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">grid</parametername>
</parameternamelist>
<parameterdescription>
<para>Grid upon which impose the desired boundary condition. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">matrix</parametername>
</parameternamelist>
<parameterdescription>
<para>Input matrix with the Laplacian operator. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">time</parametername>
</parameternamelist>
<parameterdescription>
<para>Current time snapshot. Default is kZero. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
<para><orderedlist>
<listitem><para>Impose the Dirichlet condition first.</para></listitem></orderedlist>
</para><para><xrefsect id="todo_1_todo000028"><xreftitle>Todo</xreftitle><xrefdescription><para>Impose Harmonic mean on the corners for the case when the generated space is available, for all poles. </para></xrefdescription></xrefsect></para><para><orderedlist>
<listitem><para>Impose the Neumann condition. </para></listitem></orderedlist>
</para>        </inbodydescription>
        <location file="/home/esanchez/Dropbox/MTK/include/mtk_robin_bc_descriptor_2d.h" line="320" column="1" bodyfile="/home/esanchez/Dropbox/MTK/src/mtk_robin_bc_descriptor_2d.cc" bodystart="284" bodyend="310"/>
        <references refid="classmtk_1_1UniStgGrid2D_1a2d182866a398aba8e4829590e85bf939" compoundref="mtk__uni__stg__grid__2d_8cc" startline="220" endline="223">mtk::UniStgGrid2D::num_cells_x</references>
        <references refid="classmtk_1_1UniStgGrid2D_1ab2f70cf5cd0a2d5486992d9f2f8baa4a" compoundref="mtk__uni__stg__grid__2d_8cc" startline="230" endline="233">mtk::UniStgGrid2D::discrete_domain_x</references>
        <references refid="classmtk_1_1DenseMatrix_1a784ce5784109ac86bfb9d8562b334b13" compoundref="mtk__dense__matrix_8cc" startline="366" endline="377">mtk::DenseMatrix::SetValue</references>
      </memberdef>
      <memberdef kind="function" id="classmtk_1_1RobinBCDescriptor2D_1afdf9cc19481303564a17c8c7157d57cb" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool mtk::RobinBCDescriptor2D::ImposeOnNorthBoundaryWithSpace</definition>
        <argsstring>(const Lap2D &amp;lap, const UniStgGrid2D &amp;grid, DenseMatrix &amp;matrix, const Real &amp;time=kZero) const </argsstring>
        <name>ImposeOnNorthBoundaryWithSpace</name>
        <param>
          <type>const <ref refid="classmtk_1_1Lap2D" kindref="compound">Lap2D</ref> &amp;</type>
          <declname>lap</declname>
        </param>
        <param>
          <type>const <ref refid="classmtk_1_1UniStgGrid2D" kindref="compound">UniStgGrid2D</ref> &amp;</type>
          <declname>grid</declname>
        </param>
        <param>
          <type><ref refid="classmtk_1_1DenseMatrix" kindref="compound">DenseMatrix</ref> &amp;</type>
          <declname>matrix</declname>
        </param>
        <param>
          <type>const <ref refid="group__c01-roots_1gac080bbbf5cbb5502c9f00405f894857d" kindref="member">Real</ref> &amp;</type>
          <declname>time</declname>
          <defval><ref refid="group__c01-roots_1ga59a451a5fae30d59649bcda274fea271" kindref="member">kZero</ref></defval>
        </param>
        <briefdescription>
<para>Imposes the condition on the north boundary. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">lap</parametername>
</parameternamelist>
<parameterdescription>
<para>Laplacian operator on the matrix. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">grid</parametername>
</parameternamelist>
<parameterdescription>
<para>Grid upon which impose the desired boundary condition. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">matrix</parametername>
</parameternamelist>
<parameterdescription>
<para>Input matrix with the Laplacian operator. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">time</parametername>
</parameternamelist>
<parameterdescription>
<para>Current time snapshot. Default is kZero. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
<para><orderedlist>
<listitem><para>Impose Dirichlet condition.</para></listitem></orderedlist>
</para><para>For each entry on the diagonal:</para><para>Evaluate next set spatial coordinates to evaluate the coefficient.</para><para>Evaluate and assign the Dirichlet coefficient.</para><para><orderedlist>
<listitem><para>Impose the Neumann condition. </para></listitem></orderedlist>
</para>        </inbodydescription>
        <location file="/home/esanchez/Dropbox/MTK/include/mtk_robin_bc_descriptor_2d.h" line="332" column="1" bodyfile="/home/esanchez/Dropbox/MTK/src/mtk_robin_bc_descriptor_2d.cc" bodystart="372" bodyend="397"/>
        <references refid="classmtk_1_1UniStgGrid2D_1aed05a801cc9a76dba0ff203cea58a61a" compoundref="mtk__uni__stg__grid__2d_8cc" startline="245" endline="248">mtk::UniStgGrid2D::num_cells_y</references>
        <references refid="classmtk_1_1UniStgGrid2D_1a2d182866a398aba8e4829590e85bf939" compoundref="mtk__uni__stg__grid__2d_8cc" startline="220" endline="223">mtk::UniStgGrid2D::num_cells_x</references>
        <references refid="classmtk_1_1UniStgGrid2D_1ab2f70cf5cd0a2d5486992d9f2f8baa4a" compoundref="mtk__uni__stg__grid__2d_8cc" startline="230" endline="233">mtk::UniStgGrid2D::discrete_domain_x</references>
        <references refid="classmtk_1_1DenseMatrix_1a784ce5784109ac86bfb9d8562b334b13" compoundref="mtk__dense__matrix_8cc" startline="366" endline="377">mtk::DenseMatrix::SetValue</references>
      </memberdef>
      <memberdef kind="function" id="classmtk_1_1RobinBCDescriptor2D_1adbfdfa9c6b93df8d23c50686b5b356ef" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool mtk::RobinBCDescriptor2D::ImposeOnWestBoundaryWithSpace</definition>
        <argsstring>(const Lap2D &amp;lap, const UniStgGrid2D &amp;grid, DenseMatrix &amp;matrix, const Real &amp;time=kZero) const </argsstring>
        <name>ImposeOnWestBoundaryWithSpace</name>
        <param>
          <type>const <ref refid="classmtk_1_1Lap2D" kindref="compound">Lap2D</ref> &amp;</type>
          <declname>lap</declname>
        </param>
        <param>
          <type>const <ref refid="classmtk_1_1UniStgGrid2D" kindref="compound">UniStgGrid2D</ref> &amp;</type>
          <declname>grid</declname>
        </param>
        <param>
          <type><ref refid="classmtk_1_1DenseMatrix" kindref="compound">DenseMatrix</ref> &amp;</type>
          <declname>matrix</declname>
        </param>
        <param>
          <type>const <ref refid="group__c01-roots_1gac080bbbf5cbb5502c9f00405f894857d" kindref="member">Real</ref> &amp;</type>
          <declname>time</declname>
          <defval><ref refid="group__c01-roots_1ga59a451a5fae30d59649bcda274fea271" kindref="member">kZero</ref></defval>
        </param>
        <briefdescription>
<para>Imposes the condition on the west boundary. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">lap</parametername>
</parameternamelist>
<parameterdescription>
<para>Laplacian operator on the matrix. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">grid</parametername>
</parameternamelist>
<parameterdescription>
<para>Grid upon which impose the desired boundary condition. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">matrix</parametername>
</parameternamelist>
<parameterdescription>
<para>Input matrix with the Laplacian operator. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">time</parametername>
</parameternamelist>
<parameterdescription>
<para>Current time snapshot. Default is kZero. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
<para><orderedlist>
<listitem><para>Impose the Dirichlet condition first.</para></listitem><listitem><para>Impose the Neumann condition. </para></listitem></orderedlist>
</para>        </inbodydescription>
        <location file="/home/esanchez/Dropbox/MTK/include/mtk_robin_bc_descriptor_2d.h" line="344" column="1" bodyfile="/home/esanchez/Dropbox/MTK/src/mtk_robin_bc_descriptor_2d.cc" bodystart="468" bodyend="493"/>
        <references refid="classmtk_1_1UniStgGrid2D_1a2d182866a398aba8e4829590e85bf939" compoundref="mtk__uni__stg__grid__2d_8cc" startline="220" endline="223">mtk::UniStgGrid2D::num_cells_x</references>
        <references refid="classmtk_1_1UniStgGrid2D_1aed05a801cc9a76dba0ff203cea58a61a" compoundref="mtk__uni__stg__grid__2d_8cc" startline="245" endline="248">mtk::UniStgGrid2D::num_cells_y</references>
        <references refid="classmtk_1_1UniStgGrid2D_1ac33a58d65105550dcf6f6b92b48b5105" compoundref="mtk__uni__stg__grid__2d_8cc" startline="260" endline="263">mtk::UniStgGrid2D::discrete_domain_y</references>
        <references refid="classmtk_1_1DenseMatrix_1a784ce5784109ac86bfb9d8562b334b13" compoundref="mtk__dense__matrix_8cc" startline="366" endline="377">mtk::DenseMatrix::SetValue</references>
      </memberdef>
      <memberdef kind="function" id="classmtk_1_1RobinBCDescriptor2D_1a37efc8077bf5ea4f28539da248dc2a41" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool mtk::RobinBCDescriptor2D::ImposeOnEastBoundaryWithSpace</definition>
        <argsstring>(const Lap2D &amp;lap, const UniStgGrid2D &amp;grid, DenseMatrix &amp;matrix, const Real &amp;time=kZero) const </argsstring>
        <name>ImposeOnEastBoundaryWithSpace</name>
        <param>
          <type>const <ref refid="classmtk_1_1Lap2D" kindref="compound">Lap2D</ref> &amp;</type>
          <declname>lap</declname>
        </param>
        <param>
          <type>const <ref refid="classmtk_1_1UniStgGrid2D" kindref="compound">UniStgGrid2D</ref> &amp;</type>
          <declname>grid</declname>
        </param>
        <param>
          <type><ref refid="classmtk_1_1DenseMatrix" kindref="compound">DenseMatrix</ref> &amp;</type>
          <declname>matrix</declname>
        </param>
        <param>
          <type>const <ref refid="group__c01-roots_1gac080bbbf5cbb5502c9f00405f894857d" kindref="member">Real</ref> &amp;</type>
          <declname>time</declname>
          <defval><ref refid="group__c01-roots_1ga59a451a5fae30d59649bcda274fea271" kindref="member">kZero</ref></defval>
        </param>
        <briefdescription>
<para>Imposes the condition on the east boundary. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">lap</parametername>
</parameternamelist>
<parameterdescription>
<para>Laplacian operator on the matrix. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">grid</parametername>
</parameternamelist>
<parameterdescription>
<para>Grid upon which impose the desired boundary condition. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">matrix</parametername>
</parameternamelist>
<parameterdescription>
<para>Input matrix with the Laplacian operator. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">time</parametername>
</parameternamelist>
<parameterdescription>
<para>Current time snapshot. Default is kZero. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
<para><orderedlist>
<listitem><para>Impose the Dirichlet condition first.</para></listitem><listitem><para>Impose the Neumann condition. </para></listitem></orderedlist>
</para>        </inbodydescription>
        <location file="/home/esanchez/Dropbox/MTK/include/mtk_robin_bc_descriptor_2d.h" line="356" column="1" bodyfile="/home/esanchez/Dropbox/MTK/src/mtk_robin_bc_descriptor_2d.cc" bodystart="564" bodyend="589"/>
        <references refid="classmtk_1_1UniStgGrid2D_1a2d182866a398aba8e4829590e85bf939" compoundref="mtk__uni__stg__grid__2d_8cc" startline="220" endline="223">mtk::UniStgGrid2D::num_cells_x</references>
        <references refid="classmtk_1_1UniStgGrid2D_1aed05a801cc9a76dba0ff203cea58a61a" compoundref="mtk__uni__stg__grid__2d_8cc" startline="245" endline="248">mtk::UniStgGrid2D::num_cells_y</references>
        <references refid="classmtk_1_1UniStgGrid2D_1ac33a58d65105550dcf6f6b92b48b5105" compoundref="mtk__uni__stg__grid__2d_8cc" startline="260" endline="263">mtk::UniStgGrid2D::discrete_domain_y</references>
        <references refid="classmtk_1_1DenseMatrix_1a784ce5784109ac86bfb9d8562b334b13" compoundref="mtk__dense__matrix_8cc" startline="366" endline="377">mtk::DenseMatrix::SetValue</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Impose Robin boundary conditions on the operators and on the grids. </para>    </briefdescription>
    <detaileddescription>
<para>This class presents an interface for the user to specify Robin boundary conditions on 2D mimetic operators and the grids they are acting on.</para><para><bold>Def.</bold> Let <formula id="72">$ u(\mathbf{x},t):\Omega\times [t_0, t_n]\mapsto\mathbb{R} $</formula> be the solution to an ordinary or partial differential equation of interest. We say that <formula id="76">$ u $</formula> satisfies a <bold>Robin boundary condition on</bold> <formula id="77">$ \partial\Omega $</formula> if and only if there exists <formula id="71">$ \beta(\mathbf{x},t):\Omega\times [t_0, t_n]\mapsto\mathbb{R} $</formula> so that: <formula id="78">\[ \forall t \in [t_0,t_n]\; \forall \mathbf{x} \in \partial\Omega: \delta(\mathbf{x},t)u(\mathbf{x},t) + \eta(\mathbf{x},t)(\hat{\mathbf{n}}\cdot\nabla u) = \beta(\mathbf{x},t). \]</formula></para><para>Intuitively, a <bold>Robin boundary condition</bold> is a constraint that must be satisfied by any linear combination of any scalar field <formula id="76">$ u $</formula> and its first normal derivative, in order for <formula id="76">$ u $</formula> to represent a unique solution to a given ordinary or partial differential equation of interest.</para><para>Instances of this class receive information about the coefficient functions and each condition for any subset of the boundary (west, east, south and north in 2D). These instances then handle the complexity of placing the coefficients in the differentiation matrices and the conditions in the grids.</para><para><simplesect kind="see"><para><ulink url="http://mathworld.wolfram.com/NormalVector.html">http://mathworld.wolfram.com/NormalVector.html</ulink> </para></simplesect>
</para>    </detaileddescription>
    <collaborationgraph>
      <node id="167">
        <label>T</label>
      </node>
      <node id="164">
        <label>mtk::RobinBCDescriptor2D</label>
        <link refid="classmtk_1_1RobinBCDescriptor2D"/>
        <childnode refid="165" relation="usage">
          <edgelabel>-east_coefficients_</edgelabel>
          <edgelabel>-west_coefficients_</edgelabel>
          <edgelabel>-south_coefficients_</edgelabel>
          <edgelabel>-north_coefficients_</edgelabel>
        </childnode>
      </node>
      <node id="166">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="167" relation="usage">
          <edgelabel>+elements</edgelabel>
        </childnode>
      </node>
      <node id="165">
        <label>std::vector&lt; CoefficientFunction1D &gt;</label>
        <childnode refid="166" relation="template-instance">
          <edgelabel>&lt; CoefficientFunction1D &gt;</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/esanchez/Dropbox/MTK/include/mtk_robin_bc_descriptor_2d.h" line="132" column="1" bodyfile="/home/esanchez/Dropbox/MTK/include/mtk_robin_bc_descriptor_2d.h" bodystart="132" bodyend="375"/>
    <listofallmembers>
      <member refid="classmtk_1_1RobinBCDescriptor2D_1aacf640e8d310f53fc9b0a10b66e04ab6" prot="private" virt="non-virtual"><scope>mtk::RobinBCDescriptor2D</scope><name>east_coefficients_</name></member>
      <member refid="classmtk_1_1RobinBCDescriptor2D_1a9b2b901adfa258a8e05788857de31c8a" prot="private" virt="non-virtual"><scope>mtk::RobinBCDescriptor2D</scope><name>east_condition_</name></member>
      <member refid="classmtk_1_1RobinBCDescriptor2D_1aebe62f9ae39b02f9c029257d6e6381af" prot="public" virt="non-virtual"><scope>mtk::RobinBCDescriptor2D</scope><name>highest_order_diff_east</name></member>
      <member refid="classmtk_1_1RobinBCDescriptor2D_1aedb5c01c28158beb1689e1d70e10d8e5" prot="private" virt="non-virtual"><scope>mtk::RobinBCDescriptor2D</scope><name>highest_order_diff_east_</name></member>
      <member refid="classmtk_1_1RobinBCDescriptor2D_1a77d5d6b65f39bc74072fbc1d638eb899" prot="public" virt="non-virtual"><scope>mtk::RobinBCDescriptor2D</scope><name>highest_order_diff_north</name></member>
      <member refid="classmtk_1_1RobinBCDescriptor2D_1a7c715341c17da7e75fd8b3e54e2417c5" prot="private" virt="non-virtual"><scope>mtk::RobinBCDescriptor2D</scope><name>highest_order_diff_north_</name></member>
      <member refid="classmtk_1_1RobinBCDescriptor2D_1a6aaa1f5a3dc46446acd66209f1519410" prot="public" virt="non-virtual"><scope>mtk::RobinBCDescriptor2D</scope><name>highest_order_diff_south</name></member>
      <member refid="classmtk_1_1RobinBCDescriptor2D_1a9a408620e32bcdbd80fa83a0d1063872" prot="private" virt="non-virtual"><scope>mtk::RobinBCDescriptor2D</scope><name>highest_order_diff_south_</name></member>
      <member refid="classmtk_1_1RobinBCDescriptor2D_1ac75fc5f402e3f6e6d4f1e253f8ada98c" prot="public" virt="non-virtual"><scope>mtk::RobinBCDescriptor2D</scope><name>highest_order_diff_west</name></member>
      <member refid="classmtk_1_1RobinBCDescriptor2D_1a5d4d25e65ae74dbde678270933e2fa84" prot="private" virt="non-virtual"><scope>mtk::RobinBCDescriptor2D</scope><name>highest_order_diff_west_</name></member>
      <member refid="classmtk_1_1RobinBCDescriptor2D_1ae1df82802d541d3566f3d2659e4aaf05" prot="private" virt="non-virtual"><scope>mtk::RobinBCDescriptor2D</scope><name>ImposeOnEastBoundaryNoSpace</name></member>
      <member refid="classmtk_1_1RobinBCDescriptor2D_1a37efc8077bf5ea4f28539da248dc2a41" prot="private" virt="non-virtual"><scope>mtk::RobinBCDescriptor2D</scope><name>ImposeOnEastBoundaryWithSpace</name></member>
      <member refid="classmtk_1_1RobinBCDescriptor2D_1ac9564bc46c196cbf4720a0e4b93da8b0" prot="public" virt="non-virtual"><scope>mtk::RobinBCDescriptor2D</scope><name>ImposeOnGrid</name></member>
      <member refid="classmtk_1_1RobinBCDescriptor2D_1a0a26693f5265fcad978e7ba84e01ed69" prot="public" virt="non-virtual"><scope>mtk::RobinBCDescriptor2D</scope><name>ImposeOnLaplacianMatrix</name></member>
      <member refid="classmtk_1_1RobinBCDescriptor2D_1a3bc22c1d5a7a4d7c2130351cbfa35135" prot="private" virt="non-virtual"><scope>mtk::RobinBCDescriptor2D</scope><name>ImposeOnNorthBoundaryNoSpace</name></member>
      <member refid="classmtk_1_1RobinBCDescriptor2D_1afdf9cc19481303564a17c8c7157d57cb" prot="private" virt="non-virtual"><scope>mtk::RobinBCDescriptor2D</scope><name>ImposeOnNorthBoundaryWithSpace</name></member>
      <member refid="classmtk_1_1RobinBCDescriptor2D_1a82159bcca93555114532c5fa4d0fb3db" prot="private" virt="non-virtual"><scope>mtk::RobinBCDescriptor2D</scope><name>ImposeOnSouthBoundaryNoSpace</name></member>
      <member refid="classmtk_1_1RobinBCDescriptor2D_1a2f99cdd8bda2bc46cf259bb96ef4bd49" prot="private" virt="non-virtual"><scope>mtk::RobinBCDescriptor2D</scope><name>ImposeOnSouthBoundaryWithSpace</name></member>
      <member refid="classmtk_1_1RobinBCDescriptor2D_1af5dd24444e7eb14592a3c3feaf30d561" prot="private" virt="non-virtual"><scope>mtk::RobinBCDescriptor2D</scope><name>ImposeOnWestBoundaryNoSpace</name></member>
      <member refid="classmtk_1_1RobinBCDescriptor2D_1adbfdfa9c6b93df8d23c50686b5b356ef" prot="private" virt="non-virtual"><scope>mtk::RobinBCDescriptor2D</scope><name>ImposeOnWestBoundaryWithSpace</name></member>
      <member refid="classmtk_1_1RobinBCDescriptor2D_1a91fc1a7322ceda8f5409e1fe6490861c" prot="private" virt="non-virtual"><scope>mtk::RobinBCDescriptor2D</scope><name>north_coefficients_</name></member>
      <member refid="classmtk_1_1RobinBCDescriptor2D_1ad2a1e821b0c6d226a8b884baadcf1f1b" prot="private" virt="non-virtual"><scope>mtk::RobinBCDescriptor2D</scope><name>north_condition_</name></member>
      <member refid="classmtk_1_1RobinBCDescriptor2D_1a7cc1e6ca729b8b092eb73161eb244160" prot="public" virt="non-virtual"><scope>mtk::RobinBCDescriptor2D</scope><name>PushBackEastCoeff</name></member>
      <member refid="classmtk_1_1RobinBCDescriptor2D_1abc6e299516af5d1c5c2d04797875b446" prot="public" virt="non-virtual"><scope>mtk::RobinBCDescriptor2D</scope><name>PushBackNorthCoeff</name></member>
      <member refid="classmtk_1_1RobinBCDescriptor2D_1ad74c5d9f2c1d0359d350348ac2a7e61e" prot="public" virt="non-virtual"><scope>mtk::RobinBCDescriptor2D</scope><name>PushBackSouthCoeff</name></member>
      <member refid="classmtk_1_1RobinBCDescriptor2D_1a671a38d5ea78be8f0a88ccf034d09987" prot="public" virt="non-virtual"><scope>mtk::RobinBCDescriptor2D</scope><name>PushBackWestCoeff</name></member>
      <member refid="classmtk_1_1RobinBCDescriptor2D_1a00589475c84facde18949150bd6df961" prot="public" virt="non-virtual"><scope>mtk::RobinBCDescriptor2D</scope><name>RobinBCDescriptor2D</name></member>
      <member refid="classmtk_1_1RobinBCDescriptor2D_1a996e5ddee3a6f76cb5fa813bfff905d5" prot="public" virt="non-virtual"><scope>mtk::RobinBCDescriptor2D</scope><name>RobinBCDescriptor2D</name></member>
      <member refid="classmtk_1_1RobinBCDescriptor2D_1a94570f6e741bb00038c4bf81842d226c" prot="public" virt="non-virtual"><scope>mtk::RobinBCDescriptor2D</scope><name>set_east_condition</name></member>
      <member refid="classmtk_1_1RobinBCDescriptor2D_1ade17884e6a2636a7c6f989602a0052e0" prot="public" virt="non-virtual"><scope>mtk::RobinBCDescriptor2D</scope><name>set_north_condition</name></member>
      <member refid="classmtk_1_1RobinBCDescriptor2D_1a3fbdf58ba24861011fd852f0c642a4c8" prot="public" virt="non-virtual"><scope>mtk::RobinBCDescriptor2D</scope><name>set_south_condition</name></member>
      <member refid="classmtk_1_1RobinBCDescriptor2D_1aeaff87510dc1773effc0b5429579de23" prot="public" virt="non-virtual"><scope>mtk::RobinBCDescriptor2D</scope><name>set_west_condition</name></member>
      <member refid="classmtk_1_1RobinBCDescriptor2D_1a97335ce1103cb89ab0696d5ae2fc6d37" prot="private" virt="non-virtual"><scope>mtk::RobinBCDescriptor2D</scope><name>south_coefficients_</name></member>
      <member refid="classmtk_1_1RobinBCDescriptor2D_1aa45a1867ab80b81966f4221bbdb576ff" prot="private" virt="non-virtual"><scope>mtk::RobinBCDescriptor2D</scope><name>south_condition_</name></member>
      <member refid="classmtk_1_1RobinBCDescriptor2D_1a1f341dc6485b78acf5408d22c87a6dd1" prot="private" virt="non-virtual"><scope>mtk::RobinBCDescriptor2D</scope><name>west_coefficients_</name></member>
      <member refid="classmtk_1_1RobinBCDescriptor2D_1a3d04c776a3fa34cf4fea7c484e2056d6" prot="private" virt="non-virtual"><scope>mtk::RobinBCDescriptor2D</scope><name>west_condition_</name></member>
      <member refid="classmtk_1_1RobinBCDescriptor2D_1a75351b00a9e306f468d1733ce38dff5f" prot="public" virt="non-virtual"><scope>mtk::RobinBCDescriptor2D</scope><name>~RobinBCDescriptor2D</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
